var searchIndex = new Map(JSON.parse('[\
["polars",{"t":"SQCCQCHCCCEECCCEHIFGPPPPINNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNCCNNNNNNNNNNNNNNNNNNNNNNNNNNNCNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKRRRMMMMMMMMMMMMMMMMMMMMMMMMFFFIFKFFKFFFKFFINNNNNNNNNNMMNNNNNNNNNNNNNNNNNMNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNCNNNNNNNNNNNMMMMHNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFFKFFFMNMONNNHNGPPPNNNNNNNNNNNNNNNNNNNNNNNNNNKKNNNNNNNNNNNNKMKKNMFFKFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNCCPTTTTFPPTTFKFFGFGKPTTTPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFIKKNNNNNNMNNNNCNNNNNNNNNMNNNNNNNNNNNNNNNNNNNCHNNNNNNNMNNNNNNNNNMMNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNKIIFMNMNNONNNNNHHHNNHOHMNNNNPKKKKKKKKKKKKKKKKKKKKKKKKKIGPRKKRPPPPPPPKKPFFPNNNMMMMMMNMCNNNNNNNMMNNNNNNNNNNNNNNNNNNNOONNNNNNMMNNNNNNNMCMMCNNNNNNNNCMMCMMNNNNNNNNNNNNNNNOONNNNNOONNNMMMOOMNNNMNMMCMMMMMCMMNNMMMNNNNNNNNNNNNMNNNNNNNNNNNNNNNNCMKRRRKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHPPPGNHNNNNNNNNNNNNNNNNNNNHNNNNNKHCCCMMHHHHHHHHHKFFOOOOOOOOMMCHHHHHHHHHHPGPPRIKKKGGKPPPIPIFPFPPPPIFFPPFFKGFFJJGPPPPIFPPIFPPPPIFPPPPIFPPPFFIPPFPPPPPIFPPPIFKPFRRRSIIIKKPIFPPPIFPPPIFPPPIFPPPIFPKRRRPPPPPPPIFPFKPPPPPPPRPPPKPPIPFFRPRIIIIIKKKKRGPIKPPPIPFPPPPFPPPPIFGIPRFPPPIFPPPIFPPPIFPPPIFPPPGPPRRRRNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNMNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNHNNNNNNNNNNNNNNNNNNNNNNONNMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMMNFFFKGPFPPPGHMHHCCGPPPPGFNNNNNHNNHNNNNNNNHNCCPPPPPPFPPPPPPGIGPPPPPPPPNNNNNNNCNNNNNNNNNNNNQNNNNNNNNNNNNNNNHNNNNNNHQQQQHHNNNNNNNNNNNNNNOOOOJJJPFPPPPGFPFGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNONNOONNNNOONIPPFGPFGGFFIPPIPKPPPPPPPPPPPFPPPNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNCNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOKKHHHHHHHHMMMKMMPPGGPPPPPPPPPPPPPPPPPPPFPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNHHHNNNNNNNNNNNNNNNHHPPPGPPPPPPIPGPPKFFPPPPPGFKPPKPPPRIKPKKFIGFFGKKPFKKPKKGPPJPPPPPFFPPPPIIPPKPIFPFKPPPPPPIFGFIPPFFPFPTPPPFPPPFFGKFGFPPPFFKKKKKKKKKKKKKKFIKKKKKKKKKKKKFKKKKPGGPPPPPPPGFPPPPPPPPPPPKGFFFFFPPPPPPJJFKKPPPGRPPPPPPIKPFPPPFIPKFPPPPPPIFPKPPPPPPGPPPFPPPPPFIKFIFTPPPPPPPPGPPPGKFPPPPPPTTJJFFPPPIFIFIPIGPPPPPPPPPFPPPPPPPIFPPPPIFPPPPPPPKKKPRPGKPPPKPIPFFPGPFGGFFIPPPPFPPRRRPPPPSJPPTPPIIIIIPPFPKGKKKPIPPIFPPPPIFPPPPIFPPPPIFPPPPIFPPPGPKKKKKKPGFFFFFFFPPKPPPKPPPRPPPRRPRPPFFGKFPGGPPGFPFFFPPPGPIPIIPPPPPFKFFFPPPPPPIPPPPKPPPPPPFFKIPKFKKFFFKPGPFPPKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPTSPPPPKKPPPPPRPPPPPGPKPFGPPPPPPPPPPPFPPPPPPPGIFKKKPPIPFPPPPGFPPPRPRPFFRJTTGGFFFFFPRIIIIIPKGKKKKKIKKKRKPGPFPPKGPGTPPPPPPPGFKPKPPPPPPPGPPPPPPPPPFPPFFFFKFPPPPKIPTTPPTPFRPFFFFPPKIGPPPGPKKFFPKKKKKKKKPPPPPPPPPPPPKFIPPPPPPFFFPPPFPGPKFPPPPPPPFPIIPGKKPFPPPPPPFPPPFIPPGFPFPPPPPPPTPKPGKPFPPPPPPPIKPFGIPPPKPPPPPPPPPPRRPFPPPPPPIFPPPPIFPPPPIFPPPPIFSKPPPFPGPPGFPPFPPPPRRPPKKPPPFPFPPGGPPPPPPRRPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNHNNNNNNNNHNMNNNNMNNNCNHNNHNNONNNONNNHNMMNNMMMNNHNMMNNHMMHNMNNNMNNNMNNHNMNNHNOCNMNNNNMNNCNMMNNNNNMNNNNNMNNNNMMNNMHNNNHNNNHONNNNNNCNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCONOOOMNHMMNNHMNNNNNMMMNCNNNNNONNNMNMMOCMMHNHNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOCNNNOONNHNNOHHNHNNNNNNNNNNNHNOONONNNCOONHNHNNHHHHNNNNNNNNNHHNNNNNHHNONNNHNHHNHNHNHHNNONNOCOHCHOHHHHHNNNOMNONOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNHOQOHNNNNOOMNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHCNMNNOHHOHNNNNONNHHHNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNHHHNNNNMCNNNNNNNNNNNNNNNNNOONNCNNNMMMNNNNNNMMMMNNNNNNNNNNNNNNNNMNNNNHNNNCNOOCNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOOOHNOOHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMMNNNNNNNNNNNNMNNNNMNNNONNNMMNNNNMNNCMNNNNMMNOCNCNNNMNNNNNMNMNNNNNNMNNNMMNNNNHNNNNMNNMNNNNNNNHMMNNNNONMNNHHNNNNNNOMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOHMNNOMONONOHHNHNOOOONONNOHOOMNNHHNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNONNHHOCHNCHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNMMNNNMNNNNNHNHHNNNNNNNNHNNNNHNNHNNNNNNNHMNHMNNNOHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNOOHNNNNMNNONNNMMMHMNNNNNNNONHMNNNNNOONNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOHHNNNNHNNNNNNNNNNHNNHNNNNNNNHHHNNNNNNNOOHHNNNNNHNNNNNNMNOONNHNOOOOMONMOHNNNNNNOOONNOOMNNOMOOCNNNNONNMNNMOONMNNOOOOONONNNNNMNOOOONNCMNNMNONNNNHHNMNNNMMMMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNNNHNNNNNNNNNNNNNNNNNNNNNHNNMMHCNNOMNNOOOOONOOOOMNONONNNNNNNONNHOOONMMNOONNOMNNOONNNQQQQNONNHONNNONNNHNNNMNNNNNOOOONNNNNNNNNMMNNOOOOHNNMNMNNMNNNHHNHNNNNNNHHNHNNHOMMNNNNONMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNOOMNNOOOOOONNNNOMNNNNMMMNNNNNNNOOOOCONCMNNOMONNNOOOCMNNNNNNNNNNNNNMMNNNNMNNNNNNMNNNNNNNOOOOMNNNNNOMNMNNNNNCMNNNNNNMNNNMNNNNHNHNNONNONNNNNNMNNNNHNNNNNOONONCHNHNHNHNHNNNMNNNNMNNNONHNNNNNNNNNNNNNNMMMMMMMMNHNNOHOOONNNNNNNNMNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNOONNNNNMMMMNNNNNONNMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMCNMNNNNNNNNNNNNNNNNMMNOOCNONNNNNNONNNNNNNNNNMNONNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONOHNNOOONNNNNNMMNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNMNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNMMMMMMMMMMMMMMMMMMNNNHNNNNNNOCMOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOKKHHHHHHHHMMMKRRRKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHKKNNNNNNNNNNNNNNNNMFNNNNNNNNNNNNNNNNPGPFPPFPPPPPPPPPPPPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNOOOFKKKFKKKNNNNNONNMOMNMNNNNMMOMNMNNMNMNNMMNNNNNNNNNNNNNNNNNMNMCNNNONNKPPPPPGKNNNNNMNNNNNNNNNNNNNNNNNCNNNNNNNNFRKKNNNNNNNNNNHNNONMNNONNMNNNNNPPFGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOCNNNNNNNNNNPPFGPPPPOHCSSSSSPGPPRIKKKGGKPPPIPIFPFPPPPIFFPPFFKGFFJJGPPPPIFPPIFPPPPIFPPPPIFPPPFFIPPFPPPPPIFPPPIFKPFRRRSIIIKKPIFPPPIFPPPIFPPPIFPPPIFPKRRRPPPPPPPIFPFKPPPPPPPRPPPKPPIPFFRPRIIIIIKKKKRGPIKPPPIPFPPPPFPPPPIFGIPRFPPPIFPPPIFPPPIFPPPIFPPPGPPRRRRMNNMMNHNMCNNNNHMOMNNNMNNNMMNMNNHHHOMMMNNMNNNNNNNMMMFFFKGPFPPPGHMHHCCGPPPPGFHHHHHHKKKMMMFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKMMFNNNNNNNNNNNNNNNNNNOHHPPPPPPPPPPPPPPGPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPGPPPPGPPPPPPPPPPPPPPPPPPPPPPPPCCCCOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOGPPPGPPPPPGPPPNNNNNNNNNNNNNNNNNNNNNNPPPPGPPPNNNNNNNNNNNNNNNNNNNNNNHHHGPPHHHHHHHHFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNHNNNNHHNNNNNNNNNPPPGHHKKMNNNNNNNNNNNNNNNNNNNKHCCCMMHHHHHHHHHKFFOOOOOOOOMMKFKMNNNNNNNNNNNNNNNNNHNNNNNNNHNHNNHNNNNNHNHNHNHNHNNNNNFOOOOOKKNNPGKPKGRPPFFIKPNNNNNNNNCNNNNNCNNMNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNMNMMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNMNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNMNNNNNNNCNNNNNNNNNNNMNNNNNNMMNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNMNNNNMCNNNMNNNMNNNMNNNNNNMNNNNMNNNMNNNNNNNNNNNNNNNMNNMMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFINNNNNNNNNNNNNNNNNNNNNNKKKRHMMNCMMNMMNMMNMMNKKMNMNPPGNNNNNNNNNNNNNNNNNNNNNNNNN","n":["VERSION","apply_method_all_arrow_series","chunked_array","datatypes","df","docs","enable_string_cache","error","frame","functions","io","lazy","prelude","series","testing","time","using_string_cache","ChunkLenIter","ChunkedArray","ChunkedArrayLayout","Multi","MultiNoNull","Single","SingleNoNull","StructChunked","__clone_box","_apply_fields","_can_fast_explode","add","add","add","add","add","add","add","add","add","add","add","add","add_to","agg_list","agg_list","agg_list","agg_list","agg_list","agg_list","agg_list","agg_list","all","all_kleene","amortized_iter","amortized_iter","amortized_iter_with_name","amortized_iter_with_name","any","any_kleene","append","apply","apply","apply","apply","apply","apply","apply_amortized","apply_amortized_generic","apply_amortized_generic","apply_amortized_same_type","apply_as_ints","apply_as_ints","apply_in_place","apply_into_string_amortized","apply_kernel","apply_kernel","apply_kernel","apply_kernel","apply_kernel_cast","apply_kernel_cast","apply_kernel_cast","apply_kernel_cast","apply_mut","apply_mut","apply_mut","apply_nonnull_values_generic","apply_to_inner","apply_to_inner","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_values","apply_values","apply_values","apply_values","apply_values","apply_values","apply_views","arg_sort","arg_sort","arg_sort","arg_sort","arg_sort","arg_sort","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_unique","arg_unique","arg_unique","arg_unique","arg_unique","arithmetic","as_array","as_binary","as_binary","as_list","as_ref","as_ref_dtype","as_string","as_string","binary_zip_and_apply_amortized","bitand","bitand","bitand","bitor","bitor","bitor","bitxor","bitxor","bitxor","borrow","borrow","borrow_mut","borrow_mut","builder","cast","cast","cast_and_apply_in_place","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","checked_div","checked_div_num","chunk_lengths","chunk_lengths","chunks","chunks_mut","clear","clone","clone_into","clone_to_uninit","collect","collect_cheap_metadata","comparison","cont_slice","copy_metadata","copy_metadata_cast","data_views","default","deref","deref","deref_mut","deref_mut","div","div","div","div","divide","drop","drop","drop","drop_nulls","dtype","equal","equal","equal","equal","equal","equal","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","explode_and_offsets","explode_and_offsets","extend","field_by_name","fields_as_series","fill_null_with_values","fill_null_with_values","fill_null_with_values","filter","filter","filter","filter","first_non_null","float","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each","for_each_amortized","for_each_amortized","from","from","from","from_chunk_iter","from_chunk_iter_like","from_chunks","from_chunks_and_dtype","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter_options","from_iter_options","from_iter_options","from_iter_options","from_iter_options","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_values","from_iter_values","from_iter_values","from_iter_values","from_iter_values","from_iterator_par","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter_with_dtype","from_series","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice_options","from_slice_options","from_slice_options","from_slice_options","from_slice_options","from_trusted_len_iter_rev","from_trusted_len_iter_rev","from_vec","from_vec_validity","full","full","full","full","full","full","full","full","full_null","full_null","full_null","full_null","full_null","full_null","full_null","full_null","full_null","full_null_like","full_null_with_dtype","full_null_with_dtype","get","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_as_series","get_as_series","get_distinct_count","get_fast_explode_list","get_flags","get_inner","get_inner","get_max_value","get_min_value","get_object","get_object_unchecked","get_row_encoded","get_row_encoded_array","get_unchecked","get_values_size","get_values_size","get_values_size","get_values_size","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples_perfect","gt","gt","gt","gt","gt","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","has_nulls","head","init","init","init_rand","inner_dtype","inner_dtype","interior_mut_metadata","into","into","into_date","into_datetime","into_decimal","into_decimal_unchecked","into_duration","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_no_null_iter","into_series","into_series","into_time","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_optimal_aligned","is_sorted_flag","iter","iter_chunks","iter_offsets","iter_validities","iterator","last","last_non_null","layout","legacy_div","legacy_div","legacy_div_scalar","legacy_div_scalar","legacy_div_scalar_lhs","legacy_div_scalar_lhs","len","len","lhs_div","lhs_rem","lhs_sub","limit","lt","lt","lt","lt","lt","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","max","max","max_reduce","max_reduce","max_reduce","max_reduce","mean","mean","median","median","median","median_reduce","median_reduce","median_reduce","merge_metadata","metadata","metadata","metadata_arc","metadata_dyn","metadata_mut","metadata_owned_arc","min","min","min_max","min_reduce","min_reduce","min_reduce","min_reduce","mmap_slice","mmap_slice","mul","mul","mul","mul","multiply","n_chunks","n_unique","n_unique","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_vec","new_from_vec_and_validity","new_vec","new_with_dims","none_to_nan","not","not","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","null_count","object","offsets","offsets","ops","par_iter","par_iter","par_iter_indexed","par_iter_indexed","prod_reduce","prune_empty_chunks","quantile","quantile","quantile","quantile_reduce","quantile_reduce","quantile_reduce","rand_bernoulli","rand_normal","rand_standard_normal","rand_uniform","rechunk","ref_field","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","rem","rem","rem","rem","remainder","rename","reverse","reverse","reverse","reverse","reverse","reverse","reverse","reverse","rolling_map","rolling_map_float","sample_frac","sample_n","scatter","scatter","scatter","scatter_single","scatter_single","scatter_single","scatter_single","scatter_with","scatter_with","scatter_with","scatter_with","set","set","set","set","set_fast_explode","set_fast_explode_list","set_inner_dtype","set_null_count","set_sorted_flag","shift","shift","shift","shift","shift","shift","shift","shift","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shrink_to_fit","slice","slice","sort","sort","sort","sort","sort","sort","sort_with","sort_with","sort_with","sort_with","sort_with","sort_with","split_at","split_at","std","std_reduce","std_reduce","std_reduce","struct_fields","sub","sub","sub","sub","subtract","sum","sum","sum_reduce","sum_reduce","sum_reduce","tail","take","take","take_chunked_unchecked","take_opt_chunked_unchecked","take_unchecked","take_unchecked","take_unchecked","take_unchecked","take_unchecked","take_unchecked","take_unchecked","take_unchecked","temporal","to_bytes_hashes","to_canonical","to_decimal","to_logical","to_logical","to_ndarray","to_ndarray","to_owned","to_string_unchecked","to_vec","to_vec_null_aware","true_div","true_div","true_div_scalar","true_div_scalar","true_div_scalar_lhs","true_div_scalar_lhs","try_apply_amortized","try_apply_amortized_generic","try_apply_amortized_generic","try_apply_amortized_same_type","try_apply_amortized_to_list","try_apply_fields","try_apply_into_string_amortized","try_apply_nonnull_values_generic","try_from","try_from","try_from_chunk_iter","try_into","try_into","try_zip_and_apply_amortized","type_id","type_id","unique","unique","unique","unique","unique","unnest","unpack_series_matching_type","unset_fast_explode_list","value_unchecked","var","var_reduce","var_reduce","var_reduce","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vzip","vzip","width","with_chunk","with_chunk_like","with_chunks","with_name","with_nullable_idx","with_outer_validity","with_outer_validity_chunked","with_sorted_flag","wrapping_abs","wrapping_abs","wrapping_add","wrapping_add","wrapping_add_scalar","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul","wrapping_mul_scalar","wrapping_mul_scalar","wrapping_neg","wrapping_neg","wrapping_sub","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","wrapping_trunc_div_scalar_lhs","zip_and_apply_amortized","zip_and_apply_amortized_same_type","zip_outer_validity","zip_with","ArithmeticChunked","Out","Scalar","TrueDivOut","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","true_div","true_div_scalar","true_div_scalar_lhs","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","AnonymousListBuilder","AnonymousOwnedListBuilder","BinViewChunkedBuilder","BinaryChunkedBuilder","BooleanChunkedBuilder","ChunkedBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","NewChunkedArray","NullChunkedBuilder","PrimitiveChunkedBuilder","StringChunkedBuilder","__clone_box","__clone_box","__clone_box","__clone_box","append_array","append_empty","append_empty","append_iter","append_iter","append_iter_values","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_opt_array","append_opt_series","append_opt_series","append_opt_slice","append_option","append_option","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_slice","append_trusted_len_iter","append_trusted_len_iter","append_value","append_value","append_value","append_value","append_values_iter","append_values_iter","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fast_explode","fast_explode","fast_explode","fast_explode","fast_explode","field","field","field","field","field","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","fixed_size_list","from","from","from","from","from","from","from","from","from","from","from","from_iter_options","from_iter_values","from_slice","from_slice_options","get_list_builder","init","init","init","init","init","init","init","init","init","init","init","inner_array","inner_array","inner_array","inner_array","inner_array","into","into","into","into","into","into","into","into","into","into","into","list","new","new","new","new","new","new","new","new","new","new","new","new_with_values_type","shrink_to_fit","shrink_to_fit","shrink_to_fit","shrink_to_fit","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AnonymousListBuilder","AnonymousOwnedListBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","append_null","append_opt_series","append_series","builder","fast_explode","field","finish","get_list_builder","inner_array","CastOptions","NonStrict","Overflowing","Strict","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","strict","to_owned","try_from","try_into","type_id","vzip","ChunkedCollectInferIterExt","ChunkedCollectIterExt","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","Canonical","canonical","ChunkedCollectParIterExt","FromParIterWithDtype","collect_ca_with_dtype","from_par_iter_with_dtype","BoolIterNoNull","FixedSizeListIterNoNull","PolarsIterator","SomeIterator","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","from","from","from","init","init","init","into","into","into","into_iter","into_iter","into_iter","new","new","next","next","next","next_back","next_back","next_back","par","size_hint","size_hint","size_hint","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","list","string","Conflict","DEFAULT","DISTINCT_COUNT","FAST_EXPLODE_LIST","FAST_EXPLODE_LIST","IMMetadata","Keep","Locked","MAX_VALUE","MIN_VALUE","Metadata","MetadataCollectable","MetadataEnv","MetadataFlags","MetadataMerge","MetadataProperties","MetadataReadGuard","MetadataTrait","New","SORTED","SORTED_ASC","SORTED_DSC","Unlocked","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","all","all","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","collect_cheap_metadata","complement","complement","contains","contains","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","difference","difference","disabled","distinct_count","distinct_count","distinct_count","distinct_count_opt","drop","drop","drop","drop","drop","drop","drop","empty","empty","enabled","eq","eq","experimental_enabled","extend","extend","fast_explode_list","fast_explode_list_opt","filter_props","filter_props_cast","flags","flags_opt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_fallible_iter","from_fallible_iter","from_iter","from_iter","from_name","from_name","get_distinct_count","get_fast_explode_list","get_fast_explode_list","get_flags","get_flags","get_flags","get_max_value","get_min_value","get_mut","get_sorted_flag","init","init","init","init","init","init","init","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","into_iter","into_iter","is_all","is_all","is_empty","is_empty","is_empty","is_sorted","is_sorted_any","is_sorted_ascending","is_sorted_descending","iter","iter","iter_names","iter_names","log","logfile","max_value","max_value","max_value","max_value_opt","merge","min_value","min_value","min_value","min_value_opt","new","not","not","read","remove","remove","set","set","set_distinct_count","set_fast_explode_list","set_fast_explode_list","set_flags","set_max_value","set_min_value","set_sorted_ascending","set_sorted_descending","set_sorted_flag","set_sorted_flag","sorted","sorted_opt","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","take","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_read","try_write","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_cheap_metadata","write","ObjectArray","ObjectValueIter","PolarsObject","PolarsObjectSafe","__clone_box","_split_at_unchecked","arr_from_iter","arr_from_iter","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any","as_any","as_any_mut","borrow","borrow_mut","builder","check_bound","clone","clone_into","clone_to_uninit","data_type","deref","deref_mut","drop","eq","equal","fmt","from","full_null","get","get_dtype","if_then_else","if_then_else_broadcast_both","if_then_else_broadcast_false","if_then_else_broadcast_true","init","into","into_iter","is_null_unchecked","is_valid_unchecked","is_valid_unchecked","iter","iter","len","null_count","registry","set_polars_allow_extension","set_validity","slice","slice_typed","slice_typed_unchecked","slice_unchecked","split_at_boxed","split_at_boxed_unchecked","to_boxed","to_boxed","to_owned","try_arr_from_iter","try_arr_from_iter","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_from","try_into","type_id","type_name","type_name","validity","value","value_unchecked","value_unchecked","values","values_iter","values_iter","vzip","with_validity","with_validity","with_validity_typed","ObjectChunkedBuilder","append_null","append_null","append_option","append_value","append_value","append_value_from_any","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","new","to_series","try_from","try_into","type_id","vzip","AnonymousObjectBuilder","BuilderConstructor","ObjectConverter","ObjectRegistry","append_null","append_option","append_value","borrow","borrow_mut","builder_constructor","deref","deref_mut","drop","fmt","from","get_object_builder","get_object_converter","get_object_physical_type","init","into","is_object_builder_registered","physical_dtype","register_object_builder","to_series","try_from","try_into","type_id","vzip","Backward","ChunkAgg","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","FillNullLimit","FillNullStrategy","Forward","FuncRet","IsFirstDistinct","IsLastDistinct","Item","Max","MaxBound","Mean","Min","MinBound","None","One","Reinterpret","SlicedArray","Some","SortMultipleOptions","SortOptions","Zero","__clone_box","__clone_box","__clone_box","apply","apply_kernel","apply_kernel_cast","apply_to_slice","apply_values","arg_sort","arg_sort_multiple","arg_unique","arity","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast","cast_unchecked","cast_with_options","clone","clone","clone","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","descending","descending","drop","drop","drop","eq","eq","eq","equal","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","explode","explode_and_offsets","fill_null","fill_null_with_values","filter","float_sorted_arg_max","fmt","fmt","fmt","from","from","from","from","from","full","full","full_null","gather","get_any_value","get_any_value_unchecked","gt","gt_eq","hash","hash","hash","init","init","init","into","into","into","is_first_distinct","is_last_distinct","lt","lt_eq","maintain_order","maintain_order","max","mean","median","min","min_max","multithreaded","multithreaded","n_unique","new","new","new_from_index","not_equal","not_equal_missing","nulls_last","nulls_last","offsets","quantile","reinterpret_signed","reinterpret_unsigned","reverse","rolling_map","scatter_single","scatter_with","search_sorted","set","shift","shift_and_fill","slice_typed","slice_typed_unchecked","sort","sort","sort_with","std","sum","take","take_unchecked","to_byte_slices","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unique","var","vzip","vzip","vzip","with_maintain_order","with_maintain_order","with_multithreaded","with_multithreaded","with_nulls_last","with_nulls_last","with_nulls_last_multi","with_order_descending","with_order_descending","with_order_descending_multi","with_order_reversed","with_order_reversed","zip","zip_with","BinaryFnMut","Ret","Ret","Ret","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_into_string_amortized","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","Any","Left","Right","SearchSortedSide","__clone_box","binary_search_ca","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","lower_bound_chunks","to_owned","try_from","try_into","type_id","vzip","SlicedArray","_broadcast_bools","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_arr","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","descending","descending","maintain_order","maintain_order","multithreaded","multithreaded","nulls_last","nulls_last","slice_typed","slice_typed_unchecked","conversion","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","parse_fixed_offset","parse_time_zone","time_to_time64ns","validate_time_zone","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","Any","AnyValue","Array","Array","Array","ArrayChunked","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","Binary","Binary","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","Boolean","Boolean","BooleanChunked","BooleanType","CatIter","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalType","CompatLevel","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","Date","Date32","Date64","DateChunked","DateType","Datetime","Datetime","DatetimeChunked","DatetimeType","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","Duration","Duration","DurationChunked","DurationType","Enum","Enum","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float16","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","HashMap","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8Chunked","Int8Type","Interval","IntoScalar","IsNested","IsObject","IsStruct","LargeBinary","LargeList","LargeUtf8","Lexical","List","List","List","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","Null","Null","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Second","SmartString","StaticArray","Str","String","String","StringChunked","StringOwned","StringType","Struct","Struct","Struct","StructOwned","StructType","Time","Time","Time32","Time64","TimeChunked","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","Union","Unknown","Unknown","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_can_fast_unique","_iter_struct_av","_materialize_struct_av","_with_fast_unique","add","add","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","append","append","append_null","append_value","arg_sort","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_borrowed","as_date_iter","as_datetime_iter","as_ref","as_ref","as_ref_dtype","as_slice","as_time_iter","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxed","build_local","call_categorical_merge_operation","cast","cast","cast_leaf","cast_time_unit","cast_time_unit","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","categorical","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","coerce","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","contains_categoricals","contains_objects","contains_views","create_enum_data_type","data_type","days","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","divide","divide","divide","divide","divide","divide","divide","divide","divide","divide","divide","divide","drain_iter_and_finish","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dtype","dtype","dtype","dtype","dtype","dtype","dtype","dtype","dtype","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equal","equal","equal","equal_missing","equal_missing","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","field","find","finish","finish","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arrow","from_cats_and_rev_map_unchecked","from_duration","from_duration_options","from_global_indices_unchecked","from_naive_date","from_naive_date_options","from_naive_datetime","from_naive_datetime_options","from_naive_time","from_naive_time_options","from_owned","from_string_to_enum","from_vec","from_zeroable_vec","full","full_null","full_null","get","get","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_categories","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_optional","get_rev_map","get_shape","get_str","get_unchecked","get_unchecked","gt","gt","gt","gt_eq","gt_eq","gt_eq","hash","hash","hash","hash","hash","hash","hash","hash_impl","hour","hours","implode","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner_dtype","inner_dtype","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_scalar","into_series","into_series","into_series","into_series","into_series","into_series","into_static","is_array","is_binary","is_bool","is_boolean","is_categorical","is_decimal","is_empty","is_enum","is_enum","is_float","is_float","is_global","is_integer","is_integer","is_known","is_list","is_local","is_logical","is_nested","is_nested_null","is_nested_null","is_null","is_null","is_numeric","is_numeric","is_object","is_ord","is_primitive","is_signed_integer","is_signed_integer","is_string","is_struct","is_temporal","is_unsigned_integer","is_unsigned_integer","is_view","iter","iter_str","last","leaf_dtype","len","len","lt","lt","lt","lt_eq","lt_eq","lt_eq","make_categoricals_compatible","make_list_categoricals_compatible","matches_schema_type","materialize","max_reduce","merge_dtypes","merge_map","microseconds","milliseconds","min_reduce","minute","minutes","mul","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","n_unique","name","name","name","nanosecond","nanoseconds","new","new","new","new","new","new","new","new","new","new","new","new","new","new_logical","newest","next","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","null_count","oldest","parse_from_str_slice","parse_from_str_slice","partial_cmp","partial_cmp","physical","physical","precision","register_value","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","round","round","same_src","scale","second","seconds","set_name","set_time_unit","set_time_unit","set_time_unit_and_time_zone","set_time_zone","size_hint","sort","sort_with","strftime","strftime","strftime","strict_cast","sub","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","time_unit","time_unit","time_zone","to_arrow","to_arrow","to_arrow","to_arrow","to_arrow_field","to_ascii","to_enum","to_global","to_local","to_logical_type","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_scale","to_string","to_string","to_string","to_string","to_string","to_string","tot_eq","truncate","truncate","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_extract","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_strict_cast","try_to_arrow","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","underlying_physical_type","unique","uses_lexical_ordering","value","value_counts","value_unchecked","value_within_range","values_iter","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_capacity","with_capacity","with_validity_typed","zero","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","call_categorical_merge_operation","finish","make_categoricals_compatible","make_list_categoricals_compatible","revmap","string_cache","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","borrow","borrow_mut","default","deref","deref_mut","disable_string_cache","drop","drop","enable_string_cache","from","hold","init","into","try_from","try_into","type_id","using_string_cache","vzip","eager","lazy","CategoricalRemappingWarning","ColumnNotFound","ComputeError","Context","Duplicate","Err","ErrString","IO","InvalidOperation","MapWithoutReturnDtypeWarning","NoData","Ok","OutOfBounds","PolarsError","PolarsResult","PolarsWarning","SQLInterface","SQLSyntax","SchemaFieldNotFound","SchemaMismatch","ShapeMismatch","StringCacheMismatch","StructFieldNotFound","UserWarning","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","constants","context","context_trace","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","feature_gated","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","get_warning_function","init","init","init","into","into","into","map_err","polars_bail","polars_ensure","polars_err","polars_warn","set_warning_function","to_compute_err","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","error","error","msg","msg","FALSE","LENGTH_LIMIT_MSG","TRUE","Any","DataFrame","First","Ignore","Last","None","NullStrategy","PhysRecordBatchIter","Propagate","RecordBatchIter","UniqueKeepStrategy","__clone_box","__clone_box","__clone_box","_add_columns","_apply_columns","_apply_columns_par","_filter_seq","_select_impl","_select_impl_unchecked","_slice_and_realloc","align_chunks","apply","apply_at_idx","as_single_chunk","as_single_chunk_par","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chunk_lengths","clear","clone","clone","clone","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","column","columns","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop_in_place","drop_many","drop_many_amortized","drop_nulls","dtypes","empty","empty_with_arrow_schema","empty_with_schema","eq","eq","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","explode","explode_impl","extend","fields","fill_null","filter","fmt","fmt","fmt","fmt","from","from","from","from","from","from_fallible_iter","from_iter","from_rows","from_rows_and_schema","from_rows_iter_and_schema","get","get_column_index","get_column_names","get_column_names_owned","get_columns","get_columns_mut","get_row","get_row_amortized","get_row_amortized_unchecked","get_supertype","group_by","group_by","group_by_dynamic","group_by_stable","group_by_with_series","hash","head","height","hstack","hstack_mut","hstack_mut_unchecked","index","index","index","index","index","index","index","index","init","init","init","init","init","insert_column","into","into","into","into","into","into_iter","into_iter","into_struct","is_duplicated","is_empty","is_unique","iter","iter_chunks","iter_chunks","iter_chunks_physical","lazy","len","max_horizontal","mean_horizontal","min_horizontal","n_chunks","n_chunks","new","new_no_checks","new_no_length_checks","next","next","null_count","pipe","pipe_mut","pipe_with_args","pop","ptr_equal","rename","replace","replace_column","replace_or_add","reverse","rolling","row","sample_frac","sample_n","sample_n_literal","schema","schema_equal","select","select_at_idx","select_by_range","select_physical","select_series","select_with_schema","select_with_schema_unchecked","set_column_names","shape","shift","should_rechunk","shrink_to_fit","size_hint","size_hint","slice","slice","slice_par","sort","sort_in_place","split_at","split_at","split_chunks","split_chunks_by_n","sum_horizontal","tail","take","take_unchecked","take_unchecked_impl","to_df","to_ndarray","to_owned","to_owned","to_owned","to_string","transpose","try_apply","try_apply_at_idx","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_rows_iter_and_schema","try_get_column_index","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unique","unique_impl","unique_stable","unnest","unpivot","unpivot2","upsample","upsample_stable","vstack","vstack_mut","vzip","vzip","vzip","vzip","vzip","width","with_column","with_column_and_schema","with_column_unchecked","with_row_index","with_row_index_mut","UnpivotArgs","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","index","init","into","on","streamable","to_owned","try_from","try_into","type_id","value_name","variable_name","vzip","BorrowIdxItem","Count","First","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","Idx","Idx","IdxItem","Implode","IntoGroupsProxy","Last","Max","Mean","Median","Min","NUnique","NanMax","NanMin","Quantile","Slice","Slice","SlicedGroups","Std","Sum","Var","__clone_box","__clone_box","__clone_box","__clone_box","agg_list","aggregations","all","apply","as_list_chunked","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","count","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","df","drive_unindexed","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expr","first","first","first","first_mut","fmt","fmt","fmt","fmt","fmt","fmt_group_by_column","from","from","from","from","from","from","from","from","from","from","from","from","from","from_fallible_iter","from_iter","from_par_iter","get","get_groups","get_groups_mut","group_count","group_tuples","groups","idx_mut","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_idx","into_iter","into_iter","into_iter","into_par_iter","into_par_iter","into_par_iter","is_empty","is_empty","is_sorted_flag","iter","iter","keys","keys_sliced","last","len","len","max","mean","median","min","n_unique","new","new","next","nth","par_apply","par_iter","par_iter","quantile","select","slice","sort","sort","std","sum","take_group_firsts","take_group_lasts","take_groups","take_groups_mut","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unroll","unwrap_idx","unwrap_slice","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","include_nulls","groups","rolling","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","PhysicalAggExpr","evaluate","root_name","All","All","AnyValueBuffer","AnyValueBufferTrusted","Boolean","Boolean","Date","Datetime","Duration","Float32","Float32","Float64","Float64","Int16","Int16","Int32","Int32","Int64","Int64","Int8","Int8","Null","Null","Row","String","String","Struct","Time","UInt16","UInt16","UInt32","UInt32","UInt64","UInt64","UInt8","UInt8","__clone_box","__clone_box","__clone_box","add","add_unchecked_borrowed_physical","add_unchecked_owned_physical","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","coerce_data_type","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","from","from","infer_schema","init","init","init","into","into","into","into_series","into_series","new","new","new","reset","reset","rows_to_schema_first_non_null","rows_to_schema_supertypes","rows_to_supertypes","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","concat_df_diagonal","concat_df_horizontal","Abs","Add","Agg","AggExpr","AggGroups","Alias","All","AllColumns","AllColumnsSingle","AllHorizontal","AllowedOptimizations","Always","Ambiguous","And","AnonymousFunction","AnonymousScan","AnonymousScanArgs","AnonymousScanOptions","Any","Any","Any","Any","AnyHorizontal","AnyValue","Arc","ArgAgg","ArgUnique","ArgWhere","ArithmeticChunked","Array","Array","Array","Array","ArrayChunked","ArrayCollectIterExt","ArrayExpr","ArrayFromIter","ArrayFromIterDtype","ArrayNameSpace","ArrayRef","ArrowDataType","ArrowField","ArrowSchema","ArrowTimeUnit","AsBinary","AsList","AsOf","AsOfOptions","AsRefDataType","AsString","AsStruct","AsofJoin","AsofJoinBy","AsofStrategy","Auto","Average","BOOLEAN_RE","Backward","Backward","BackwardFill","Base64Encode","BaseUtcOffset","BatchedCsvReader","BatchedParquetReader","Binary","Binary","Binary","Binary","BinaryChunked","BinaryChunkedBuilder","BinaryExpr","BinaryExpr","BinaryNameSpaceImpl","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryUdfOutputField","BinaryView","Boolean","Boolean","Boolean","Boolean","Boolean","BooleanChunked","BooleanChunkedBuilder","BooleanFunction","BooleanType","BorrowIdxItem","Both","Both","Bounds","BoundsIter","Brotli","BrotliLevel","C","CLUSTER_WITH_COLUMNS","Cache","Cast","CastTimeUnit","CatIter","Categorical","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalFunction","CategoricalMergeOperation","CategoricalNameSpace","CategoricalOrdering","CategoricalType","Cbrt","Ceil","Century","ChainedThen","ChainedWhen","ChunkAgg","ChunkAggSeries","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkId","ChunkJoinOptIds","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","ChunkedArray","ChunkedBuilder","ChunkedCollectInferIterExt","ChunkedCollectIterExt","ChunkedSet","Clip","ClosedInterval","ClosedWindow","Coalesce","CoalesceColumns","Column","ColumnNotFound","Columns","Columns","Combine","CommentPrefix","CompatLevel","ComputeError","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","Context","ConvertTimeZone","Count","Count","CountMatches","Cross","CrossJoin","CsvEncoding","CsvParseOptions","CsvReadOptions","CsvReader","CsvWriter","CsvWriterOptions","CumCount","CumMax","CumMin","CumProd","CumSum","DSTOffset","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataFrame","DataFrameJoinOps","DataFrameOps","DataFrameScan","DataPoint","DataPoint","DataType","DataType","Date","Date","Date","Date","Date32","Date64","DateChunked","DateMethods","DateTime","DateType","Datetime","Datetime","Datetime","DatetimeArgs","DatetimeChunked","DatetimeFunction","DatetimeMethods","DatetimeType","Day","Decimal","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dense","DfTake","Dictionary","Diff","Distinct","Divide","DropNans","DropNulls","DslPlan","Dtype","DtypeColumn","Duplicate","Duration","Duration","Duration","Duration","Duration","Duration","DurationArgs","DurationChunked","DurationMethods","DurationType","DynArgs","DynamicGroupOptions","EAGER","Earliest","EndsWith","Enum","Enum","Eq","EqValidity","Err","Exclude","Excluded","ExclusiveOr","Explode","Explode","Expr","ExprEvalExtension","ExprNameNameSpace","ExtContext","ExtendConstant","Extension","Extract","ExtractAll","ExtractGroups","FAST_PROJECTION","FILE_CACHING","FLOAT_RE","FLOAT_RE_DECIMAL","FalseT","Field","Field","FieldByIndex","FieldByName","FieldRef","FieldsMapper","FieldsNameMapper","FileMetaData","FileMetaDataRef","FillNull","FillNullLimit","FillNullStrategy","FillNullWithStrategy","Filter","Filter","Find","First","First","First","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float","Float16","Float32","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64","Float64Chunked","Float64Type","Floor","FloorDivide","Fortran","Forward","Forward","ForwardFill","Friday","FromData","FromDataBinary","FromDataUtf8","Full","FuncRet","Function","FunctionExpr","FunctionOutputField","Gather","GatherEvery","Generic","GetAnyValue","GetCategories","GetOutput","Global","GlobalRevMapMerger","GroupBy","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","GroupsToRows","Gt","GtEq","Gzip","GzipLevel","HConcat","HStack","HasViews","HashMap","HashMap","Head","HexEncode","Higher","Hour","IDX_DTYPE","INTEGER_RE","IO","IR","IS_ARROW","Idx","Idx","IdxArr","IdxCa","IdxItem","IdxSize","IdxType","Implode","Implode","InProcessQuery","IndexColumn","IndexOfSchema","IndexOrder","IndexToUsize","InitHashMaps","InitHashMaps2","Inner","InnerJoinIds","Int","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8","Int8Chunked","Int8Type","InterSect","Interpolate","InterpolateBy","InterpolationMethod","Interval","IntoGroupsProxy","IntoLazy","IntoListNameSpace","IntoScalar","IntoSeries","IntoVec","InvalidOperation","IpcCompression","IpcReader","IpcScanOptions","IpcStreamReader","IpcStreamWriter","IpcStreamWriterOption","IpcWriter","IpcWriterOptions","IsBetween","IsFinite","IsFirstDistinct","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLastDistinct","IsLeapYear","IsNan","IsNested","IsNotNan","IsNotNull","IsNull","IsObject","IsStruct","IsoYear","Item","Join","Join","JoinArgs","JoinBuilder","JoinCoalesce","JoinDispatch","JoinOptions","JoinSpecific","JoinType","JoinValidation","Json","JsonEncode","JsonFormat","JsonLineReader","JsonLines","JsonReader","JsonWriter","JsonWriterOptions","KeepColumns","KeepName","LZ4","Label","LargeBinary","LargeBinaryArray","LargeList","LargeListArray","LargeStringArray","LargeUtf8","Last","Last","Last","Latest","LazyCsvReader","LazyFileListReader","LazyFrame","LazyGroupBy","LazyJsonLineReader","Left","Left","Left","Left","Left","Left","LeftJoinIds","Len","LenBytes","LenChars","Lexical","LhsNumOps","Linear","Linear","List","List","List","List","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListChunked","ListExpr","ListFromIter","ListNameSpace","ListNameSpaceExtension","ListNameSpaceImpl","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","ListType","Literal","Literal","LiteralValue","Local","Logical","LogicalAnd","LogicalOr","LogicalType","LossyUtf8","Lower","LowerBound","Lowercase","Lt","LtEq","Lz4Raw","Lzo","ManyToMany","ManyToOne","Map","MapFunction","Max","Max","Max","Max","MaxBound","MaxHorizontal","Mean","Mean","Mean","MeanHorizontal","Median","Median","Microsecond","Microsecond","Microseconds","Midpoint","Millennium","Millisecond","Millisecond","Milliseconds","Min","Min","Min","Min","MinBound","MinHorizontal","Minus","Minute","Mode","Modulus","Monday","Month","Multi","MultipleFields","Multiply","NEW_STREAMING","NULL","NUnique","NUnique","Name","Named","NamedFrom","NamedFromOwned","NanMax","NanMin","Nanosecond","Nanosecond","Nanoseconds","Native","Nearest","Nearest","Nearest","Necessary","Negate","NestedType","Never","NewChunkedArray","NoData","NoNull","NonExistent","NonNumeric","None","None","None","None","None","None","Not","NotEq","NotEqValidity","Nth","Null","Null","Null","Null","Null","Null","Null","NullCount","NullValues","NullableChunkId","NullableIdxSize","NumOpsDispatch","NumOpsDispatchChecked","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","Ok","One","OneToMany","OneToOne","Operator","OptState","Or","Ordinal","OrdinalDay","Out","OutOfBounds","Output","Over","OwnedBatchedCsvReader","OwnedObject","OwnedPhysical","POLARS_TEMP_DIR_BASE_PATH","PREDICATE_PUSHDOWN","PROJECTION_PUSHDOWN","ParallelStrategy","ParquetCompression","ParquetOptions","ParquetReader","ParquetStatistics","ParquetWriteOptions","ParquetWriter","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","Plus","PolarsDataType","PolarsError","PolarsFloatType","PolarsIntegerType","PolarsIterator","PolarsNumericType","PolarsObject","PolarsResult","PolarsRound","PolarsTemporalGroupby","PolarsTruncate","PolarsType","PolarsUpsample","Pow","PowFunction","PrefixFields","PrimitiveChunkedBuilder","Quantile","Quantile","QuantileAggSeries","QuantileInterpolOptions","Quarter","QuoteStyle","ROW_ESTIMATE","Raise","Raise","Random","Random","Range","Range","Rank","RankMethod","RankOptions","Reinterpret","RenameAlias","RenameAliasFn","RenameFields","RepeatBy","Replace","Replace","ReplaceStrict","ReplaceTimeZone","Reshape","RevMapping","Reverse","Reverse","Right","Right","Right","Right","Right","Right","Rolling","RollingCovOptions","RollingExpr","RollingExprBy","RollingGroupOptions","RollingOptionsDynamicWindow","RollingOptionsFixedWindow","RollingQuantileParams","RollingSeries","RollingVarParams","Root","Round","Round","RoundSF","RoundSeries","RowGroupIterColumns","RowGroups","SIMPLIFY_EXPR","SLICE_PUSHDOWN","SQLInterface","SQLSyntax","STREAMING","Saturday","Scalar","Scalar","Scan","ScanArgsAnonymous","ScanArgsIpc","ScanArgsParquet","Schema","SchemaFieldNotFound","SchemaMismatch","SchemaNamesAndDtypes","SchemaRef","SearchSortedSide","Second","Second","Select","Selector","Selector","SerReader","SerWriter","SerializeOptions","Series","Series","SeriesBinaryUdf","SeriesJoin","SeriesMethods","SeriesOpsTime","SeriesRank","SeriesSealed","SeriesTrait","SeriesUdf","SetSortedFlag","ShapeMismatch","Shift","ShiftAndFill","ShrinkType","Single","Sink","Slice","Slice","Slice","Slice","Slice","SlicedArray","SlicedGroups","SmartString","Snappy","Some","Some","Sort","Sort","SortBy","SortMultipleOptions","SortOptions","SpecialEq","Split","SplitExact","SplitN","SplitNChars","Sqrt","StartBy","StartsWith","StaticArray","StatisticsOptions","Std","Std","Str","StrCat","String","String","String","StringCacheHolder","StringCacheMismatch","StringChunked","StringChunkedBuilder","StringExpr","StringFunction","StringMethods","StringNameSpaceImpl","StringOwned","StringType","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StrptimeOptions","Struct","Struct","Struct","StructArray","StructChunked","StructExpr","StructFieldNotFound","StructFunction","StructNameSpace","StructOwned","StructType","Sub","SubPlan","SuffixFields","Sum","Sum","SumHorizontal","Sunday","TYPE_COERCION","Tail","TakeChunked","TemporalExpr","TemporalFunction","TemporalMethods","Ternary","Then","Thursday","Time","Time","Time","Time","Time32","Time64","TimeChunked","TimeMethods","TimeStamp","TimeType","TimeUnit","TimeZone","Timestamp","Titlecase","ToDecimal","ToDummies","ToInteger","ToPhysical","ToString","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","TrueDivOut","TrueDivPolarsType","TrueDivide","TrueT","Truncate","Tuesday","UInt16","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","URL_ENCODE_CHAR_SET","UdfSchema","Uncompressed","Union","Union","UnionArgs","Unique","UniqueKeepStrategy","Unknown","Unknown","UnknownKind","UnpivotArgs","UpperBound","Uppercase","UserDefinedFunction","Utf8","Utf8","Utf8View","ValueCounts","ValueIterT","ValueT","Var","Var","VarAggSeries","VecHash","Wednesday","Week","WeekDay","When","Wildcard","Window","Window","WindowBound","WindowMapping","WindowType","WithFields","WithTimeUnit","Xor","Year","ZSTD","Zero","ZeroablePhysical","ZeroableValueT","Zstd","ZstdLevel","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_coalesce_full_join","_collect_post_opt","_create_left_df_from_slice","_full_join_from_series","_join_suffix_name","_split_at_unchecked","_take_chunked_unchecked","_take_chunked_unchecked_seq","_take_opt_chunked_unchecked","_take_opt_chunked_unchecked_seq","_to_dummies","_with_eager","_with_predicate","abs","abs","add","add","add","add_ms","add_ns","add_to","add_us","agg","agg_groups","aggregations","alias","all","all","all","all_horizontal","allocator","allow_parallel","allow_parallel","allows_predicate_pushdown","allows_projection_pushdown","allows_slice_pushdown","ambiguous","and","anonymous_scan","any","any_horizontal","append","append_null","append_null","append_opt_series","append_option","append_series","append_value","apply","apply","apply","apply_binary","apply_children","apply_kernel","apply_kernel_cast","apply_many","apply_many_private","apply_multiple","apply_to_slice","apply_values","arange","arced","arg_max","arg_max","arg_max","arg_max","arg_min","arg_min","arg_min","arg_min","arg_sort","arg_sort","arg_sort","arg_sort_by","arg_sort_multiple","arg_unique","arg_unique","arg_unique","arg_where","args","args","arity","arr","arr_from_iter","arr_from_iter","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","arr_from_iter_with_dtype","arr_from_iter_with_dtype","array","arrow_schema","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_value","as_binary","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_fd","as_list","as_ptr","as_raw_fd","as_ref","as_ref","as_ref_dtype","as_series","as_single_ptr","as_slice","as_string","as_struct","as_time","assume_init","assume_init","avg","backward_fill","base64_decode","base64_encode","base_utc_offset","batch_size","batched","batched","batched","batched","batched","batched_borrowed","binary","binary","binary_expr","bitand","bitand","bitand","bitand_assign","bitor","bitor","bitor_assign","bits","bits","bitxor","bitxor","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom_k","boxed","buffer","builder","cache","cache","cache","cache","call","call","call_categorical_merge_operation","call_udf","call_udf","call_unchecked","cancel","cast","cast","cast","cast","cast","cast","cast_all","cast_unchecked","cast_with_options","cast_with_options","cast_with_options","cat","cat","cause","cbrt","ceil","ceil","center","century","check_bound","check_schema","checked_div","checked_div","checked_div_num","chunk_lengths","chunk_size","chunkedarray","chunks","chunks_mut","clip","clip","clip_max","clip_max","clip_min","clip_min","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_inner","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","closed_window","closed_window","closed_window","cloud","cloud_options","cloud_options","cloud_options","cloud_options","cloud_options","cmp","cmp","coalesce","coalesce","coalesce","coalesce","coalesce_series","col","collect","collect_all","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","collect_concurrently","cols","column_order","column_orders","columns","columns_to_dummies","comment_prefix","compare","compare","complement","compression","compression","compression","compute_schema","concat","concat","concat_expr","concat_impl","concat_impl","concat_lf_diagonal","concat_lf_horizontal","concat_list","concat_str","contains","contains","contains","contains","contains","contains","contains_chunked","contains_chunked","contains_literal","convert_inner_type","convert_to_unsigned_index","count","count","count","count_matches","count_matches_many","count_rows","create_enum_data_type","create_left_df_chunked","created_by","cross_join","cross_join","cross_join_dfs","cum_count","cum_count","cum_fold_exprs","cum_max","cum_max","cum_min","cum_min","cum_prod","cum_prod","cum_reduce_exprs","cum_sum","cum_sum","cumulative_eval","data_page_size","data_type","data_type","data_type","datatypes","date_format","date_ranges","datetime","datetime","datetime_format","datetime_range","datetime_ranges","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","day","day","day","day","days","days","days","days_only","ddof","ddof","decimal_comma","decrement_strong_count","decrement_strong_count_in","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default_arrays","default_join_ids","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","descending","descending","descending","describe","describe_optimized_plan","describe_optimized_plan_tree","describe_plan","describe_plan_tree","describe_tree_format","description","deserialize","df","df","diagonal","diff","diff","diff","difference","display","distinct_count","distinct_count","div","div","divide","dot","downcast","downcast_unchecked","downgrade","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_nans","drop_no_validate","drop_nulls","drop_nulls","drop_nulls","dst_offset","dt","dt","dtype","dtype","dtype","dtype","dtype_col","dtype_cols","dtype_overwrite","duration","empty","empty","encode_hex","encode_hex_upper","encoding","ends_with","ends_with_chunked","ensure_duration_matches_data_type","ensure_is_constant_duration","ensure_matching_schema","ensure_sorted_arg","eol_char","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equal","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","eval","every","exact","exclude","exclude_dtype","execute","expand_paths","expand_paths_hive","expanded_from_single_directory","explain","explode","explode","explode","explode_and_offsets","expr","extend","extend_constant","extract","extract","extract_all","extract_all_many","extract_groups","fast_explode","fetch","fetch","fetch_blocking","field","field","field_by_index","field_by_name","field_by_names","fields","fields","fields_to_cast","fill_nan","fill_nan","fill_null","fill_null","fill_null","fill_null_with_strategy","fill_null_with_values","filter","filter","filter","filter","filter","find","find_chunked","find_literal","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish_no_glob","finish_no_glob","finish_no_glob","finish_with_scan_ops","finishes_this_batch","first","first","first","first","fixed_size_list","flatten","float_precision","float_scientific","float_sorted_arg_max","float_type","floor","floor","floor_div","floor_div_series","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_group_by_column","fmt_str","fn_params","fn_params","fold_exprs","force_parallel","force_parallel","format","format_str","forward_fill","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_data_default","from_data_unchecked_default","from_data_unchecked_default","from_fallible_iter","from_fallible_iter","from_fallible_iter","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter_binary_trusted_len","from_iter_binview_trusted_len","from_iter_bool_trusted_len","from_iter_options","from_iter_primitive_trusted_len","from_iter_trusted_length","from_iter_trusted_length","from_iter_utf8_trusted_len","from_iter_values","from_name","from_par_iter","from_par_iter","from_partitioned_ds","from_path","from_raw","from_raw_in","from_slice","from_slice_options","from_str","from_trusted_len_iter_rev","from_trusted_len_iter_rev","from_type","from_vec","from_vec","from_zeroable_vec","full","full","full","full","full_join","full_join","full_null","full_null","full_null","fun","function_expr","function_with_options","gather","gather","gather_every","ge","get","get","get","get","get","get","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_at_index","get_at_index_mut","get_categories","get_current_optimizations","get_datatype","get_dtype","get_earliest_bounds_ms","get_earliest_bounds_ns","get_earliest_bounds_us","get_field","get_field","get_field","get_fields","get_fields_lens","get_full","get_glob_start_idx","get_metadata","get_metadata","get_mut","get_mut_unchecked","get_names","get_names","get_names","get_names_and_dtypes","get_names_and_dtypes","get_names_and_dtypes","get_object","get_object_chunked_unchecked","get_output","get_overlapping_bounds_iter","get_parse_options","get_reader_bytes","get_schema","get_unchecked","get_unchecked","get_unchecked","glob","glob","glob","group_by","group_by_dynamic","group_by_dynamic","group_by_stable","group_by_values","group_by_windows","group_tuples","gt","gt","gt","gt_eq","gt_eq","has_header","has_nulls","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash_join_inner","hash_join_outer","head","head","head","hex_decode","hex_encode","hive_options","hive_options","hor_str_concat","hour","hour","hour","hour","hours","hours","how","how","idx","ignore_errors","impl_replace_time_zone","impl_replace_time_zone_fast","implode","in_nanoseconds_window","include_bom","include_bom","include_boundaries","include_file_paths","include_file_paths","include_header","include_header","increment_strong_count","increment_strong_count_in","index","index_cols","index_column","index_column","index_of","index_of","index_of","indexes_to_usizes","infer_file_schema","infer_schema_len","infer_schema_len","infer_schema_length","infer_schema_length","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","inner_array","inner_join","inner_join","inner_mut","input_fields","insert","insert_at_index","int_range","int_ranges","interpol","interpolate","interpolate","interpolate","interpolate_by","interpolate_by","interpolate_by","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_data","into_inner","into_inner","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_list_name_space","into_list_name_space","into_raw","into_raw_with_allocator","into_reader_with_file_handle","into_scalar","into_series","into_series","into_series","into_thrift","into_vec","into_vec","into_vec","is_all","is_arithmetic","is_asof","is_between","is_between","is_cloud_url","is_compressed","is_constant_duration","is_empty","is_empty","is_empty","is_empty","is_empty","is_finished","is_finite","is_first_distinct","is_first_distinct","is_first_distinct","is_full","is_full_days","is_in","is_in","is_infinite","is_last_distinct","is_last_distinct","is_last_distinct","is_leap_year","is_leap_year","is_leap_year","is_nan","is_not_nan","is_not_null","is_not_null","is_not_null","is_null","is_null","is_null","is_null","is_null_idx","is_nullable","is_positive_idx_uncertain","is_read_vectored","is_series","is_sorted","is_tty","is_valid_bit_pattern","is_valid_join","is_write_vectored","is_zero","iso_year","iso_year","iso_year","iter","iter","iter","iter","iter_dtypes","iter_dtypes_mut","iter_fields","iter_names","iter_names","join","join","join","join","join_asof_by","join_builder","join_literal","join_many","join_nulls","join_nulls","json_encode","keep","key_value_metadata","key_value_metadata","label","last","last","last","last","last","lazy","lazy","le","left_by","left_join","left_join","left_on","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","len","len","len","len","len","len","len","limit","limit","line_terminator","list","lit","lit","lit","lit","lit","logical_and","logical_or","logical_plan","logical_plan","low_memory","low_memory","low_memory","low_memory","low_memory","lower_bound","lst_arg_max","lst_arg_min","lst_concat","lst_diff","lst_get","lst_join","lst_lengths","lst_max","lst_mean","lst_median","lst_min","lst_n_unique","lst_reverse","lst_shift","lst_slice","lst_sort","lst_std","lst_sum","lst_unique","lst_unique_stable","lst_var","lt","lt","lt","lt_eq","lt_eq","maintain_order","maintain_order","maintain_order","maintain_order","maintain_order","maintain_order","make_categoricals_compatible","make_list_categoricals_compatible","make_mut","map","map","map","map_binary","map_children","map_datetime_dtype_timezone","map_dtype","map_dtype","map_dtypes","map_expr","map_field","map_fields","map_fields","map_list","map_list_multiple","map_many","map_many_private","map_multiple","map_numeric_to_float_dtype","map_parse_options","map_to_float_dtype","map_to_list_and_array_inner_dtype","map_to_list_supertype","map_to_supertype","materialize","materialize_empty_df","materialize_projection","max","max","max","max","max","max","max_reduce","max_reduce","max_value","max_value","maybe_decompress_bytes","mean","mean","mean","mean","mean","mean","median","median","median","median","median","median","median","median_reduce","median_reduce","memory_map","memory_map","memory_mapped","merge","merge_dtypes","merge_from_ref","metadata","metadata","method","microsecond","microseconds","microseconds","millennium","milliseconds","milliseconds","min","min","min","min","min","min","min_max","min_periods","min_periods","min_periods","min_reduce","min_reduce","min_value","min_value","minute","minute","minute","minute","minutes","minutes","missing_is_null","mode","mode","month","month","month","month","months","months_only","mul","mul","mul","multiply","multithreaded","multithreaded","n_chunks","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","n_threads","n_threads","n_unique","n_unique","n_unique","n_unique","n_unique","name","name","name","name","name","name","nan_max","nan_min","nan_propagating_aggregate","nanosecond","nanosecond","nanosecond","nanoseconds","nanoseconds","nanoseconds","ne","needs_checks","neg","neg","negate","negate_bitwise","negative","negative_to_usize","neq","neq_missing","nested_sum_type","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_cyclic","new_empty","new_from_index","new_from_index","new_from_str","new_in","new_inserting_at_index","new_int_range","new_multi","new_null","new_paths","new_paths","new_single","new_uninit","new_uninit_in","new_uninit_slice","new_uninit_slice_in","new_zeroed","new_zeroed_in","new_zeroed_slice","new_zeroed_slice_in","next","next","next_batch","next_batches","next_batches","next_batches","nodes","nodes_owned","not","not","not","not_equal","not_equal_missing","nth","null","null","null","null","null_count","null_count","null_count","null_count","null_count","null_values","nulls_last","nulls_last","num_rows","num_rows","offset","offset","offset","offsets","on","on","optimize","options","or","ordinal","ordinal","ordinal_day","ordinal_year","otherwise","otherwise","output_schema","over","over_with_options","overwrite_schema","parallel","parallel","parallel","parse","parse_from_str_slice","parse_from_str_slice","parse_from_str_slice","parse_options","parsed_int","partial_cmp","partial_cmp","path","paths","paths","paths","period","period","pi","pin","pin_in","polars_bail","polars_ensure","polars_err","polars_warn","pow","predicate","prefix","prefix_fields","private_left_join_multiple_keys","prob","prod_reduce","product","profile","projection","propagate_nulls","provide","ptr_eq","quantile","quantile","quantile","quantile","quantile_reduce","quantile_reduce","quarter","quarter","quarter","queue","quote_char","quote_char","quote_style","raise_if_empty","rank","rank","read","read_buf","read_parallel","read_to_end","read_to_string","read_varint","read_vectored","rechunk","rechunk","rechunk","rechunk","rechunk","rechunk","rechunk","rechunk","reduce_exprs","reinterpret_signed","reinterpret_unsigned","rem","rem","remainder","remove","remove","rename","rename","rename","rename_fields","repeat","repeat_by","repeat_by","replace","replace","replace","replace_all","replace_dtype","replace_literal","replace_literal_all","replace_or_default","replace_strict","replace_strict","replace_time_zone","reserve","reshape","resolve_homedir","return_type","reverse","reverse","reverse","reverse","reverse","reverse","right_by","right_on","rolling","rolling","rolling","rolling_map","rolling_map","rolling_map","rolling_map_float","rolling_max","rolling_max","rolling_max_by","rolling_max_by","rolling_mean","rolling_mean","rolling_mean_by","rolling_mean_by","rolling_median","rolling_median_by","rolling_min","rolling_min","rolling_min_by","rolling_min_by","rolling_quantile","rolling_quantile","rolling_quantile_by","rolling_quantile_by","rolling_std","rolling_std","rolling_std_by","rolling_std_by","rolling_sum","rolling_sum","rolling_sum_by","rolling_sum_by","rolling_var","rolling_var","rolling_var_by","rolling_var_by","round","round","round","round_ms","round_ns","round_sig_figs","round_sig_figs","round_us","row_group_size","row_groups","row_index","row_index","row_index","row_index","row_index","row_index","row_index","rows_left","rows_right","same_type","same_type","sample_frac","sample_n","sample_size","scan","scan_ipc","scan_ipc_files","scan_parquet","scan_parquet_files","scatter","scatter_single","scatter_with","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema_descr","schema_inference","schema_overwrite","schema_with_arenas","search_sorted","second","second","second","second","seconds","seconds","seek","select","select_seq","separator","separator","serialize_options","series","set","set","set_cached_arena","set_dtype","set_dtype_at_index","set_low_memory","set_parallel","set_rechunk","set_rechunk","set_rechunk","set_rechunk","set_rechunk","set_sorted_flag","set_validity","shift","shift","shift","shift","shift","shift","shift_and_fill","shift_and_fill","shift_and_fill","shift_remove","shift_remove_index","should_coalesce","shrink_dtype","shrink_to_fit","shrink_to_fit","shuffle","sink_csv","sink_ipc","sink_json","sink_parquet","size_bytes","skip_rows","skip_rows","skip_rows","skip_rows_after_header","slice","slice","slice","slice","slice","slice","slice","slice_typed","slice_typed","slice_typed_unchecked","slice_typed_unchecked","slice_unchecked","slice_unchecked","sliced","sliced_unchecked","sort","sort","sort","sort","sort","sort","sort_by","sort_by_exprs","sort_with","sort_with","source","split","split_at","split_at_boxed","split_at_boxed_unchecked","split_exact","split_exact_inclusive","split_helper","split_inclusive","split_to_struct","splitn","sqrt","start_by","starts_with","starts_with_chunked","statistics","std","std","std","std","std","std","std_reduce","std_reduce","store","str","str_head","str_join","str_len_bytes","str_len_chars","str_reverse","str_slice","str_tail","strategy","streamable","strftime","strict","strict_cast","strings","strip_chars","strip_chars","strip_chars_end","strip_chars_end","strip_chars_start","strip_chars_start","strip_prefix","strip_prefix","strip_suffix","strip_suffix","strong_count","struct_","sub","sub","sub","sub","sub_assign","subtract","suffix","suffix","suffix","suffix","suffix_fields","sum","sum","sum","sum","sum","sum","sum_reduce","sum_reduce","super_type","symmetric_difference","sync_update","tail","tail","tail","tail","take","take","take_chunked_unchecked","take_opt_chunked_unchecked","take_slice","take_slice_unchecked","take_unchecked","take_unchecked","take_validity","ternary_expr","then","then","time_format","time_ranges","time_unit","time_unit","time_zone","timestamp","to_alp","to_alp","to_alp_optimized","to_any_value","to_array","to_arrow","to_boxed","to_byte_slices","to_dot","to_dummies","to_dummies","to_field","to_integer","to_list","to_lowercase","to_lowercase","to_opt","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_supertype","to_supertypes","to_titlecase","to_uppercase","to_uppercase","to_writer","to_writer","toggle","tolerance","tolerance_str","top_k","tot_eq_kernel","tot_eq_kernel_broadcast","tot_ne_kernel","tot_ne_kernel_broadcast","true_div","true_div_scalar","true_div_scalar_lhs","truncate","truncate_impl","truncate_ms","truncate_ms","truncate_ns","truncate_ns","truncate_ragged_lines","truncate_us","truncate_us","try_arr_from_iter","try_arr_from_iter","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_arr_from_iter_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_thrift","try_get","try_get_at_index","try_get_field","try_get_full","try_get_mut","try_index_of","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_reader_with_file_path","try_map_dtype","try_map_dtypes","try_map_expr","try_map_field","try_negative_to_usize","try_new","try_new","try_new","try_new","try_new","try_new_in","try_new_uninit","try_new_uninit_in","try_new_zeroed","try_new_zeroed_in","try_parse_dates","try_pin","try_pin_in","try_project","try_serialize","try_unwrap","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","udf","union","unique","unique","unique","unique","unique","unique","unique_stable","unique_stable","unique_stable","unique_stable","unnest","unpivot","unwrap","unwrap_or_clone","update","update_with_inference_result","upper_bound","upsample","upsample_stable","use_statistics","use_statistics","use_statistics","utf8","validate","validation","validity","validity","value","value","value_counts","value_counts","value_name","value_unchecked","values","values_iter","values_iter","var","var","var","var","var","var","var_reduce","var_reduce","variable_name","vec_hash","vec_hash_combine","version","view","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weak_count","week","week","week","weekday","weekday","weekday","weeks","weeks","weeks_only","weights","when","when","when","window_size","window_size","window_size","with","with_ambiguous","with_batch_size","with_batch_size","with_batch_size","with_cache","with_capacity","with_capacity","with_capacity","with_chunk_size","with_chunk_size","with_cloud_options","with_cloud_options","with_cluster_with_columns","with_coalesce","with_column","with_column","with_columns","with_columns","with_columns","with_columns","with_columns","with_columns","with_columns_seq","with_comment_prefix","with_comment_prefix","with_compat_level","with_compat_level","with_compression","with_compression","with_compression","with_compression","with_context","with_data_page_size","with_date_format","with_datetime_format","with_day","with_days","with_decimal_comma","with_decimal_comma","with_dtype","with_dtype_overwrite","with_dtype_overwrite","with_encoding","with_encoding","with_eol_char","with_eol_char","with_extension","with_fields","with_float_precision","with_float_scientific","with_fractional_seconds","with_glob","with_has_header","with_has_header","with_hive_partition_columns","with_hive_partition_columns","with_hms","with_hms","with_hour","with_hours","with_ignore_errors","with_ignore_errors","with_ignore_errors","with_ignore_errors","with_ignore_errors","with_include_file_path","with_include_file_path","with_include_file_paths","with_include_file_paths","with_infer_schema_length","with_infer_schema_length","with_infer_schema_length","with_json_format","with_json_format","with_line_terminator","with_low_memory","with_low_memory","with_metadata","with_metadata","with_microsecond","with_microseconds","with_milliseconds","with_minute","with_minutes","with_missing_is_null","with_missing_is_null","with_month","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_threads","with_n_threads","with_nanoseconds","with_new_streaming","with_null_value","with_null_values","with_null_values","with_optimizations","with_parse_options","with_path","with_path","with_paths","with_paths","with_paths","with_predicate","with_predicate","with_predicate_pushdown","with_projection","with_projection","with_projection","with_projection","with_projection","with_projection","with_projection_pushdown","with_quote_char","with_quote_char","with_quote_char","with_quote_style","with_raise_if_empty","with_raise_if_empty","with_rechunk","with_rechunk","with_rechunk","with_rechunk","with_rechunk","with_row_estimate","with_row_group_size","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_same_dtype","with_sample_size","with_schema","with_schema","with_schema","with_schema","with_schema","with_schema_modify","with_schema_overwrite","with_schema_overwrite","with_schema_overwrite","with_schema_overwrite","with_second","with_seconds","with_separator","with_separator","with_separator","with_simplify_expr","with_skip_rows","with_skip_rows","with_skip_rows_after_header","with_skip_rows_after_header","with_slice","with_slice_pushdown","with_statistics","with_streaming","with_suffix","with_time_format","with_time_unit","with_time_zone","with_truncate_ragged_lines","with_truncate_ragged_lines","with_try_parse_dates","with_try_parse_dates","with_type_coercion","with_validity","with_validity","with_validity_typed","with_validity_typed","with_weeks","with_year","without_optimizations","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","write","write_df_to_file","write_df_to_file","write_partitioned_dataset","write_varint","write_vectored","xor","year","year","year","year","zip","zip_with","expr","input","input","interpol","propagate_nans","propagate_nans","quantile","closed","ignore_nulls","ignore_nulls","aggs","apply","args","by_column","cache_hits","contexts","df","dsl","expr","exprs","file_info","file_options","filter","function","hive_parts","id","input","input","input","input","input","input","input","input","input","input","input","input_left","input_right","inputs","inputs","keys","left_on","len","maintain_order","node","offset","options","options","options","options","options","options","output_schema","paths","payload","predicate","predicate","right_on","scan_type","schema","slice","sort_options","version","by","by","data_type","expr","expr","expr","expr","expr","falsy","function","function","function","function","idx","input","input","input","input","left","length","offset","op","options","options","options","options","options","order_by","output_type","partition_by","predicate","returns_scalar","right","sort_options","truthy","decimals","digits","has_max","has_min","limit","limit","method","n","name","normalize","offset","options","parallel","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","include_nulls","groups","rolling","data_type","high","low","error","error","msg","msg","delimiter","delimiter","dtype","ignore_nulls","ignore_nulls","inclusive","literal","literal","literal","n","n","pat","strict","strict","time_unit","time_zone","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","BinaryFnMut","Ret","Ret","Ret","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_into_string_amortized","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","ArrayNameSpace","AsArray","array_arg_max","array_arg_min","array_get","array_join","array_max","array_median","array_min","array_n_unique","array_reverse","array_shift","array_sort","array_std","array_sum","array_unique","array_unique_stable","array_var","as_array","BinaryNameSpace","borrow","borrow_mut","contains_literal","deref","deref_mut","drop","ends_with","from","init","into","size_bytes","starts_with","try_from","try_into","type_id","vzip","Boolean","Buffer","Categorical","CategoricalField","Date","Datetime","DatetimeField","DecimalFloat32","DecimalFloat64","Float32","Float64","Int16","Int32","Int64","Int8","UInt16","UInt32","UInt64","UInt8","Utf8","Utf8Field","add","add_null","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","dtype","from","from","from","from","init","init","init","init","init_buffers","into","into","into","into","into_series","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","buf","time_unit","time_zone","CategoricalNameSpace","DateMethods","DatetimeMethods","DurationMethods","RollingOptionsDynamicWindow","SeriesOpsTime","StringMethods","TimeMethods","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_time","closed_window","day","day","days","fn_params","hour","hour","hours","is_leap_year","is_leap_year","iso_year","iso_year","microseconds","milliseconds","min_periods","minute","minute","minutes","month","month","nanosecond","nanosecond","nanoseconds","ordinal","ordinal","parse_from_str_slice","parse_from_str_slice","parse_from_str_slice","quarter","quarter","rolling_max","rolling_max_by","rolling_mean","rolling_mean_by","rolling_min","rolling_min_by","rolling_quantile","rolling_quantile_by","rolling_std","rolling_std_by","rolling_sum","rolling_sum_by","rolling_var","rolling_var_by","second","second","seconds","string","week","week","weekday","window_size","year","year","AsString","DateDMY","DateYMD","DatetimeDMY","DatetimeYMD","DatetimeYMDZ","Pattern","StringMethods","__clone_box","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_string","as_time","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","infer","init","into","is_inferable","to_owned","try_from","try_into","type_id","vzip","DatetimeInfer","Error","StrpTimeParser","TryFromWithUnit","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","from","infer_pattern_single","init","into","logical_type","parse","parse_bytes","parse_bytes","parse_bytes","pattern","to_owned","try_from","try_from_with_unit","try_from_with_unit","try_from_with_unit","try_into","type_id","vzip","Aws","Azure","CloudOptions","CloudType","File","Gcp","Hf","Http","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","equivalent","equivalent","equivalent","fmt","from","from","from_str","from_untyped_config","hash","init","init","into","into","max_retries","options","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_max_retries","Aws","Azure","CloudOptions","CloudType","File","Gcp","Hf","Http","max_retries","is_compressed","magic","GZIP","ZLIB0","ZLIB1","ZLIB2","ZSTD","Any","AnyValue","Array","Array","Array","ArrayChunked","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","Binary","Binary","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","Boolean","Boolean","BooleanChunked","BooleanType","CatIter","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalType","CompatLevel","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","Date","Date32","Date64","DateChunked","DateType","Datetime","Datetime","DatetimeChunked","DatetimeType","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","Duration","Duration","DurationChunked","DurationType","Enum","Enum","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float16","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","HashMap","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8Chunked","Int8Type","Interval","IntoScalar","IsNested","IsObject","IsStruct","LargeBinary","LargeList","LargeUtf8","Lexical","List","List","List","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","Null","Null","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Second","SmartString","StaticArray","Str","String","String","StringChunked","StringOwned","StringType","Struct","Struct","Struct","StructOwned","StructType","Time","Time","Time32","Time64","TimeChunked","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","Union","Unknown","Unknown","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_ref_dtype","as_slice","call_categorical_merge_operation","cast","cast_with_options","categorical","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","create_enum_data_type","dtype","dtype","finish","from_vec","from_zeroable_vec","full","full_null","get","get_any_value","get_any_value_unchecked","get_dtype","get_unchecked","get_unchecked","into_scalar","iter","last","make_categoricals_compatible","make_list_categoricals_compatible","merge_dtypes","name","new","new","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","value","value_unchecked","values_iter","with_capacity","with_capacity","with_validity_typed","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","call_categorical_merge_operation","finish","make_categoricals_compatible","make_list_categoricals_compatible","revmap","string_cache","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","impl_replace_time_zone","impl_replace_time_zone_fast","replace_time_zone","FromData","FromDataBinary","FromDataUtf8","from_data_default","from_data_unchecked_default","from_data_unchecked_default","DateLikeNameSpace","base_utc_offset","borrow","borrow_mut","cast_time_unit","century","combine","convert_time_zone","date","datetime","day","deref","deref_mut","drop","dst_offset","from","hour","init","into","is_leap_year","iso_year","microsecond","millennium","millisecond","minute","month","nanosecond","ordinal_day","quarter","replace_time_zone","round","second","strftime","time","timestamp","to_string","total_days","total_hours","total_microseconds","total_milliseconds","total_minutes","total_nanoseconds","total_seconds","truncate","try_from","try_into","type_id","vzip","week","weekday","with_time_unit","year","PhysicalAggExpr","evaluate","root_name","AnonymousBuilder","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","is_empty","new","push","push_null","try_from","try_into","type_id","vzip","width","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","Abs","All","AllHorizontal","Any","AnyHorizontal","ArgUnique","ArgWhere","ArrayExpr","AsStruct","BackwardFill","Base64Encode","BaseUtcOffset","BinaryExpr","Boolean","BooleanFunction","CastTimeUnit","Categorical","CategoricalFunction","Cbrt","Ceil","Century","Clip","Coalesce","Combine","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","ConvertTimeZone","CountMatches","CumCount","CumMax","CumMin","CumProd","CumSum","DSTOffset","Date","Datetime","DatetimeFunction","Day","Diff","DropNans","DropNulls","Duration","EndsWith","ExtendConstant","Extract","ExtractAll","ExtractGroups","FieldByIndex","FieldByName","FillNull","FillNullWithStrategy","Find","Floor","ForwardFill","FunctionExpr","GatherEvery","Generic","GetCategories","Head","HexEncode","Hour","Interpolate","InterpolateBy","IsBetween","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLeapYear","IsNan","IsNotNan","IsNotNull","IsNull","IsoYear","JsonEncode","LenBytes","LenChars","ListExpr","LowerBound","Lowercase","MaxHorizontal","MeanHorizontal","Microsecond","Millennium","Millisecond","MinHorizontal","Minute","Mode","Month","MultipleFields","Nanosecond","Negate","Not","NullCount","OrdinalDay","Pow","PowFunction","PrefixFields","Quarter","Random","Range","Rank","RenameFields","RepeatBy","Replace","Replace","ReplaceStrict","ReplaceTimeZone","Reshape","Reverse","Reverse","RollingExpr","RollingExprBy","Round","Round","RoundSF","Second","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Slice","Split","SplitExact","SplitN","Sqrt","StartsWith","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StructExpr","StructFunction","SuffixFields","SumHorizontal","Tail","TemporalExpr","TemporalFunction","Time","TimeStamp","Titlecase","ToDecimal","ToInteger","ToPhysical","ToString","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","Truncate","Unique","UpperBound","Uppercase","ValueCounts","Week","WeekDay","WithFields","WithTimeUnit","Year","cat","pow","rolling","rolling_by","closed","ignore_nulls","ignore_nulls","decimals","digits","has_max","has_min","limit","limit","method","n","name","normalize","offset","options","parallel","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","delimiter","delimiter","dtype","ignore_nulls","ignore_nulls","inclusive","literal","literal","literal","n","n","pat","strict","strict","time_unit","time_zone","CategoricalFunction","GetCategories","Cbrt","Generic","PowFunction","Sqrt","Max","Mean","Min","Quantile","RollingFunction","Std","Sum","Var","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","fmt","fmt","from","hash","init","into","to_owned","to_string","try_from","try_into","type_id","vzip","MaxBy","MeanBy","MinBy","QuantileBy","RollingFunctionBy","StdBy","SumBy","VarBy","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","fmt","fmt","from","hash","init","into","to_owned","to_string","try_from","try_into","type_id","vzip","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","InterpolationMethod","Linear","Nearest","interpolate","interpolate_by","mode","ca_nan_agg","group_agg_nan_max_s","group_agg_nan_min_s","nan_max_s","nan_min_s","MutableNullArray","__clone_box","as_any","as_box","as_mut_any","borrow","borrow_mut","clone","clone_into","clone_to_uninit","data_type","default","deref","deref_mut","drop","extend_nulls","fmt","from","init","into","len","new","push_null","reserve","shrink_to_fit","to_owned","try_from","try_into","type_id","validity","vzip","SchemaInferenceResult","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","finish_infer_field_schema","fmt","from","get_estimated_n_rows","get_inferred_schema","infer_field_schema","infer_file_schema","init","into","to_owned","try_from","try_from_reader_bytes_and_options","try_into","type_id","vzip","with_inferred_schema","Any","Left","Right","SearchSortedSide","binary_search_ca","lower_bound_chunks","AsSeries","TemporalMethods","as_series","century","day","hour","is_leap_year","iso_year","millennium","minute","month","nanosecond","ordinal_day","ordinal_year","quarter","second","strftime","timestamp","to_string","week","weekday","year","SlicedArray","_broadcast_bools","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_arr","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","descending","descending","maintain_order","maintain_order","multithreaded","multithreaded","nulls_last","nulls_last","slice_typed","slice_typed_unchecked","AsString","SplitNChars","StringNameSpaceImpl","as_string","base64_decode","base64_encode","concat","contains","contains_chunked","contains_literal","count_matches","count_matches_many","extract","extract_all","extract_all_many","extract_groups","find","find_chunked","find_literal","hex_decode","hex_encode","hor_str_concat","replace","replace_all","replace_literal","replace_literal_all","split","split_exact","split_exact_inclusive","split_helper","split_inclusive","split_to_struct","splitn","str_head","str_join","str_len_bytes","str_len_chars","str_reverse","str_slice","str_tail","strip_chars","strip_chars","strip_chars_end","strip_chars_end","strip_chars_start","strip_chars_start","strip_prefix","strip_prefix","strip_suffix","strip_suffix","to_integer","to_lowercase","to_titlecase","to_uppercase","UserDefinedFunction","fun","input_fields","name","options","return_type","BinaryFromIter","Utf8FromIter","from_values_iter","from_values_iter","Ascending","BitRepr","ChunkCompare","Descending","IntoSeries","IsSorted","Item","Large","Not","Series","SeriesIter","SeriesPhysIter","SeriesTrait","Small","__clone_box","__clone_box","_try_from_arrow_unchecked","_try_from_arrow_unchecked_with_md","add","add","add","add","amortized_iter","append","arg_max","arg_min","arg_sort","arg_unique","arithmetic","array","array_ref","as_any","as_any_mut","as_list","as_mut","as_ref","as_ref","as_series","as_series","as_single_ptr","as_single_ptr","binary","binary_offset","bitand","bitor","bitxor","bool","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast","cast","cast_unchecked","cast_with_options","categorical","checked_div","checked_div","checked_div_num","chunk_lengths","chunk_lengths","chunks","chunks_mut","chunks_mut","clear","clone","clone","clone_inner","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","compute_len","date","datetime","decimal","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","div","drop","drop","drop","drop","drop_nulls","dtype","duration","eq","eq","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","extend","extend_constant","f32","f64","field","fill_null","filter","fmt","fmt","fmt","fmt_list","from","from","from","from","from","from","from","from","from","from_any_values","from_any_values_and_dtype","from_arrow","from_arrow_chunks","from_chunks_and_dtype_unchecked","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","full_null","gather_every","get","get_data_ptr","get_flags","get_leaf_array","get_metadata","get_object","get_object_chunked_unchecked","get_unchecked","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","has_nulls","hash","head","i16","i32","i64","i8","idx","implementations","implode","init","init","init","init","into","into","into","into","into_frame","into_iter","into_series","into_series","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_series","is_series","is_sorted_flag","iter","iter_chunks","len","len","limit","list","lit","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","max","max_reduce","mean","mean_reduce","median","median_reduce","min","min_reduce","mul","mul","mul","mul","n_chunks","n_chunks","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_null","next","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","null","null_count","ops","phys_iter","product","quantile_reduce","rechunk","rem","rem","rem","rename","rename","reshape_array","reshape_list","reverse","reverse","rolling_map","sample_frac","sample_n","select_chunk","set_sorted_flag","shift","shrink_to_fit","shrink_to_fit","shuffle","size_hint","slice","slice","sort","sort_with","split_at","split_at","std","std_reduce","str","str_value","strict_cast","struct_","sub","sub","sub","sub","sum","sum_reduce","sum_reduce","tail","take","take_chunked_unchecked","take_opt_chunked_unchecked","take_slice","take_slice_unchecked","take_unchecked","take_unchecked_from_slice","time","to_arrow","to_dummies","to_float","to_owned","to_owned","to_physical_repr","to_string","try_add_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_mul_owned","try_set_metadata","try_sub_owned","type_id","type_id","type_id","type_id","u16","u32","u64","u8","unique","unique_stable","unpack","var","var_reduce","vzip","vzip","vzip","vzip","with_name","wrapping_trunc_div_scalar","zip_with","AmortSeries","ArrayBox","__clone_box","as_ref","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deep_clone","deref","deref_mut","drop","from","init","into","new","swap","to_owned","try_from","try_into","type_id","vzip","with_array","LhsNumOps","NumOpsDispatch","NumOpsDispatchInner","Output","_struct_arithmetic","add","add_to","add_to","checked","div","divide","divide","mul","multiply","multiply","rem","remainder","remainder","sub","subtract","subtract","NumOpsDispatchChecked","NumOpsDispatchCheckedInner","checked_div","checked_div","checked_div_num","checked_div_num","Drop","Ignore","NullBehavior","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","to_owned","try_from","try_into","type_id","vzip"],"q":[[0,"polars"],[17,"polars::chunked_array"],[851,"polars::chunked_array::arithmetic"],[879,"polars::chunked_array::builder"],[1140,"polars::chunked_array::builder::list"],[1157,"polars::chunked_array::cast"],[1187,"polars::chunked_array::collect"],[1201,"polars::chunked_array::float"],[1203,"polars::chunked_array::from_iterator_par"],[1207,"polars::chunked_array::iterator"],[1262,"polars::chunked_array::iterator::par"],[1264,"polars::chunked_array::metadata"],[1552,"polars::chunked_array::object"],[1629,"polars::chunked_array::object::builder"],[1652,"polars::chunked_array::object::registry"],[1680,"polars::chunked_array::ops"],[1887,"polars::chunked_array::ops::arity"],[1923,"polars::chunked_array::ops::float_sorted_arg_max"],[1925,"polars::chunked_array::ops::gather"],[1928,"polars::chunked_array::ops::search_sorted"],[1959,"polars::chunked_array::ops::sort"],[1966,"polars::chunked_array::ops::sort::arg_bottom_k"],[1967,"polars::chunked_array::ops::sort::arg_sort_multiple"],[1975,"polars::chunked_array::ops::sort::options"],[1988,"polars::chunked_array::temporal"],[1996,"polars::chunked_array::temporal::conversion"],[1999,"polars::datatypes"],[3406,"polars::datatypes::categorical"],[3423,"polars::datatypes::categorical::revmap"],[3429,"polars::datatypes::categorical::string_cache"],[3448,"polars::docs"],[3450,"polars::error"],[3538,"polars::error::PolarsError"],[3542,"polars::error::constants"],[3545,"polars::frame"],[3808,"polars::frame::explode"],[3838,"polars::frame::group_by"],[4078,"polars::frame::group_by::GroupByMethod"],[4079,"polars::frame::group_by::GroupsProxy"],[4081,"polars::frame::group_by::aggregations"],[4094,"polars::frame::group_by::expr"],[4097,"polars::frame::row"],[4207,"polars::functions"],[4209,"polars::prelude"],[9512,"polars::prelude::AggExpr"],[9519,"polars::prelude::BooleanFunction"],[9522,"polars::prelude::DslPlan"],[9576,"polars::prelude::Expr"],[9611,"polars::prelude::FunctionExpr"],[9633,"polars::prelude::GroupByMethod"],[9634,"polars::prelude::GroupsProxy"],[9636,"polars::prelude::LiteralValue"],[9639,"polars::prelude::PolarsError"],[9643,"polars::prelude::StringFunction"],[9657,"polars::prelude::TemporalFunction"],[9659,"polars::prelude::aggregations"],[9672,"polars::prelude::arity"],[9708,"polars::prelude::array"],[9727,"polars::prelude::binary"],[9744,"polars::prelude::buffer"],[9818,"polars::prelude::buffer::Buffer"],[9821,"polars::prelude::cat"],[9822,"polars::prelude::chunkedarray"],[9888,"polars::prelude::chunkedarray::string"],[9928,"polars::prelude::chunkedarray::string::infer"],[9959,"polars::prelude::cloud"],[10009,"polars::prelude::cloud::options"],[10018,"polars::prelude::compression"],[10020,"polars::prelude::compression::magic"],[10025,"polars::prelude::datatypes"],[10297,"polars::prelude::datatypes::categorical"],[10314,"polars::prelude::datatypes::categorical::revmap"],[10320,"polars::prelude::datatypes::categorical::string_cache"],[10324,"polars::prelude::datetime"],[10327,"polars::prelude::default_arrays"],[10333,"polars::prelude::dt"],[10385,"polars::prelude::expr"],[10388,"polars::prelude::fixed_size_list"],[10408,"polars::prelude::float_sorted_arg_max"],[10410,"polars::prelude::function_expr"],[10583,"polars::prelude::function_expr::BooleanFunction"],[10586,"polars::prelude::function_expr::FunctionExpr"],[10608,"polars::prelude::function_expr::StringFunction"],[10622,"polars::prelude::function_expr::TemporalFunction"],[10624,"polars::prelude::function_expr::cat"],[10626,"polars::prelude::function_expr::pow"],[10630,"polars::prelude::function_expr::rolling"],[10660,"polars::prelude::function_expr::rolling_by"],[10690,"polars::prelude::gather"],[10693,"polars::prelude::interpolate"],[10697,"polars::prelude::interpolate_by"],[10698,"polars::prelude::mode"],[10699,"polars::prelude::nan_propagating_aggregate"],[10704,"polars::prelude::null"],[10735,"polars::prelude::schema_inference"],[10762,"polars::prelude::search_sorted"],[10768,"polars::prelude::series"],[10790,"polars::prelude::sort"],[10797,"polars::prelude::sort::arg_bottom_k"],[10798,"polars::prelude::sort::arg_sort_multiple"],[10806,"polars::prelude::sort::options"],[10819,"polars::prelude::strings"],[10873,"polars::prelude::udf"],[10879,"polars::prelude::utf8"],[10883,"polars::series"],[11317,"polars::series::amortized_iter"],[11341,"polars::series::arithmetic"],[11362,"polars::series::arithmetic::checked"],[11368,"polars::series::ops"],[11396,"dyn_clone::sealed"],[11397,"polars_core::datatypes"],[11398,"polars_core::chunked_array"],[11399,"polars_error"],[11400,"core::result"],[11401,"polars_core::series"],[11402,"core::ops::function"],[11403,"num_traits"],[11404,"num_traits::cast"],[11405,"polars_core::series::arithmetic::borrowed"],[11406,"polars_core::frame::group_by::proxy"],[11407,"polars_core::chunked_array::object"],[11408,"core::option"],[11409,"polars_arrow::array"],[11410,"alloc::boxed"],[11411,"core::iter::traits::iterator"],[11412,"polars_core::chunked_array::list::iterator"],[11413,"core::marker"],[11414,"alloc::borrow"],[11415,"polars_core::series::amortized_iter"],[11416,"alloc::string"],[11417,"polars_core::datatypes::dtype"],[11418,"polars_arrow::array::binview::view"],[11419,"polars_core::chunked_array::ops::sort::options"],[11420,"polars_core::chunked_array::cast"],[11421,"polars_core::series::arithmetic::borrowed::checked"],[11422,"core::slice::iter"],[11423,"core::iter::adapters::map"],[11424,"alloc::vec"],[11425,"polars_core::chunked_array::metadata"],[11426,"core::iter::traits::double_ended"],[11427,"polars_arrow::offset"],[11428,"core::fmt"],[11429,"core::iter::traits::collect"],[11430,"polars_utils::iter::fallible"],[11431,"core::convert"],[11432,"core::borrow"],[11433,"polars_core::chunked_array::from_iterator"],[11434,"polars_arrow::bitmap::immutable"],[11435,"rayon::iter"],[11436,"polars_arrow::pushable"],[11437,"polars_arrow::trusted_len"],[11438,"polars_core::datatypes::any_value"],[11439,"polars_arrow::array::binary"],[11440,"std::sync::rwlock"],[11441,"polars_core::chunked_array::logical"],[11442,"polars_core::datatypes::time_unit"],[11443,"core::iter::traits::exact_size"],[11444,"polars_core::series::series_trait"],[11445,"polars_core::chunked_array::iterator"],[11446,"polars_core::scalar"],[11447,"polars_core::chunked_array::metadata::guard"],[11448,"polars_core::chunked_array::metadata::interior_mutable"],[11449,"alloc::sync"],[11450,"polars_core::chunked_array::metadata::md_trait"],[11451,"core::ops::range"],[11452,"polars_core::datatypes::field"],[11453,"polars_arrow::legacy::kernels::rolling::no_nulls"],[11454,"polars_core::chunked_array::ops::rolling_window"],[11455,"polars_ops::chunked_array::scatter"],[11456,"polars_utils::index"],[11457,"ahash::random_state"],[11458,"polars_utils::hashing"],[11459,"ndarray"],[11460,"ndarray::dimension::dim"],[11461,"ndarray::data_repr"],[11462,"either"],[11463,"core::any"],[11464,"polars_core::frame"],[11465,"polars_core::chunked_array::arithmetic::numeric"],[11466,"polars_core::chunked_array::builder::list::anonymous"],[11467,"polars_core::chunked_array::builder::list::boolean"],[11468,"polars_core::chunked_array::builder::list::primitive"],[11469,"polars_core::chunked_array::builder::list"],[11470,"polars_core::chunked_array::builder"],[11471,"polars_core::chunked_array::builder::list::binary"],[11472,"polars_core::chunked_array::builder::list::null"],[11473,"polars_core::chunked_array::builder::string"],[11474,"polars_arrow::array::binview"],[11475,"polars_core::chunked_array::builder::boolean"],[11476,"polars_core::chunked_array::builder::null"],[11477,"polars_core::chunked_array::builder::primitive"],[11478,"core::clone"],[11479,"polars_core::series::implementations::null"],[11480,"core::hash"],[11481,"polars_core::chunked_array::collect"],[11482,"polars_core::chunked_array::float"],[11483,"polars_core::chunked_array::from_iterator_par"],[11484,"polars_arrow::array::boolean"],[11485,"polars_arrow::array::fixed_size_list"],[11486,"polars_core::chunked_array::metadata::env"],[11487,"polars_core::chunked_array::metadata::collect"],[11488,"bitflags::iter"],[11489,"std::fs"],[11490,"std::sync::mutex"],[11491,"polars_arrow::datatypes"],[11492,"polars_arrow::bitmap::utils::iterator"],[11493,"polars_arrow::bitmap::utils::zip_validity"],[11494,"polars_core::chunked_array::object::builder"],[11495,"polars_core::chunked_array::object::registry"],[11496,"polars_core::chunked_array::ops"],[11497,"polars_arrow::legacy::array::slice"],[11498,"polars_core::chunked_array::ops::arity"],[11499,"polars_arrow::array::static_array"],[11500,"core::error"],[11501,"polars_arrow::array::primitive"],[11502,"polars_core::chunked_array::ops::search_sorted"],[11503,"polars_core::utils"],[11504,"polars_row::row"],[11505,"chrono::naive::datetime"],[11506,"chrono_tz::timezones"],[11507,"chrono::naive::time"],[11508,"polars_core::chunked_array::logical::categorical"],[11509,"polars_core::chunked_array::logical::categorical::builder"],[11510,"polars_arrow::array::static_array_collect"],[11511,"bytemuck::zeroable"],[11512,"polars_core::chunked_array::logical::categorical::revmap"],[11513,"polars_core::chunked_array::logical::categorical::merge"],[11514,"polars_arrow::datatypes::physical_type"],[11515,"polars_arrow::types"],[11516,"chrono::time_delta"],[11517,"chrono::naive::date"],[11518,"smartstring::config"],[11519,"smartstring"],[11520,"polars_core::datatypes::into_scalar"],[11521,"core::cmp"],[11522,"polars_core::chunked_array::logical::categorical::string_cache"],[11523,"polars_error::warning"],[11524,"planus::errors"],[11525,"regex::error"],[11526,"polars_parquet::parquet::error"],[11527,"alloc::collections"],[11528,"std::io::error"],[11529,"simdutf8::basic"],[11530,"polars_core::schema"],[11531,"polars_core::series::from"],[11532,"hashbrown::set"],[11533,"polars_arrow::datatypes::schema"],[11534,"polars_core::frame::row"],[11535,"polars_core::frame::group_by"],[11536,"polars_time::group_by::dynamic"],[11537,"polars_lazy::frame"],[11538,"polars_core::chunked_array::ndarray"],[11539,"polars_arrow::record_batch"],[11540,"polars_arrow::array::struct_"],[11541,"polars_core::frame::explode"],[11542,"polars_time::windows::duration"],[11543,"polars_utils::idx_vec"],[11544,"rayon::iter::plumbing"],[11545,"polars_plan::plans::aexpr"],[11546,"polars_core::frame::group_by::into_groups"],[11547,"core::iter::adapters::copied"],[11548,"core::iter::adapters::zip"],[11549,"polars_utils::float"],[11550,"polars_arrow::types::native"],[11551,"polars_core::frame::group_by::aggregations::agg_list"],[11552,"polars_core::frame::group_by::aggregations"],[11553,"polars_core::frame::group_by::expr"],[11554,"polars_core::frame::row::av_buffer"],[11555,"polars_utils::arena"],[11556,"polars_plan::plans::ir"],[11557,"polars_ops::frame::join::hash_join"],[11558,"polars_ops::frame::join::args"],[11559,"polars_ops::chunked_array::gather::chunked"],[11560,"polars_ops::frame"],[11561,"polars_io::csv::read::reader"],[11562,"polars_io::predicates"],[11563,"polars_io::mmap"],[11564,"polars_plan::dsl::expr"],[11565,"polars_plan::dsl::selector"],[11566,"polars_plan::frame::opt_state"],[11567,"core::alloc"],[11568,"polars_plan::plans::anonymous_scan"],[11569,"polars_lazy::scan::anonymous_scan"],[11570,"polars_plan::dsl::expr_dyn_fn"],[11571,"polars_plan::plans::visitor"],[11572,"polars_plan::dsl::function_expr"],[11573,"polars_ops::series::ops::arg_min_max"],[11574,"polars_plan::dsl::array"],[11575,"polars_plan::dsl::list"],[11576,"polars_plan::dsl::function_expr::schema"],[11577,"polars_io::ipc::ipc_stream"],[11578,"std::io"],[11579,"polars_ops::chunked_array::binary"],[11580,"polars_time::chunkedarray::string"],[11581,"std::os::fd::owned"],[11582,"polars_ops::chunked_array::list"],[11583,"std::os::fd::raw"],[11584,"polars_ops::series::ops"],[11585,"polars_ops::chunked_array::strings"],[11586,"core::mem::maybe_uninit"],[11587,"polars_ops::chunked_array::strings::namespace"],[11588,"polars_io::csv::read::read_impl::batched"],[11589,"polars_io::csv::write::writer"],[11590,"polars_io::ipc::write"],[11591,"polars_io::parquet::read::reader"],[11592,"polars_io::parquet::read::read_impl"],[11593,"polars_io::parquet::write::writer"],[11594,"polars_io::parquet::write::batched_writer"],[11595,"polars_plan::dsl::binary"],[11596,"polars_plan::dsl::udf"],[11597,"polars_lazy::frame::exitable"],[11598,"hashbrown::map"],[11599,"polars_plan::dsl::cat"],[11600,"polars_ops::series::ops::round"],[11601,"polars_time::series"],[11602,"polars_lazy::scan::csv"],[11603,"polars_lazy::scan::ipc"],[11604,"polars_lazy::scan::ndjson"],[11605,"polars_lazy::scan::parquet"],[11606,"polars_time::chunkedarray::rolling_window"],[11607,"polars_time::windows::bounds"],[11608,"polars_time::windows::group_by"],[11609,"polars_time::windows::window"],[11610,"polars_io::csv::read::options"],[11611,"polars_io::csv::write::options"],[11612,"polars_io::ipc::ipc_file"],[11613,"polars_ops::frame::join::asof"],[11614,"polars_io::json"],[11615,"polars_ops::series::ops::interpolation::interpolate"],[11616,"polars_io::parquet::read::options"],[11617,"polars_ops::series::ops::is_between"],[11618,"polars_ops::series::ops::rank"],[11619,"polars_io::parquet::write::options"],[11620,"polars_plan::plans"],[11621,"polars_plan::dsl::arity"],[11622,"polars_plan::dsl::function_expr::boolean"],[11623,"polars_plan::dsl::function_expr::cat"],[11624,"polars_plan::dsl::function_expr::datetime"],[11625,"polars_plan::dsl::function_expr::pow"],[11626,"polars_plan::dsl::function_expr::strings"],[11627,"polars_plan::dsl::function_expr::struct_"],[11628,"polars_plan::dsl::functions::temporal"],[11629,"polars_plan::dsl::options"],[11630,"polars_parquet::arrow::write"],[11631,"polars_plan::plans::lit"],[11632,"polars_parquet::parquet::metadata::file_metadata"],[11633,"polars_plan::plans::options"],[11634,"polars_arrow::legacy::kernels::rolling"],[11635,"polars_arrow::legacy::kernels::time"],[11636,"polars_lazy::scan::file_list_reader"],[11637,"polars_io::cloud::options"],[11638,"polars_parquet::parquet::metadata::column_order"],[11639,"polars_ops::chunked_array::binary::namespace"],[11640,"polars_io::ndjson::core"],[11641,"std::path"],[11642,"polars_ops::frame::join::cross_join"],[11643,"polars_lazy::dsl::eval"],[11644,"polars_time::chunkedarray::date"],[11645,"polars_time::chunkedarray::datetime"],[11646,"polars_time::chunkedarray::duration"],[11647,"core::ffi::c_str"],[11648,"core::default"],[11649,"polars_parquet::parquet::metadata::row_metadata"],[11650,"polars_core::series::ops"],[11651,"polars_plan::dsl::dt"],[11652,"polars_ops::series::ops::various"],[11653,"polars_arrow::scalar"],[11654,"polars_lazy::dsl::list"],[11655,"crossterm::command"],[11656,"polars_plan::dsl::struct_"],[11657,"polars_io::shared"],[11658,"polars_plan::plans::apply"],[11659,"polars_plan::dsl::function_expr::array"],[11660,"polars_plan::dsl::function_expr::binary"],[11661,"polars_plan::dsl::function_expr::list"],[11662,"polars_plan::dsl::function_expr::range"],[11663,"polars_parquet::arrow::read::statistics"],[11664,"alloc::ffi::c_str"],[11665,"std::ffi::os_str"],[11666,"polars_arrow::array::growable::structure"],[11667,"polars_arrow::array::struct_::mutable"],[11668,"polars_arrow::legacy::array::default_arrays"],[11669,"polars_arrow::buffer::immutable"],[11670,"polars_arrow::array::list"],[11671,"polars_core::named_from"],[11672,"polars_ops::frame::join"],[11673,"polars_ops::frame::join::hash_join::single_keys_dispatch"],[11674,"polars_time::chunkedarray::time"],[11675,"core::num::nonzero"],[11676,"parquet_format_safe::parquet_format"],[11677,"polars_arrow::array::struct_::iterator"],[11678,"polars_ops::frame::join::asof::groups"],[11679,"polars_ops::chunked_array::list::namespace"],[11680,"polars_plan::dsl::name"],[11681,"polars_io::options"],[11682,"polars_core::chunked_array::ops::aggregate"],[11683,"polars_core::chunked_array::ops::aggregate::quantile"],[11684,"polars_arrow::legacy::index"],[11685,"polars_ops::chunked_array::strings::split"],[11686,"core::pin"],[11687,"core::io::borrowed_buf"],[11688,"parquet_format_safe::thrift::varint::decode"],[11689,"polars_time::chunkedarray::rolling_window::dispatch"],[11690,"polars_time::round"],[11691,"polars_parquet::parquet::metadata::schema_descriptor"],[11692,"polars_core::chunked_array::ops::aggregate::var"],[11693,"polars_plan::dsl::string"],[11694,"polars_ops::series::ops::to_dummies"],[11695,"polars_time::truncate"],[11696,"polars_io::csv::read::schema_inference"],[11697,"polars_time::upsample"],[11698,"polars_core::hashing::vector_hasher"],[11699,"alloc::collections::btree::map"],[11700,"polars_ops::chunked_array::array::namespace"],[11701,"polars_ops::chunked_array::array"],[11702,"polars_io::csv::read::buffer"],[11703,"polars_time::chunkedarray::string::patterns"],[11704,"polars_time::chunkedarray::string::infer"],[11705,"polars_arrow::legacy::array::fixed_size_list"],[11706,"polars_plan::dsl::function_expr::rolling"],[11707,"polars_plan::dsl::function_expr::rolling_by"],[11708,"polars_arrow::legacy::array::null"],[11709,"polars_arrow::bitmap::mutable"],[11710,"polars_arrow::array::utf8"],[11711,"polars_core::series::iterator"],[11712,"alloc::rc"],[11713,"polars_core"],[11714,"polars_core::chunked_array::struct_"],[11715,"polars_core::chunked_array::iterator::par"],[11716,"polars_core::chunked_array::object::extension"],[11717,"polars_core::chunked_array::ops::float_sorted_arg_max"],[11718,"polars_core::chunked_array::ops::gather"],[11719,"polars_core::chunked_array::ops::sort"],[11720,"polars_core::chunked_array::ops::sort::arg_bottom_k"],[11721,"polars_core::chunked_array::ops::sort::arg_sort_multiple"],[11722,"polars_core::chunked_array::temporal"],[11723,"polars_core::chunked_array::temporal::conversion"],[11724,"polars_core::chunked_array::temporal::time"],[11725,"polars_core::chunked_array::logical::date"],[11726,"polars_core::chunked_array::logical::datetime"],[11727,"polars_core::chunked_array::logical::decimal"],[11728,"polars_core::chunked_array::logical::duration"],[11729,"polars_core::datatypes::aliases"],[11730,"polars_utils::aliases"],[11731,"polars_core::chunked_array::logical::time"],[11732,"polars_error::constants"],[11733,"polars_core::functions"],[11734,"polars_core::frame::horizontal"],[11735,"polars_io::utils::other"],[11736,"polars_io::parquet::metadata"],[11737,"polars_arrow::legacy::prelude"],[11738,"polars_arrow::legacy::array"],[11739,"polars_io::path_utils"],[11740,"polars_ops::series::ops::rolling"],[11741,"polars_parquet::parquet::write"],[11742,"polars_io::utils"],[11743,"polars_ops::frame::join::general"],[11744,"polars_ops::series::ops::abs"],[11745,"polars_plan::dsl::functions::selectors"],[11746,"polars_plan::dsl::functions::horizontal"],[11747,"polars_plan::dsl::functions::arity"],[11748,"polars_plan::dsl"],[11749,"polars_plan::dsl::functions::range"],[11750,"polars_plan::dsl::functions::index"],[11751,"polars_ops::chunked_array"],[11752,"polars_plan::dsl::functions::coerce"],[11753,"polars_plan::dsl::functions::syntactic_sugar"],[11754,"polars_time::base_utc_offset"],[11755,"polars_io::csv::read"],[11756,"polars_time"],[11757,"polars_ops::series::ops::clip"],[11758,"polars_io"],[11759,"polars_ops::series::ops::horizontal"],[11760,"polars_lazy::dsl::functions"],[11761,"polars_plan::dsl::functions::concat"],[11762,"polars_ops::series::ops::index"],[11763,"polars_io::csv::read::parser"],[11764,"polars_ops::series::ops::cum_agg"],[11765,"polars_ops::series::ops::diff"],[11766,"polars_time::dst_offset"],[11767,"polars_ops::series::ops::floor_divide"],[11768,"polars_ops::chunked_array::strings::concat"],[11769,"polars_ops::chunked_array::datetime::replace_time_zone"],[11770,"polars_time::date_range"],[11771,"polars_ops::series::ops::interpolation"],[11772,"polars_ops::series::ops::interpolation::interpolate_by"],[11773,"polars_io::utils::compression"],[11774,"polars_ops::series::ops::is_first_distinct"],[11775,"polars_ops::series::ops::is_in"],[11776,"polars_ops::series::ops::is_last_distinct"],[11777,"polars_io::parquet::read::utils"],[11778,"polars_ops::series::ops::negate"],[11779,"polars_ops::series::ops::not"],[11780,"polars_ops::series::ops::int_range"],[11781,"polars_plan::dsl::functions::repeat"],[11782,"polars_ops::chunked_array::repeat_by"],[11783,"polars_ops::series::ops::replace"],[11784,"polars_ops::chunked_array::strings::strip"],[11785,"polars_io::partition"],[11786,"polars_time::chunkedarray"],[11787,"polars_io::cloud"],[11788,"polars_io::utils::compression::magic"],[11789,"polars_ops::chunked_array::mode"],[11790,"polars_ops::chunked_array::nan_propagating_aggregate"],[11791,"polars_arrow::legacy::array::utf8"]],"if":"``````{{}b}`````````{{}d}````````{{{f{c}}h}b{}}{{{f{{l{j}}}}c}{{A`{{l{j}}n}}}{{Af{{f{Ab}}}{{Ad{Ab}}}}}}{{{f{{l{Ah}}}}}d}{{{f{{l{Aj}}}}{f{{An{Al}}}}}}{{{l{Aj}}{l{Aj}}}}{{{l{B`}}{l{B`}}}}{{{f{{l{Bb}}}}{f{{l{Bb}}}}}}{{{f{{l{B`}}}}{f{Bd}}}}{{{f{{l{c}}}}e}{}Bf{BhBj}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Bf}{{{f{{l{Aj}}}}{f{{l{Aj}}}}}}{{{l{c}}{l{c}}}{}Bf}{{{l{Bb}}{l{Bb}}}}{{{l{c}}e}{}Bf{BhBj}}{{{f{{l{B`}}}}{f{{l{B`}}}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bl}{{{f{{l{Ah}}}}{f{Bn}}}Ab}{{{f{{l{c}}}}{f{Bn}}}AbBf}{{{f{{l{Aj}}}}{f{Bn}}}Ab}{{{f{{l{B`}}}}{f{Bn}}}Ab}{{{f{{l{C`}}}}{f{Bn}}}Ab}{{{f{{l{{Cb{c}}}}}}{f{Bn}}}AbCd}{{{f{{l{Bb}}}}{f{Bn}}}Ab}{{{f{{l{j}}}}{f{Bn}}}Ab}{{{f{{l{Bb}}}}}d}{{{f{{l{Bb}}}}}{{Cf{d}}}}{{{f{{l{C`}}}}}{{D`{{`{{Cn{}{{Ch{{Cf{{Cl{Cj}}}}}}}}}}}}}}{{{f{{l{Ah}}}}}{{D`{{`{{Cn{}{{Ch{{Cf{{Cl{Cj}}}}}}}}}}}}}}{{{f{{l{C`}}}}{f{Bd}}}{{D`{{`{{Cn{}{{Ch{{Cf{{Cl{Cj}}}}}}}}}}}}}}{{{f{{l{Ah}}}}{f{Bd}}}{{D`{{`{{Cn{}{{Ch{{Cf{{Cl{Cj}}}}}}}}}}}}}}54{{{f{Db{l{c}}}}{f{{l{c}}}}}b{{Dh{}{{Dd{Df}}}}}}{{{f{{l{{Cb{c}}}}}}e}{{l{{Cb{c}}}}}Cd{{Dj{{Cf{{f{c}}}}}{{Ad{{Cf{c}}}}}}Dl}}{{{f{{l{Aj}}}}c}{{l{Aj}}}{{Dj{{Cf{{f{{An{Al}}}}}}}{{Ad{{Cf{{Dn{{An{Al}}}}}}}}}}Dl}}{{{f{{l{Bb}}}}c}{{l{Bb}}}{{Dj{{Cf{d}}}{{Ad{{Cf{d}}}}}}Dl}}{{{f{{l{c}}}}e}{{l{c}}}Bf{{Dj{Cf}{{Ad{Cf}}}}Dl}}{{{f{{l{Ah}}}}c}{{l{Ah}}}{{Dj{{Cf{Ab}}}{{Ad{{Cf{Ab}}}}}}Dl}}{{{f{{l{B`}}}}c}{{l{B`}}}{{Dj{{Cf{{f{Bd}}}}}{{Ad{{Cf{{Dn{Bd}}}}}}}}Dl}}{{{f{{l{Ah}}}}c}{{l{Ah}}}{{Af{E`}{{Ad{Ab}}}}}}{{{f{{l{Ah}}}}e}{{l{g}}}{}{{Af{{Cf{E`}}}{{Ad{{Cf{c}}}}}}Dl}Dh}{{{f{{l{C`}}}}e}{{l{g}}}{}{{Af{{Cf{E`}}}{{Ad{{Cf{c}}}}}}Dl}Dh}{{{f{{l{C`}}}}c}{{l{C`}}}{{Af{E`}{{Ad{Ab}}}}}}{{{f{{l{Eb}}}}c}Ab{{Dj{{f{Ab}}}{{Ad{Ab}}}}}}{{{f{{l{Ed}}}}c}Ab{{Dj{{f{Ab}}}{{Ad{Ab}}}}}}{{{l{c}}e}{{l{c}}}Bf{{Dj{}{{Ad{}}}}Dl}}{{{f{{l{c}}}}e}{{l{B`}}}Dh{{Af{{f{DbEf}}}}}}{{{f{{l{c}}}}{f{Dj}}}{{l{c}}}Bf}{{{f{{l{B`}}}}{f{Dj}}}{{l{B`}}}}{{{f{{l{Bb}}}}{f{Dj}}}{{l{Bb}}}}{{{f{{l{Aj}}}}{f{Dj}}}{{l{Aj}}}}{{{f{{l{c}}}}{f{Dj}}}{{l{e}}}BfDh}{{{f{{l{B`}}}}{f{Dj}}}{{l{c}}}Dh}{{{f{{l{Bb}}}}{f{Dj}}}{{l{c}}}Dh}{{{f{{l{Aj}}}}{f{Dj}}}{{l{c}}}Dh}{{{f{{l{Aj}}}}c}{{l{Aj}}}{{Af{{f{{An{Al}}}}}{{Ad{{f{{An{Al}}}}}}}}}}{{{f{Db{l{c}}}}e}bBf{{Dj{}{{Ad{}}}}Dl}}{{{f{{l{B`}}}}c}{{l{B`}}}{{Af{{f{Bd}}}{{Ad{{f{Bd}}}}}}}}{{{f{{l{c}}}}Ehg}{{l{i}}}Dh{}{{Af{}{{Ad{e}}}}}Dh}{{{f{{l{Ah}}}}{f{Dj}}}{{A`{{l{Ah}}n}}}}{{{f{{l{C`}}}}{f{Dj}}}{{A`{{l{C`}}n}}}}{{{f{{l{c}}}}g{f{Db{An{e}}}}}bBf{}{{Dj{Cf{f{e}}}{{Ad{e}}}}}}{{{f{{l{Bb}}}}e{f{Db{An{c}}}}}b{}{{Dj{{Cf{d}}{f{c}}}{{Ad{c}}}}}}{{{f{{l{Ah}}}}e{f{Db{An{c}}}}}b{}{{Dj{{Cf{Ab}}{f{c}}}{{Ad{c}}}}}}{{{f{{l{B`}}}}e{f{Db{An{c}}}}}b{}{{Dj{{Cf{{f{Bd}}}}{f{c}}}{{Ad{c}}}}}}{{{f{{l{{Cb{c}}}}}}g{f{Db{An{e}}}}}bCd{}{{Dj{{Cf{{f{c}}}}{f{e}}}{{Ad{e}}}}}}{{{f{{l{Aj}}}}e{f{Db{An{c}}}}}b{}{{Dj{{Cf{{f{{An{Al}}}}}}{f{c}}}{{Ad{c}}}}}}{{{f{{l{Bb}}}}c}{{l{Bb}}}{{Dj{d}{{Ad{d}}}}Dl}}{{{f{{l{c}}}}e}{{l{c}}}Bf{{Dj{}{{Ad{}}}}Dl}}{{{f{{l{{Cb{c}}}}}}e}{{l{{Cb{c}}}}}Cd{{Dj{{f{c}}}{{Ad{c}}}}Dl}}{{{f{{l{B`}}}}c}{{l{B`}}}{{Dj{{f{Bd}}}{{Ad{{Dn{Bd}}}}}}Dl}}{{{f{{l{Aj}}}}c}{{l{Aj}}}{{Dj{{f{{An{Al}}}}}{{Ad{{Dn{{An{Al}}}}}}}}Dl}}{{{f{{l{Ah}}}}c}{{l{Ah}}}{{Dj{Ab}{{Ad{Ab}}}}Dl}}{{{f{{l{B`}}}}c}{{l{B`}}}{{Af{Ej{f{Bd}}}{{Ad{Ej}}}}Dl}}{{{f{{l{j}}}}El}{{l{En}}}}{{{f{{l{B`}}}}El}{{l{En}}}}{{{f{{l{F`}}}}El}{{l{En}}}}{{{f{{l{Aj}}}}El}{{l{En}}}}{{{f{{l{c}}}}El}{{l{En}}}Bf}{{{f{{l{Bb}}}}El}{{l{En}}}}{{{f{{l{Bb}}}}{f{{An{Ab}}}}{f{Fb}}}{{A`{{l{En}}n}}}}{{{f{{l{c}}}}{f{{An{Ab}}}}{f{Fb}}}{{A`{{l{En}}n}}}Bf}{{{f{{l{F`}}}}{f{{An{Ab}}}}{f{Fb}}}{{A`{{l{En}}n}}}}{{{f{{l{Aj}}}}{f{{An{Ab}}}}{f{Fb}}}{{A`{{l{En}}n}}}}{{{f{{l{B`}}}}{f{{An{Ab}}}}{f{Fb}}}{{A`{{l{En}}n}}}}{{{f{{l{B`}}}}}{{A`{{l{En}}n}}}}{{{f{{l{Bb}}}}}{{A`{{l{En}}n}}}}{{{f{{l{Aj}}}}}{{A`{{l{En}}n}}}}{{{f{{l{{Cb{c}}}}}}}{{A`{{l{En}}n}}}Cd}{{{f{{l{c}}}}}{{A`{{l{En}}n}}}Bf}`{{{f{{l{C`}}}}}{{f{{l{C`}}}}}}{{{f{{l{Aj}}}}}{{f{{l{Aj}}}}}}{{{f{{l{B`}}}}}{{l{Aj}}}}{{{f{{l{Ah}}}}}{{f{{l{Ah}}}}}}{{{f{{l{c}}}}}{{f{{l{c}}}}}Dh}{{{f{{l{c}}}}}{{f{Eh}}}Dh}{{{f{{l{B`}}}}}{{f{{l{B`}}}}}}0{{{f{{l{Ah}}}}{f{{l{c}}}}{f{{l{e}}}}g}{{l{Ah}}}DhDh{{Af{{Cf{E`}}CfCf}{{Ad{{Cf{Ab}}}}}}}}{{{l{Bb}}{l{Bb}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Fd}{{{f{{l{Bb}}}}{f{{l{Bb}}}}}}201021{{{f{c}}}{{f{e}}}{}{}}0{{{f{Dbc}}}{{f{Dbe}}}{}{}}0``{{{f{{l{j}}}}{f{Eh}}}{{A`{Abn}}}}{{{f{{l{c}}}}e}{{l{g}}}Bf{{Dj{}{{Ad{}}}}Dl}Bf}{{{f{{l{Ah}}}}{f{Eh}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Eh}}}{{A`{Abn}}}Bf}{{{f{{l{C`}}}}{f{Eh}}}{{A`{Abn}}}}{{{f{{l{Bb}}}}{f{Eh}}}{{A`{Abn}}}}{{{f{{l{F`}}}}{f{Eh}}}{{A`{Abn}}}}{{{f{{l{Aj}}}}{f{Eh}}}{{A`{Abn}}}}{{{f{{l{B`}}}}{f{Eh}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Eh}}Ff}{{A`{Abn}}}Bf}{{{f{{l{Ah}}}}{f{Eh}}Ff}{{A`{Abn}}}}{{{f{{l{C`}}}}{f{Eh}}Ff}{{A`{Abn}}}}{{{f{{l{B`}}}}{f{Eh}}Ff}{{A`{Abn}}}}{{{f{{l{Aj}}}}{f{Eh}}Ff}{{A`{Abn}}}}{{{f{{l{F`}}}}{f{Eh}}Ff}{{A`{Abn}}}}{{{f{{l{j}}}}{f{Eh}}Ff}{{A`{Abn}}}}{{{f{{l{Bb}}}}{f{Eh}}Ff}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Fh}{{{f{{l{c}}}}e}{{A`{Abn}}}FhBj}{{{f{{l{c}}}}}{{G`{{Fj{{Cl{Cj}}}}{Fn{{f{{Cl{Cj}}}}}{{Ad{Fl}}}}}}}Dh}{{{f{{l{c}}}}}{{`{{Cn{}{{Ch{Fl}}}}}}}Dh}{{{f{{l{c}}}}}{{f{{Gb{{Cl{Cj}}}}}}}Dh}{{{f{Db{l{c}}}}}{{f{Db{Gb{{Cl{Cj}}}}}}}Dh}{{{f{{l{c}}}}}{{l{c}}}Dh}0{{{f{c}}{f{Dbe}}}b{}{}}{{{f{c}}}b{}}`{{{f{Db{l{c}}}}}b{DhBf}}`{{{f{{l{c}}}}}{{A`{{f{An}}n}}}Bf}{{{f{Db{l{c}}}}{f{{l{c}}}}Gd}bDh}{{{f{Db{l{c}}}}{f{{l{e}}}}Gd}bDhDh}{{{f{{l{c}}}}}{{`{Gf}}}Bf}{{}{{l{c}}}Dh}{Fl{{f{c}}}{}}0{Fl{{f{Dbc}}}{}}0{{{f{{l{c}}}}e}{}Bf{BhBj}}{{{l{c}}e}{}Bf{BhBj}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Bf}{{{l{c}}{l{c}}}{}Bf}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bl}{Flb}{{{f{Db{l{c}}}}}bDh}1{{{f{{l{c}}}}}{{l{c}}}Dh}{{{f{{l{c}}}}}{{f{Eh}}}Dh}{{{f{{l{Bb}}}}{f{{l{Bb}}}}}{{l{Bb}}}}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{Bb}}}}{{{f{{l{B`}}}}{f{{l{B`}}}}}{{l{Bb}}}}{{{f{{l{Aj}}}}{f{{l{Aj}}}}}{{l{Bb}}}}{{{f{{l{B`}}}}{f{Bd}}}{{l{Bb}}}}{{{f{{l{Ah}}}}{f{{l{Ah}}}}}{{l{Bb}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{Bb}}}Bf}{{{f{{l{Aj}}}}{f{{An{Al}}}}}{{l{Bb}}}}{{{f{{l{c}}}}e}{{l{Bb}}}BfBj}{{{f{{l{C`}}}}{f{{l{C`}}}}}{{l{Bb}}}}3802496571{{{f{{l{C`}}}}}{{A`{{Gl{Ab{Gj{Gh}}}}n}}}}{{{f{{l{Ah}}}}}{{A`{{Gl{Ab{Gj{Gh}}}}n}}}}{{{f{Db{l{c}}}}{f{{l{c}}}}}bBf}{{{f{{l{j}}}}{f{Bd}}}{{A`{Abn}}}}{{{f{{l{j}}}}}{{Gb{Ab}}}}{{{f{{l{c}}}}}{{A`{{l{c}}n}}}Bf}{{{f{{l{Bb}}}}d}{{A`{{l{Bb}}n}}}}{{{f{{l{Aj}}}}{f{{An{Al}}}}}{{A`{{l{Aj}}n}}}}{{{f{{l{{Cb{c}}}}}}{f{{l{Bb}}}}}{{A`{{l{{Cb{c}}}}n}}}Cd}{{{f{{l{Aj}}}}{f{{l{Bb}}}}}{{A`{{l{Aj}}n}}}}{{{f{{l{B`}}}}{f{{l{Bb}}}}}{{A`{{l{B`}}n}}}}{{{f{{l{c}}}}{f{{l{Bb}}}}}{{A`{{l{c}}n}}}{{Dh{}{{Gn{Df}}{H`{Df}}}}}}{{{f{{l{c}}}}}{{Cf{Fl}}}Dh}`{{{f{{l{Bb}}}}{f{DbHb}}}{{A`{bHd}}}}{{{f{{l{Aj}}}}{f{DbHb}}}{{A`{bHd}}}}{{{f{{l{c}}}}{f{DbHb}}}{{A`{bHd}}}Bf}{{{f{{l{{Cb{c}}}}}}{f{DbHb}}}{{A`{bHd}}}Cd}{{{f{{l{C`}}}}{f{DbHb}}}{{A`{bHd}}}}{{{f{{l{Ah}}}}{f{DbHb}}}{{A`{bHd}}}}{{{f{{l{B`}}}}{f{DbHb}}}{{A`{bHd}}}}{{{f{{l{c}}}}e}bDh{{Af{Cf}}}}{{{f{{l{Ah}}}}c}b{{Af{{Cf{E`}}}}}}{{{f{{l{C`}}}}c}b{{Af{{Cf{E`}}}}}}{cc{}}{c{{l{e}}}Cj{{Dh{}{{Hf{c}}}}}}1{{{f{Bd}}c}{{l{e}}}Hh{{Dh{}{{Hf{}}}}Dh}}{{{f{{l{c}}}}e}{{l{c}}}{{Dh{}{{Hf{}}}}Dh}Hh}{{{f{Bd}}{Gb{{Cl{Cj}}}}}{{l{c}}}Dh}{{{f{Bd}}{Gb{{Cl{Cj}}}}Eh}{{l{c}}}Dh}{g{{A`{ic}}}{}{}{{Hj{c}{{Ch{e}}}}}{}}{e{{l{B`}}}{{Hl{Bd}}}{{Hh{}{{Ch{{Cf{c}}}}}}}}{e{{l{Ah}}}{{Hn{Ab}}}{{Hh{}{{Ch{c}}}}}}{c{{l{Ah}}}{{Hh{}{{Ch{{Cf{Ab}}}}}}}}{c{{l{Ah}}}{{Hh{}{{Ch{{Cf{{Cl{Cj}}}}}}}}}}{e{{l{{Cb{c}}}}}Cd{{Hh{}{{Ch{{Cf{c}}}}}}}}{e{{l{Aj}}}{{I`{{An{Al}}}}}{{Hh{}{{Ch{c}}}}}}{e{{l{Aj}}}{{Hl{{An{Al}}}}}{{Hh{}{{Ch{{Cf{c}}}}}}}}{e{{l{B`}}}{{I`{Bd}}}{{Hh{}{{Ch{c}}}}}}{c{{l{Bb}}}{{Hh{}{{Ch{d}}}}}}{c{{l{Bb}}}{{Hh{}{{Ch{{Cf{d}}}}}}}}{c{{l{e}}}{{Hh{}{{Ch{Cf}}}}}Bf}{c{{l{e}}}{{Hh{}{{Ch{{Gl{Gb{Cf{Ib}}}}}}}}}Bf}{{{f{Bd}}e}{{l{B`}}}{{Hl{Bd}}}{{Cn{}{{Ch{{Cf{c}}}}}}}}{{{f{Bd}}e}{{l{{Cb{c}}}}}Cd{{Cn{}{{Ch{{Cf{c}}}}}}}}{{{f{Bd}}c}{{l{e}}}{{Cn{}{{Ch{Cf}}}}}Bf}{{{f{Bd}}e}{{l{Aj}}}{{Hl{{An{Al}}}}}{{Cn{}{{Ch{{Cf{c}}}}}}}}{{{f{Bd}}c}{{l{Bb}}}{{Cn{}{{Ch{{Cf{d}}}}}}}}8?{e{{l{F`}}}{{Hl{{An{Al}}}}}{{Hh{}{{Ch{{Cf{c}}}}}}}}{e{{l{F`}}}{{I`{{An{Al}}}}}{{Hh{}{{Ch{c}}}}}}9;{e{{l{B`}}}{{Hl{Bd}}}{{Hh{}{{Ch{{Cf{c}}}}}}}}9{c{{l{Ah}}}{{Hh{}{{Ch{{Cf{Ab}}}}}}}}{e{{l{{Cb{c}}}}}Cd{{Hh{}{{Ch{{Cf{c}}}}}}}}{e{{l{Aj}}}{{I`{{An{Al}}}}}{{Hh{}{{Ch{c}}}}}}{e{{l{Aj}}}{{Hl{{An{Al}}}}}{{Hh{}{{Ch{{Cf{c}}}}}}}}{{{f{Bd}}e}{{l{Aj}}}{{Hl{{An{Al}}}}}{{Cn{}{{Ch{c}}}}}}{{{f{Bd}}c}{{l{e}}}{{Cn{}{{Ch{}}}}}Bf}{{{f{Bd}}e}{{l{{Cb{c}}}}}Cd{{Cn{}{{Ch{c}}}}}}{{{f{Bd}}e}{{l{B`}}}{{Hl{Bd}}}{{Cn{}{{Ch{c}}}}}}{{{f{Bd}}c}{{l{Bb}}}{{Cn{}{{Ch{d}}}}}}`{c{{l{Ah}}}{{Id{}{{Ch{{Cf{Ab}}}}}}}}{e{{l{Aj}}}{{I`{{An{Al}}}}IfIhIj}{{Id{}{{Ch{c}}}}}}{e{{l{B`}}}{{I`{Bd}}IfIhIj}{{Id{}{{Ch{c}}}}}}{c{{l{Bb}}}{{Id{}{{Ch{{Cf{d}}}}}}}}{c{{l{Bb}}}{{Id{}{{Ch{d}}}}}}{c{{l{e}}}{{Id{}{{Ch{Cf}}}}}Bf}{e{{l{Aj}}}{{Hl{{An{Al}}}}IfIh}{{Id{}{{Ch{{Cf{c}}}}}}}}{e{{l{B`}}}{{Hl{Bd}}IfIh}{{Id{}{{Ch{{Cf{c}}}}}}}}{{c{f{Bd}}Eh}{{l{Ah}}}{{Id{}{{Ch{{Cf{Ab}}}}}}}}{{{f{Bd}}{f{{An{Ab}}}}}{{A`{{l{j}}n}}}}{{{f{Bd}}{f{{An{c}}}}}{{l{{Cb{c}}}}}Cd}{{{f{Bd}}{f{{An{c}}}}}{{l{Aj}}}{{Hl{{An{Al}}}}}}{{{f{Bd}}{f{An}}}{{l{c}}}Bf}{{{f{Bd}}{f{{An{c}}}}}{{l{B`}}}{{Hl{Bd}}}}{{{f{Bd}}{f{{An{d}}}}}{{l{Bb}}}}{{{f{Bd}}{f{{An{Cf}}}}}{{l{c}}}Bf}{{{f{Bd}}{f{{An{{Cf{d}}}}}}}{{l{Bb}}}}{{{f{Bd}}{f{{An{{Cf{c}}}}}}}{{l{B`}}}{{Hl{Bd}}}}{{{f{Bd}}{f{{An{{Cf{c}}}}}}}{{l{Aj}}}{{Hl{{An{Al}}}}}}{{{f{Bd}}{f{{An{{Cf{c}}}}}}}{{l{{Cb{c}}}}}Cd}{c{{l{Bb}}}{{Il{}{{Ch{{Cf{d}}}}}}}}{c{{l{e}}}{{Il{}{{Ch{Cf}}}}}Bf}{{{f{Bd}}Gb}{{l{c}}}Bf}{{{f{Bd}}Gb{Cf{Ib}}}{{l{c}}}Bf}{{{f{Bd}}Fl}{{l{c}}}Bf}{{{f{Bd}}cFl}{{l{{Cb{c}}}}}Cd}{{{f{Bd}}{f{Bd}}Fl}{{l{B`}}}}{{{f{Bd}}dFl}{{l{Bb}}}}{{{f{Bd}}{f{{An{Al}}}}Fl}{{l{Aj}}}}{{{f{Bd}}{f{{An{Al}}}}Fl}{{l{F`}}}}{{{f{Bd}}{f{Ab}}Fl}{{l{C`}}}}{{{f{Bd}}{f{Ab}}Fl}{{l{Ah}}}}{{{f{Bd}}Fl}{{l{F`}}}}{{{f{Bd}}Fl}{{l{Bb}}}}{{{f{Bd}}Fl}{{l{B`}}}}{{{f{Bd}}Fl}{{l{Aj}}}}{{{f{Bd}}Fl}{{l{{Cb{c}}}}}Cd}{{{f{Bd}}Fl}{{l{Ah}}}}={{{f{Bd}}Fl}{{l{C`}}}}{{{f{Bd}}Fl}{{l{j}}}}{{{f{{l{c}}}}Fl}{{l{c}}}Dh}{{{f{Bd}}Fl{f{Eh}}Fl}{{l{C`}}}}{{{f{Bd}}Fl{f{Eh}}}{{l{Ah}}}}{{{f{{l{c}}}}Fl}CfDh}{{{f{{l{F`}}}}Fl}{{A`{Inn}}}}{{{f{{l{Ah}}}}Fl}{{A`{Inn}}}}{{{f{{l{Bb}}}}Fl}{{A`{Inn}}}}{{{f{{l{j}}}}Fl}{{A`{Inn}}}}{{{f{{l{B`}}}}Fl}{{A`{Inn}}}}{{{f{{l{{Cb{c}}}}}}Fl}{{A`{Inn}}}Cd}{{{f{{l{Aj}}}}Fl}{{A`{Inn}}}}{{{f{{l{C`}}}}Fl}{{A`{Inn}}}}{{{f{{l{c}}}}Fl}{{A`{Inn}}}Bf}{{{f{{l{Ah}}}}Fl}In}{{{f{{l{c}}}}Fl}InBf}{{{f{{l{B`}}}}Fl}In}{{{f{{l{C`}}}}Fl}In}{{{f{{l{Bb}}}}Fl}In}{{{f{{l{j}}}}Fl}In}{{{f{{l{{Cb{c}}}}}}Fl}InCd}{{{f{{l{F`}}}}Fl}In}{{{f{{l{Aj}}}}Fl}In}{{{f{{l{Ah}}}}Fl}{{Cf{Ab}}}}{{{f{{l{C`}}}}Fl}{{Cf{Ab}}}}{{{f{{l{c}}}}}{{Cf{J`}}}Dh}{{{f{{l{c}}}}}dDh}{{{f{{l{c}}}}}JbDh}{{{f{{l{C`}}}}}Ab}{{{f{{l{Ah}}}}}Ab}{{{f{{l{c}}}}}CfDh}0{{{f{{l{{Cb{c}}}}}}Fl}{{Cf{{f{Jd}}}}}Cd}0{{{f{{l{j}}}}El}{{A`{{l{F`}}n}}}}{{{f{{l{j}}}}El}{{A`{{Jf{Gh}}n}}}}{{{f{{l{c}}}}Fl}CfDh}{{{f{{l{Ah}}}}}Fl}{{{f{{l{F`}}}}}Fl}{{{f{{l{C`}}}}}Fl}{{{f{{l{B`}}}}}Fl}{{{f{{l{Aj}}}}dd}{{A`{Bnn}}}}{{{f{{l{{Cb{c}}}}}}dd}{{A`{Bnn}}}Cd}{{{f{{l{B`}}}}dd}{{A`{Bnn}}}}{{{f{{l{C`}}}}dd}{{A`{Bnn}}}}{{{f{{l{Ah}}}}dd}{{A`{Bnn}}}}{{{f{{l{Bb}}}}dd}{{A`{Bnn}}}}{{{f{{l{c}}}}dd}{{A`{Bnn}}}Bf}{{{f{{l{F`}}}}dd}{{A`{Bnn}}}}{{{f{{l{c}}}}FldFl}BnFd}{{{f{{l{Aj}}}}{f{{An{Al}}}}}{{l{Bb}}}}{{{f{{l{Ah}}}}{f{{l{Ah}}}}}{{l{Bb}}}}{{{f{{l{C`}}}}{f{{l{C`}}}}}{{l{Bb}}}}{{{f{{l{Aj}}}}{f{{l{Aj}}}}}{{l{Bb}}}}{{{f{{l{B`}}}}{f{{l{B`}}}}}{{l{Bb}}}}{{{f{{l{c}}}}e}{{l{Bb}}}BfBj}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{Bb}}}Bf}{{{f{{l{Bb}}}}{f{{l{Bb}}}}}{{l{Bb}}}}{{{f{{l{B`}}}}{f{Bd}}}{{l{Bb}}}}457301826{{{f{{l{c}}}}}dDh}{{{f{{l{c}}}}{Cf{Fl}}}{{l{c}}}Dh}{{}Fl}0{{FlJh{Cf{Jj}}}{{l{c}}}Bf}{{{f{{l{C`}}}}}{{f{Eh}}}}{{{f{{l{Ah}}}}}{{f{Eh}}}}{{{f{{l{c}}}}}{{Jn{{Jl{c}}}}}Dh}{ce{}{}}0{{{l{K`}}}{{Kd{KbK`}}}}{{{l{Kf}}Kh{Cf{Ef}}}{{Kd{KjKf}}}}{{{l{Kl}}{Cf{Fl}}Fl}{{A`{{Kd{KnKl}}n}}}}{{{l{Kl}}{Cf{Fl}}Fl}{{Kd{KnKl}}}}{{{l{Kf}}Kh}{{Kd{L`Kf}}}}{{{f{{l{C`}}}}}}{{{f{{l{c}}}}}{}Bf}{{{f{{l{Aj}}}}}}{{{f{{l{Bb}}}}}}{{{f{{l{Ah}}}}}}{{{f{{l{B`}}}}}}{{{f{{l{{Cb{c}}}}}}}{}Cd}{{{f{{l{F`}}}}}}{{{f{{l{c}}}}}{{`{IfIhLbGfIl}}}Bf}{{{l{c}}}AbDh}{{{l{Kl}}}Ab}{{{l{Kf}}}{{Kd{LdKf}}}}{{{f{{l{c}}}}}dDh}{{{f{{l{c}}}}}{{l{Bb}}}Lf}000{{{f{{l{c}}}}}{{l{Bb}}}Dh}02{{{f{{l{c}}}}}LhDh}{{{f{{l{c}}}}}{{`{Lj}}}Dh}{{{f{{l{c}}}}}{{`{{Cn{}{{Ch{{l{c}}}}}}}}}Dh}{{{f{{l{Ah}}}}}{{`{{Cn{}{{Ch{Gh}}}}}}}}{{{f{{l{c}}}}}{{G`{{Fj{{Cl{Cj}}}}{Fn{{f{{Cl{Cj}}}}}{{Ad{{Cf{{f{Ib}}}}}}}}}}}Dh}`{{{f{{l{c}}}}}CfDh}{{{f{{l{c}}}}}{{Cf{Fl}}}Dh}{{{f{{l{c}}}}}{{Ll{c}}}Dh}{{{l{c}}{l{c}}}{}Bf}{{{f{{l{c}}}}{f{{l{c}}}}}{}Bf}{{{f{{l{c}}}}}{}Bf}{{{l{c}}}{}Bf}10{{{f{{l{c}}}}}FlDh}0{{{f{{l{c}}}}e}{{l{c}}}Bf{BhLn}}00{{{f{{l{c}}}}Fl}{{l{c}}}Dh}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{Bb}}}Bf}{{{f{{l{B`}}}}{f{Bd}}}{{l{Bb}}}}{{{f{{l{Aj}}}}{f{{An{Al}}}}}{{l{Bb}}}}{{{f{{l{B`}}}}{f{{l{B`}}}}}{{l{Bb}}}}{{{f{{l{Ah}}}}{f{{l{Ah}}}}}{{l{Bb}}}}{{{f{{l{Bb}}}}{f{{l{Bb}}}}}{{l{Bb}}}}{{{f{{l{c}}}}e}{{l{Bb}}}BfBj}{{{f{{l{C`}}}}{f{{l{C`}}}}}{{l{Bb}}}}{{{f{{l{Aj}}}}{f{{l{Aj}}}}}{{l{Bb}}}}574310268{{{f{{l{c}}}}}CfBf}{{{f{{l{Bb}}}}}{{Cf{d}}}}{{{f{{l{Bb}}}}}M`}{{{f{{l{Aj}}}}}M`}{{{f{{l{B`}}}}}M`}{{{f{{l{c}}}}}M`Bf}{{{f{{l{c}}}}}{{Cf{Mb}}}Bf}{{{f{{l{Bb}}}}}{{Cf{Mb}}}}{{{f{{l{Ed}}}}}{{Cf{Mb}}}}{{{f{{l{Eb}}}}}{{Cf{Jh}}}}{{{f{{l{c}}}}}{{Cf{Mb}}}Fd}{{{f{{l{c}}}}}M`Fd}{{{f{{l{Ed}}}}}M`}{{{f{{l{Eb}}}}}M`}{{{f{Db{l{c}}}}{Jl{c}}}bDh}`{{{f{{l{c}}}}}{{Md{c}}}Dh}{{{f{{l{c}}}}}{{f{{Mh{{Mf{c}}}}}}}Dh}{{{f{{l{c}}}}}{{Cf{{Ml{Mj}}}}}Dh}{{{f{Db{l{c}}}}}{{f{Db{Mh{{Mf{c}}}}}}}Dh}{{{f{{l{c}}}}}{{Mh{{Mf{c}}}}}Dh}{{{f{{l{c}}}}}CfBf}{{{f{{l{Bb}}}}}{{Cf{d}}}}{{{f{{l{c}}}}}{{Cf{Gl}}}Bf}{{{f{{l{B`}}}}}M`}{{{f{{l{Aj}}}}}M`}{{{f{{l{Bb}}}}}M`}{{{f{{l{c}}}}}M`Bf}{{{f{Bd}}{f{An}}}{{l{c}}}Bf}{{{f{Bd}}{f{{An{Al}}}}FlFl}{{l{Bb}}}}{{{f{{l{c}}}}e}{}Bf{BhBj}}{{{l{c}}e}{}Bf{BhBj}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Bf}{{{l{c}}{l{c}}}{}Bf}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bl}{{{f{{l{c}}}}}FlDh}{{{f{{l{Aj}}}}}{{A`{Fln}}}}{{{f{{l{c}}}}}{{A`{Fln}}}Bf}{{{f{{l{B`}}}}}{{A`{Fln}}}}{{{f{{l{c}}}}}{{f{Bd}}}Dh}{{{f{Bd}}c}{{l{B`}}}{{Hl{{An{{f{Bd}}}}}}}}{{{f{Bd}}c}{{l{Mn}}}{{Hl{{An{{Cf{N`}}}}}}}}{{{f{Bd}}c}{{l{Nb}}}{{Hl{{An{{Cf{Nd}}}}}}}}{{{f{Bd}}c}{{l{Nf}}}{{Hl{{An{{Cf{Al}}}}}}}}{{{f{Bd}}c}{{l{Bb}}}{{Hl{{An{{Cf{d}}}}}}}}{{{f{Bd}}c}{{l{Aj}}}{{Hl{{An{{Cf{{Gb{Al}}}}}}}}}}{{{f{Bd}}c}{{l{B`}}}{{Hl{{An{{Cf{Ef}}}}}}}}{{{f{Bd}}c}{{l{Ed}}}{{Hl{{An{Mb}}}}}}{{{f{Bd}}c}{{l{Eb}}}{{Hl{{An{Jh}}}}}}{{{f{Bd}}{Nh{J`}}}{{l{En}}}}{{{f{Bd}}c}{{l{Kl}}}{{Hl{{An{Nj}}}}}}{{{f{Bd}}c}{{l{Kf}}}{{Hl{{An{Gh}}}}}}{{{f{Bd}}c}{{l{K`}}}{{Hl{{An{Nl}}}}}}{{{f{Bd}}c}{{l{Nn}}}{{Hl{{An{O`}}}}}}{{{f{Bd}}c}{{l{Mn}}}{{Hl{{An{N`}}}}}}{{{f{Bd}}c}{{l{Ob}}}{{Hl{{An{Jj}}}}}}{{{f{Bd}}c}{{l{Nn}}}{{Hl{{An{{Cf{O`}}}}}}}}{{{f{Bd}}c}{{l{B`}}}{{Hl{{An{{Cf{{f{Bd}}}}}}}}}}{{{f{Bd}}c}{{l{En}}}{{Hl{{An{J`}}}}}}{{{f{Bd}}c}{{l{B`}}}{{Hl{{An{{Dn{Bd}}}}}}}}{{{f{Bd}}c}{{l{Nb}}}{{Hl{{An{Nd}}}}}}{{{f{Bd}}{Nh{Jj}}}{{l{Ob}}}}{{{f{Bd}}c}{{l{Bb}}}{{Hl{{An{d}}}}}}{{{f{Bd}}c}{{l{Aj}}}{{Hl{{An{{Gb{Al}}}}}}}}{{{f{Bd}}c}{{l{B`}}}{{Hl{{An{Ef}}}}}}{{{f{Bd}}c}{{l{B`}}}{{Hl{{An{{Cf{{Dn{Bd}}}}}}}}}}{{{f{Bd}}c}{{l{Aj}}}{{Hl{{An{{f{{An{Al}}}}}}}}}}{{{f{Bd}}c}{{l{Aj}}}{{Hl{{An{{Cf{{f{{An{Al}}}}}}}}}}}}{{{f{Bd}}{Nh{Nl}}}{{l{K`}}}}{{{f{Bd}}c}{{l{En}}}{{Hl{{An{{Cf{J`}}}}}}}}{{{f{Bd}}c}{{l{Ob}}}{{Hl{{An{{Cf{Jj}}}}}}}}{{{f{Bd}}{Nh{Gh}}}{{l{Kf}}}}{{{f{Bd}}c}{{l{Aj}}}{{Hl{{An{{Dn{{An{Al}}}}}}}}}}{{{f{Bd}}c}{{l{Aj}}}{{Hl{{An{{Cf{{Dn{{An{Al}}}}}}}}}}}}{{{f{Bd}}{f{{An{c}}}}}{{l{{Cb{c}}}}}Cd}{{{f{Bd}}e}{{l{{Cb{c}}}}}Cd{{Hl{{An{{Cf{c}}}}}}}}{{{f{Bd}}c}{{l{K`}}}{{Hl{{An{{Cf{Nl}}}}}}}}{{{f{Bd}}c}{{l{Kf}}}{{Hl{{An{{Cf{Gh}}}}}}}}{{{f{Bd}}c}{{l{Kl}}}{{Hl{{An{{Cf{Nj}}}}}}}}{{{f{Bd}}c}{{l{Eb}}}{{Hl{{An{{Cf{Jh}}}}}}}}{{{f{Bd}}c}{{l{Ed}}}{{Hl{{An{{Cf{Mb}}}}}}}}{{{f{Bd}}c}{{l{Nf}}}{{Hl{{An{Al}}}}}}{{{f{Bd}}}{{l{{Cb{c}}}}}Cd}{{{f{{l{c}}}}FlFl}{{l{c}}}Bf}{{{f{{l{Bb}}}}FlFl}{{l{Bb}}}}{{{f{{l{B`}}}}FlFl}{{l{B`}}}}{{{f{{l{{Cb{c}}}}}}FlFl}{{l{{Cb{c}}}}}Cd}{{{f{{l{C`}}}}FlFl}{{l{C`}}}}{{{f{{l{j}}}}FlFl}{{l{j}}}}{{{f{{l{Ah}}}}FlFl}{{l{Ah}}}}{{{f{{l{F`}}}}FlFl}{{l{F`}}}}{{{f{{l{Aj}}}}FlFl}{{l{Aj}}}}{{{f{Bd}}{Gb{c}}}{{l{{Cb{c}}}}}Cd}{{{f{Bd}}{Gb{c}}Ib}{{l{{Cb{c}}}}}Cd}{{{f{Bd}}Gb}{{l{c}}}Bf}{{{Mh{Od}}{Gb{{Cl{Cj}}}}J`J`}{{l{c}}}Dh}{{{f{{l{c}}}}}{{l{c}}}Lf}{{{l{Bb}}}}{{{f{{l{Bb}}}}}}{{{f{{l{Bb}}}}{f{{l{Bb}}}}}{{l{Bb}}}}{{{f{{l{B`}}}}{f{Bd}}}{{l{Bb}}}}{{{f{{l{B`}}}}{f{{l{B`}}}}}{{l{Bb}}}}{{{f{{l{c}}}}e}{{l{Bb}}}BfBj}{{{f{{l{Ah}}}}{f{{l{Ah}}}}}{{l{Bb}}}}{{{f{{l{Aj}}}}{f{{An{Al}}}}}{{l{Bb}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{Bb}}}Bf}{{{f{{l{C`}}}}{f{{l{C`}}}}}{{l{Bb}}}}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{Bb}}}}{{{f{{l{Aj}}}}{f{{l{Aj}}}}}{{l{Bb}}}}64038{{{f{{l{C`}}}}{f{{l{C`}}}}}}86:2{{{f{{l{c}}}}}FlDh}`{{{f{{l{Ah}}}}}{{A`{{Gj{Gh}}n}}}}{{{f{{l{C`}}}}}{{A`{{Gj{Gh}}n}}}}`{{{f{{l{Ah}}}}}{{`{{Of{}{{Ch{{Cf{Ab}}}}}}}}}}{{{f{{l{B`}}}}}{{`{{Of{}{{Ch{{Cf{{f{Bd}}}}}}}}}}}}{{{f{Db{l{Ah}}}}}{{`{Oh}}}}{{{f{{l{B`}}}}}{{`{Oh}}}}{{{f{{l{c}}}}}M`Bf}{{{f{Db{l{c}}}}}bDh}{{{f{{l{Eb}}}}MbOj}{{A`{{Cf{Jh}}n}}}}{{{f{{l{c}}}}MbOj}{{A`{{Cf{Mb}}n}}}Fd}{{{f{{l{Ed}}}}MbOj}{{A`{{Cf{Mb}}n}}}}{{{f{{l{Eb}}}}MbOj}{{A`{M`n}}}}{{{f{{l{c}}}}MbOj}{{A`{M`n}}}Fd}{{{f{{l{Ed}}}}MbOj}{{A`{M`n}}}}{{{f{Bd}}FlMb}{{A`{{l{Bb}}n}}}}{{{f{Bd}}FlMbMb}{{A`{{l{c}}n}}}Bf}{{{f{Bd}}Fl}{{l{c}}}Bf}{{{f{Bd}}FlMbMb}{{l{c}}}Bf}{{{f{{l{c}}}}}{{l{c}}}Dh}{{{f{{l{c}}}}}{{f{Od}}}Dh}{{{f{{l{Ob}}}}}Ab}{{{f{{l{Kf}}}}}Ab}{{{f{{l{Mn}}}}}Ab}{{{f{{l{Nn}}}}}Ab}{{{f{{l{En}}}}}Ab}{{{f{{l{K`}}}}}Ab}{{{f{{l{Eb}}}}}Ab}{{{f{{l{Nf}}}}}Ab}{{{f{{l{Nb}}}}}Ab}{{{f{{l{Ah}}}}}Ab}{{{f{{l{Ed}}}}}Ab}592081347:6{{{f{{l{c}}}}e}{}Bf{BhBj}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Bf}{{{l{c}}e}{}Bf{BhBj}}{{{l{c}}{l{c}}}{}Bf}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bl}{{{f{Db{l{c}}}}{f{Bd}}}bDh}{{{f{{l{c}}}}}{{l{c}}}Bf}{{{f{{l{Bb}}}}}{{l{Bb}}}}{{{f{{l{Aj}}}}}{{l{Aj}}}}{{{f{{l{B`}}}}}{{l{B`}}}}{{{f{{l{F`}}}}}{{l{F`}}}}{{{f{{l{C`}}}}}{{l{C`}}}}{{{f{{l{{Cb{c}}}}}}}{{l{{Cb{c}}}}}Cd}{{{f{{l{Ah}}}}}{{l{Ah}}}}{{{f{{l{c}}}}{f{Dj}}Ol}{{A`{Abn}}}Bf}{{{f{{l{c}}}}Fle}{{A`{{l{c}}n}}}Lf{{Af{{f{Db{l{c}}}}}{{Ad{Cf}}}}}}{{{f{{l{c}}}}Mbdd{Cf{Jj}}}{{A`{{l{c}}n}}}Dh}{{{f{{l{c}}}}Fldd{Cf{Jj}}}{{A`{{l{c}}n}}}Dh}{{{f{{l{Bb}}}}{f{{An{J`}}}}c}{{A`{Abn}}}{{Hh{}{{Ch{{Cf{d}}}}}}}}{{{f{Db{l{c}}}}{f{{An{J`}}}}e}{{A`{Abn}}}On{{Hh{}{{Ch{Cf}}}}}}{{{f{{l{B`}}}}{f{{An{J`}}}}c}{{A`{Abn}}}{{Hh{}{{Ch{{Cf{{f{Bd}}}}}}}}}}{{{f{{l{B`}}}}c{Cf{{f{Bd}}}}}{{A`{{l{B`}}n}}}{{Hh{}{{Ch{J`}}}}}}{{{f{{l{c}}}}eCf}{{A`{{l{c}}n}}}Bf{{Hh{}{{Ch{J`}}}}}}{{{f{{l{Aj}}}}c{Cf{{f{{An{Al}}}}}}}{{A`{{l{Aj}}n}}}{{Hh{}{{Ch{J`}}}}}}{{{f{{l{Bb}}}}c{Cf{d}}}{{A`{{l{Bb}}n}}}{{Hh{}{{Ch{J`}}}}}}{{{f{{l{c}}}}eg}{{A`{{l{c}}n}}}Bf{{Hh{}{{Ch{J`}}}}}{{Dj{Cf}{{Ad{Cf}}}}}}{{{f{{l{Bb}}}}ce}{{A`{{l{Bb}}n}}}{{Hh{}{{Ch{J`}}}}}{{Dj{{Cf{d}}}{{Ad{{Cf{d}}}}}}}}{{{f{{l{Aj}}}}ce}{{A`{{l{Aj}}n}}}{{Hh{}{{Ch{J`}}}}}{{Dj{{Cf{{f{{An{Al}}}}}}}{{Ad{{Cf{{Gb{Al}}}}}}}}}}{{{f{{l{B`}}}}ce}{{A`{{l{B`}}n}}}{{Hh{}{{Ch{J`}}}}}{{Dj{{Cf{{f{Bd}}}}}{{Ad{{Cf{Ef}}}}}}}}{{{f{{l{c}}}}{f{{l{Bb}}}}Cf}{{A`{{l{c}}n}}}Bf}{{{f{{l{Bb}}}}{f{{l{Bb}}}}{Cf{d}}}{{A`{{l{Bb}}n}}}}{{{f{{l{B`}}}}{f{{l{Bb}}}}{Cf{{f{Bd}}}}}{{A`{{l{B`}}n}}}}{{{f{{l{Aj}}}}{f{{l{Bb}}}}{Cf{{f{{An{Al}}}}}}}{{A`{{l{Aj}}n}}}}{{{f{Db{l{Ah}}}}}b}{{{f{Db{l{c}}}}d}bDh}{{{f{Db{l{Ah}}}}Eh}b}{{{f{Db{l{c}}}}J`}bDh}{{{f{Db{l{c}}}}Lh}bDh}{{{f{{l{B`}}}}Gh}{{l{B`}}}}{{{f{{l{Bb}}}}Gh}{{l{Bb}}}}{{{f{{l{C`}}}}Gh}{{l{C`}}}}{{{f{{l{Ah}}}}Gh}{{l{Ah}}}}{{{f{{l{F`}}}}Gh}{{l{F`}}}}{{{f{{l{Aj}}}}Gh}{{l{Aj}}}}{{{f{{l{{Cb{c}}}}}}Gh}{{l{{Cb{c}}}}}Cd}{{{f{{l{c}}}}Gh}{{l{c}}}Bf}{{{f{{l{B`}}}}Gh{Cf{{f{Bd}}}}}{{l{B`}}}}{{{f{{l{Aj}}}}Gh{Cf{{f{{An{Al}}}}}}}{{l{Aj}}}}{{{f{{l{Bb}}}}Gh{Cf{d}}}{{l{Bb}}}}{{{f{{l{c}}}}GhCf}{{l{c}}}Bf}{{{f{{l{{Cb{c}}}}}}Gh{Cf{{Cb{c}}}}}{{l{{Cb{c}}}}}Cd}{{{f{{l{C`}}}}Gh{Cf{{f{Ab}}}}}{{l{C`}}}}{{{f{{l{Ah}}}}Gh{Cf{{f{Ab}}}}}{{l{Ah}}}}{{{f{{l{F`}}}}Gh{Cf{{f{{An{Al}}}}}}}{{l{F`}}}}{{{f{Db{l{c}}}}}bDh}{{{f{{l{c}}}}GhFl}{{l{c}}}Dh}0{{{f{{l{F`}}}}d}{{l{F`}}}}{{{f{{l{j}}}}d}{{l{j}}}}{{{f{{l{Bb}}}}d}{{l{Bb}}}}{{{f{{l{B`}}}}d}{{l{B`}}}}{{{f{{l{c}}}}d}{{l{c}}}Bf}{{{f{{l{Aj}}}}d}{{l{Aj}}}}{{{f{{l{Aj}}}}El}{{l{Aj}}}}{{{f{{l{j}}}}El}{{l{j}}}}{{{f{{l{F`}}}}El}{{l{F`}}}}{{{f{{l{Bb}}}}El}{{l{Bb}}}}{{{f{{l{B`}}}}El}{{l{B`}}}}{{{f{{l{c}}}}El}{{l{c}}}Bf}{{{f{{l{c}}}}Gh}{{Gl{{l{c}}{l{c}}}}}Dh}0{{{f{{l{c}}}}Al}{{Cf{Mb}}}Bf}{{{f{{l{Ed}}}}Al}M`}{{{f{{l{Eb}}}}Al}M`}{{{f{{l{c}}}}Al}M`Fd}{{{f{{l{j}}}}}{{f{{An{Od}}}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Bf}{{{f{{l{c}}}}e}{}Bf{BhBj}}{{{l{c}}e}{}Bf{BhBj}}{{{l{c}}{l{c}}}{}Bf}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bl}{{{f{{l{Bb}}}}}{{Cf{J`}}}}{{{f{{l{c}}}}}CfBf}{{{f{{l{Aj}}}}}M`}{{{f{{l{Bb}}}}}M`}{{{f{{l{c}}}}}M`Bf}{{{f{{l{c}}}}{Cf{Fl}}}{{l{c}}}Dh}{{{f{{l{c}}}}{f{e}}}{{A`{{l{c}}n}}}Dh{{Hl{{An{J`}}}}A@`}}{{{f{{l{c}}}}{f{{l{En}}}}}{{A`{{l{c}}n}}}Dh}{{{f{{l{c}}}}{f{{An{A@b}}}}Lh}{{l{c}}}Dh}{{{f{{l{c}}}}{f{{An{A@b}}}}}{{l{c}}}Dh}{{{f{{l{B`}}}}{f{c}}}{{l{B`}}}{{Hl{{An{J`}}}}A@`}}{{{f{{l{j}}}}{f{{l{En}}}}}{{l{j}}}}{{{f{{l{c}}}}{f{e}}}{{l{c}}}{{Dh{}{{Gn{Df}}{A@d{Df}}}}Dh}{{Hl{{An{J`}}}}A@`}}{{{f{{l{Aj}}}}{f{c}}}{{l{Aj}}}{{Hl{{An{J`}}}}A@`}}{{{f{{l{B`}}}}{f{{l{En}}}}}{{l{B`}}}}{{{f{{l{Aj}}}}{f{{l{En}}}}}{{l{Aj}}}}{{{f{{l{j}}}}{f{c}}}{{l{j}}}{{Hl{{An{J`}}}}A@`}}{{{f{{l{c}}}}{f{{l{En}}}}}{{l{c}}}{{Dh{}{{Gn{Df}}{A@d{Df}}}}Dh}}`{{{f{{l{c}}}}dA@f}{{Gb{{Gb{A@h}}}}}Dh}{{{f{{l{c}}}}}{{l{c}}}Lf}{{{f{{l{B`}}}}Fl}{{A`{Abn}}}}{{{f{Db{l{Ah}}}}Eh}b}{{{f{Db{l{C`}}}}Eh}b}{{{f{{l{c}}}}}{{A`{{AA`{{A@j{f}}{A@n{{A@l{Fl}}}}}}n}}}Bf}{{{f{{l{Ah}}}}}{{A`{{AA`{AAb{A@n{{A@l{Fl}}}}}}n}}}}{{{f{c}}}e{}{}}{{{f{{l{Aj}}}}}{{l{B`}}}}{{{f{{l{c}}}}}{{Gb{Cf}}}Bf}{{{f{{l{c}}}}}{{AAd{Gb{Gb{Cf}}}}}Bf}{{{f{{l{c}}}}{f{{l{c}}}}}{}Bf}{{{l{c}}{l{c}}}{}Bf}{{{f{{l{c}}}}}{}Bf}{{{l{c}}}{}Bf}10{{{f{{l{Ah}}}}c}{{A`{{l{Ah}}n}}}{{Af{E`}{{Ad{{A`{Abn}}}}}}}}{{{f{{l{C`}}}}e}{{A`{{l{g}}n}}}{}{{Af{{Cf{E`}}}{{Ad{{A`{{Cf{c}}n}}}}}}Dl}Dh}{{{f{{l{Ah}}}}e}{{A`{{l{g}}n}}}{}{{Af{{Cf{E`}}}{{Ad{{A`{{Cf{c}}n}}}}}}Dl}Dh}{{{f{{l{C`}}}}c}{{A`{{l{C`}}n}}}{{Af{E`}{{Ad{{A`{Abn}}}}}}}}{{{f{{l{C`}}}}c}{{A`{{l{Ah}}n}}}{{Af{E`}{{Ad{{A`{Abn}}}}}}}}{{{f{{l{j}}}}c}{{A`{{l{j}}n}}}{{Af{{f{Ab}}}{{Ad{{A`{Abn}}}}}}}}{{{f{{l{c}}}}g}{{A`{{l{B`}}e}}}Dh{}{{Af{{f{DbEf}}}{{Ad{{A`{be}}}}}}}}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dh{}{}{{Af{}{{Ad{{A`{eg}}}}}}}Dh}{c{{A`{e}}}{}{}}0{{{f{Bd}}g}{{A`{{l{i}}e}}}Cj{}{{Hh{}{{Ch{{A`{ce}}}}}}}{{Dh{}{{Hf{c}}}}Dh}}11{{{f{{l{Ah}}}}{f{{l{c}}}}e}{{A`{{l{Ah}}n}}}Dh{{Af{{Cf{E`}}Cf}{{Ad{{A`{{Cf{Ab}}n}}}}}}}}{{{f{c}}}AAf{}}0{{{f{{l{c}}}}}{{A`{{l{c}}n}}}Bf}{{{f{{l{Aj}}}}}{{A`{{l{Aj}}n}}}}{{{f{{l{B`}}}}}{{A`{{l{B`}}n}}}}{{{f{{l{{Cb{c}}}}}}}{{A`{{l{{Cb{c}}}}n}}}Cd}{{{f{{l{Bb}}}}}{{A`{{l{Bb}}n}}}}{{{l{j}}}AAh}{{{f{{l{c}}}}{f{Ab}}}{{A`{{f{{l{c}}}}n}}}Dh}{{{f{Db{l{c}}}}}bDh}{{{f{{l{c}}}}Fl}{}Dh}{{{f{{l{c}}}}Al}{{Cf{Mb}}}Bf}{{{f{{l{Ed}}}}Al}M`}{{{f{{l{Eb}}}}Al}M`}{{{f{{l{c}}}}Al}M`Fd}{{{f{{l{Kl}}}}A@f{f{Db{Gb{Jj}}}}}{{A`{bn}}}}{{{f{{l{Bb}}}}A@f{f{Db{Gb{Jj}}}}}{{A`{bn}}}}{{{f{{l{F`}}}}A@f{f{Db{Gb{Jj}}}}}{{A`{bn}}}}{{{f{{l{Aj}}}}A@f{f{Db{Gb{Jj}}}}}{{A`{bn}}}}{{{f{{l{Nn}}}}A@f{f{Db{Gb{Jj}}}}}{{A`{bn}}}}{{{f{{l{En}}}}A@f{f{Db{Gb{Jj}}}}}{{A`{bn}}}}{{{f{{l{{Cb{c}}}}}}A@f{f{Db{Gb{Jj}}}}}{{A`{bn}}}Cd}{{{f{{l{K`}}}}A@f{f{Db{Gb{Jj}}}}}{{A`{bn}}}}{{{f{{l{B`}}}}A@f{f{Db{Gb{Jj}}}}}{{A`{bn}}}}{{{f{{l{Kf}}}}A@f{f{Db{Gb{Jj}}}}}{{A`{bn}}}}{{{f{{l{Eb}}}}A@f{f{Db{Gb{Jj}}}}}{{A`{bn}}}}{{{f{{l{Ob}}}}A@f{f{Db{Gb{Jj}}}}}{{A`{bn}}}}{{{f{{l{Ed}}}}A@f{f{Db{Gb{Jj}}}}}{{A`{bn}}}}{{{f{{l{Nf}}}}A@f{f{Db{Gb{Jj}}}}}{{A`{bn}}}}{{{f{{l{Nb}}}}A@f{f{Db{Gb{Jj}}}}}{{A`{bn}}}}{{{f{{l{Mn}}}}A@f{f{Db{Gb{Jj}}}}}{{A`{bn}}}}{{{f{{l{Nn}}}}A@f{f{Db{An{Jj}}}}}{{A`{bn}}}}{{{f{{l{{Cb{c}}}}}}A@f{f{Db{An{Jj}}}}}{{A`{bn}}}Cd}{{{f{{l{Ed}}}}A@f{f{Db{An{Jj}}}}}{{A`{bn}}}}{{{f{{l{Kf}}}}A@f{f{Db{An{Jj}}}}}{{A`{bn}}}}{{{f{{l{K`}}}}A@f{f{Db{An{Jj}}}}}{{A`{bn}}}}{{{f{{l{B`}}}}A@f{f{Db{An{Jj}}}}}{{A`{bn}}}}{{{f{{l{Aj}}}}A@f{f{Db{An{Jj}}}}}{{A`{bn}}}}{{{f{{l{Mn}}}}A@f{f{Db{An{Jj}}}}}{{A`{bn}}}}{{{f{{l{Eb}}}}A@f{f{Db{An{Jj}}}}}{{A`{bn}}}}{{{f{{l{Kl}}}}A@f{f{Db{An{Jj}}}}}{{A`{bn}}}}{{{f{{l{Nf}}}}A@f{f{Db{An{Jj}}}}}{{A`{bn}}}}{{{f{{l{Nb}}}}A@f{f{Db{An{Jj}}}}}{{A`{bn}}}}{{{f{{l{En}}}}A@f{f{Db{An{Jj}}}}}{{A`{bn}}}}{{{f{{l{F`}}}}A@f{f{Db{An{Jj}}}}}{{A`{bn}}}}{{{f{{l{Bb}}}}A@f{f{Db{An{Jj}}}}}{{A`{bn}}}}{{{f{{l{Ob}}}}A@f{f{Db{An{Jj}}}}}{{A`{bn}}}}{ce{}{}}0{{{f{{l{C`}}}}}Fl}{{{f{Bd}}c}{{l{e}}}Cj{{Dh{}{{Hf{c}}}}Dh}}{{{f{{l{e}}}}c}{{l{e}}}Cj{{Dh{}{{Hf{c}}}}Dh}}{{{f{{l{c}}}}{Gb{{Cl{Cj}}}}}{{l{c}}}Dh}{{{l{c}}{f{Bd}}}{{l{c}}}Dh}{{{f{{An{AAj}}}}e}c{}{{AAl{{f{{l{En}}}}}{{Ad{c}}}}}}{{{l{j}}{Cf{Ib}}}{{l{j}}}}{{{l{j}}{l{Bb}}}{{l{j}}}}{{{f{{l{c}}}}Lh}{{l{c}}}Dh}{{{f{{l{c}}}}}{}Bf}{{{l{c}}}{}Bf}{{{l{c}}{l{c}}}{}Bf}{{{f{{l{c}}}}{f{{l{c}}}}}{}Bf}32013223103232102323013232103232{{{f{{l{Ah}}}}{f{{l{c}}}}e}{{l{Ah}}}Dh{{Af{{Cf{E`}}Cf}{{Ad{{Cf{Ab}}}}}}}}{{{f{{l{C`}}}}{f{{l{c}}}}e}{{l{C`}}}Dh{{Af{{Cf{E`}}Cf}{{Ad{{Cf{Ab}}}}}}}}{{{f{Db{l{j}}}}{f{{l{j}}}}}b}{{{f{{l{c}}}}{f{{l{Bb}}}}{f{{l{c}}}}}{{A`{{l{c}}n}}}Dh}````{{{ABd{}{{AAn{c}}{AB`{e}}{ABb{g}}}}{ABd{}{{AAn{c}}{AB`{e}}{ABb{g}}}}}e{}{}{}}{{{ABd{}{{AAn{c}}{AB`{e}}{ABb{g}}}}c}e{}{}{}}{{c{ABd{}{{AAn{c}}{AB`{e}}{ABb{g}}}}}e{}{}{}}{{{ABd{}{{AAn{c}}{AB`{e}}{ABb{g}}}}{ABd{}{{AAn{c}}{AB`{e}}{ABb{g}}}}}g{}{}{}}{{{ABd{}{{AAn{c}}{AB`{e}}{ABb{g}}}}c}g{}{}{}}{{c{ABd{}{{AAn{c}}{AB`{e}}{ABb{g}}}}}g{}{}{}}{{{ABd{}{{AAn{c}}{AB`{e}}{ABb{g}}}}}e{}{}{}}65654654650654654````````````````{{{f{c}}h}b{}}000{{{f{DbABf}}{f{Cj}}}b}{{{f{DbABf}}}b}{{{f{DbABh}}}b}{{{f{DbABj}}c}b{{Cn{}{{Ch{{Cf{d}}}}}}Il}}{{{f{Db{ABl{c}}}}e}bBf{{Cn{}{{Ch{Cf}}}}Il}}{{{f{Db{ABl{c}}}}e}bBf{{Cn{}{{Ch{}}}}Il}}{{{f{DbABn}}}b}{{{f{DbAC`}}}b}65{{{f{DbACb}}}b}{{{f{DbACd}}}b}{{{f{DbABj}}}b}{{{f{DbACf}}}b}{{{f{Db{ABl{c}}}}}bBf}{{{f{Db{ACh{c}}}}}b{ACjA@`}}{{{f{DbACl}}}b}{{{f{DbACn}}}b}{{{f{Db{AD`{c}}}}}bBf}{{{f{DbABf}}{Cf{{f{Cj}}}}}b}{{{f{DbABf}}{Cf{{f{Ab}}}}}{{A`{bn}}}}{{{f{DbABn}}{Cf{{f{Ab}}}}}{{A`{bn}}}}{{{f{Db{ABl{c}}}}{Cf{{f{An}}}}}bBf}{{{f{Db{ACh{c}}}}{Cf{e}}}b{ACjA@`}{{Hl{c}}}}{{{f{DbAC`}}{Cf{c}}}b{}}{{{f{DbABn}}{f{Ab}}}{{A`{bn}}}}{{{f{DbABf}}{f{Ab}}}{{A`{bn}}}}{{{f{DbABh}}{f{Ab}}}{{A`{bn}}}}{{{f{DbACb}}{f{Ab}}}{{A`{bn}}}}{{{f{DbACd}}{f{Ab}}}{{A`{bn}}}}{{{f{DbABj}}{f{Ab}}}{{A`{bn}}}}{{{f{DbACf}}{f{Ab}}}{{A`{bn}}}}{{{f{Db{ABl{c}}}}{f{Ab}}}{{A`{bn}}}Bf}{{{f{Db{ABl{c}}}}{f{An}}}bBf}{{{f{DbACb}}c}b{{Cn{}{{Ch{{Cf{{f{Bd}}}}}}}}Il}}{{{f{DbACd}}c}b{{Cn{}{{Ch{{Cf{{f{{An{Al}}}}}}}}}}Il}}{{{f{DbAC`}}c}b{}}{{{f{Db{ACh{c}}}}e}b{ACjA@`}{{Hl{c}}}}{{{f{DbACl}}d}b}{{{f{Db{AD`{c}}}}}bBf}{{{f{DbACb}}c}b{{Cn{}{{Ch{{f{Bd}}}}}}}}{{{f{DbACd}}c}b{{Cn{}{{Ch{{f{{An{Al}}}}}}}}}}{{{f{c}}}{{f{e}}}{}{}}0000000000{{{f{Dbc}}}{{f{Dbe}}}{}{}}0000000000`{{{f{{ACh{c}}}}}{{ACh{c}}}{ACjA@`}}{{{f{ACl}}}ACl}{{{f{ACn}}}ACn}{{{f{{AD`{c}}}}}{{AD`{c}}}{ADbBf}}{{{f{c}}{f{Dbe}}}b{}{}}000{{{f{c}}}b{}}000{{}ABf}{{}ABh}{Fl{{f{c}}}{}}0000000000{Fl{{f{Dbc}}}{}}0000000000{Flb}0000000000{{{f{ACb}}}d}{{{f{ACd}}}d}{{{f{ABj}}}d}{{{f{{ABl{c}}}}}dBf}{{{f{ABn}}}d}{{{f{ACb}}}{{f{Od}}}}{{{f{ACd}}}{{f{Od}}}}{{{f{ABj}}}{{f{Od}}}}{{{f{{ABl{c}}}}}{{f{Od}}}Bf}{{{f{ABn}}}{{f{Od}}}}{AC`{{l{c}}}Dh}{{{f{DbABf}}}{{l{Ah}}}}{{{f{DbABh}}}{{l{Ah}}}}{{{f{DbACf}}}{{l{Ah}}}}{{{f{DbABn}}}{{l{Ah}}}}{{{ACh{{An{Al}}}}}{{l{Aj}}}}{{{ACh{Bd}}}{{l{B`}}}}{ACl{{l{Bb}}}}{ACnADd}{{{AD`{c}}}{{l{c}}}Bf}`{cc{}}0000000000{{{f{Bd}}e}ADf{}{{Cn{}{{Ch{{Cf{c}}}}}}}}{{{f{Bd}}e}ADf{}{{Cn{}{{Ch{c}}}}}}{{{f{Bd}}{f{{An{c}}}}}ADf{}}{{{f{Bd}}{f{{An{{Cf{c}}}}}}}ADf{}}{{{f{Eh}}FlFl{f{Bd}}}{{A`{{Cl{ABn}}n}}}}{{}Fl}0000000000{{{f{DbACb}}}{{Cl{Cj}}}}{{{f{DbACd}}}{{Cl{Cj}}}}{{{f{DbABj}}}{{Cl{Cj}}}}{{{f{Db{ABl{c}}}}}{{Cl{Cj}}}Bf}{{{f{DbABn}}}{{Cl{Cj}}}}{ce{}{}}0000000000`{{{f{Bd}}Fl{Cf{Eh}}}ABf}{{{f{Bd}}Fl{Cf{Eh}}}ABh}{{{f{Bd}}FlFl}ACb}{{{f{Bd}}FlFl}ACd}{{{f{Bd}}FlFl}ABj}{{{f{Bd}}Fl}ACf}{{{f{Bd}}FlFlEh}{{ABl{c}}}Bf}{{{f{Bd}}Fl}{{ACh{c}}}{ACjA@`}}{{{f{Bd}}Fl}ACl}{{{f{Bd}}Fl}ACn}{{{f{Bd}}Fl}{{AD`{c}}}Bf}{{{f{Bd}}FlFlEhEh}{{ABl{c}}}Bf}{{{f{DbAC`}}}b}{{{f{DbACl}}}b}{{{f{DbACn}}}b}{{{f{Db{AD`{c}}}}}bBf}{{{f{c}}}e{}{}}000{c{{A`{e}}}{}{}}000000000000000000000{{{f{c}}}AAf{}}0000000000{ce{}{}}0000000000````````{{{f{DbABn}}}b}{{{f{DbABn}}{Cf{{f{Ab}}}}}{{A`{bn}}}}{{{f{DbABn}}{f{Ab}}}{{A`{bn}}}}`{{{f{ABn}}}d}{{{f{ABn}}}{{f{Od}}}}{{{f{DbABn}}}{{l{Ah}}}}{{{f{Eh}}FlFl{f{Bd}}}{{A`{{Cl{ABn}}n}}}}{{{f{DbABn}}}{{Cl{Cj}}}}````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{{f{Ff}}}Ff}{{{f{c}}{f{Dbe}}}b{}{}}{{{f{c}}}b{}}0{{}Ff}{Fl{{f{c}}}{}}{Fl{{f{Dbc}}}{}}{Flb}{{{f{Ff}}{f{Ff}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{Ff}}{f{DbHb}}}{{A`{bHd}}}}{cc{}}{{{f{Ff}}{f{Dbc}}}bADh}{{}Fl}{ce{}{}}{{{f{Ff}}}d}{{{f{c}}}e{}{}}{c{{A`{e}}}{}{}}0{{{f{c}}}AAf{}}4``{{ADj{f{Bd}}}{{l{c}}}Dh}{{ADl{f{{l{c}}}}}{{l{c}}}Dh}10{{ADl{f{Bd}}Eh}{{l{c}}}Dh}0{{ADj{f{Bd}}}{{A`{{l{c}}e}}}Dh{}}{{ADl{f{{l{c}}}}}{{A`{{l{c}}e}}}Dh{}}10{{ADl{f{Bd}}Eh}{{A`{{l{c}}e}}}Dh{}}0`{ADnADn}``{{AE`{f{Bd}}Eh}e{}{{AEb{c}}}}{{e{f{Bd}}Eh}AEb{}{{Id{}{{Ch{c}}}}}}````{{{f{c}}}{{f{e}}}{}{}}00{{{f{Dbc}}}{{f{Dbe}}}{}{}}00{Fl{{f{c}}}{}}00{Fl{{f{Dbc}}}{}}00{Flb}00{cc{}}00{{}Fl}00{ce{}{}}00000{{{f{AEd}}}AEf}{{{f{AEh}}Eh}AEj}{{{f{DbAEf}}}Cf}{{{f{DbAEj}}}Cf}{{{f{Db{AEl{c}}}}}CfCn}21{{{f{Db{AEl{c}}}}}CfGf}`{{{f{AEf}}}{{Gl{Fl{Cf{Fl}}}}}}{{{f{AEj}}}{{Gl{Fl{Cf{Fl}}}}}}{{{f{{AEl{c}}}}}{{Gl{Fl{Cf{Fl}}}}}Cn}{c{{A`{e}}}{}{}}00000{{{f{c}}}AAf{}}00;;;`````````````````````````{{{f{c}}h}b{}}0000{{}Gd}{{}Jb}{{GdGd}Gd}{{JbJb}Jb}{{{f{DbGd}}Gd}b}{{{f{DbJb}}Jb}b}3210{{{f{Gd}}}J`}0{{{f{Jb}}}Al}05432{{{f{c}}}{{f{e}}}{}{}}000000{{{f{Dbc}}}{{f{Dbe}}}{}{}}000000{{{f{{Mf{c}}}}}{{Mf{c}}}Dh}{{{f{{Jl{c}}}}}{{Jl{c}}}Dh}{{{f{AEn}}}AEn}{{{f{Gd}}}Gd}{{{f{Jb}}}Jb}{{{f{c}}{f{Dbe}}}b{}{}}0000{{{f{c}}}b{}}0000000{{{f{DbAF`}}}b}{GdGd}{JbJb}{{{f{Gd}}Gd}d}{{{f{Jb}}Jb}d}{{}{{Mf{c}}}Dh}{{}{{Jl{c}}}Dh}{{}Gd}{{}Jb}{{{f{{Md{c}}}}}fDh}{Fl{{f{c}}}{}}000000{Fl{{f{Dbc}}}{}}000000{{GdGd}Gd}{{JbJb}Jb}{{}d}{{{f{Mj}}}{{Cf{J`}}}}{{{Jl{c}}J`}{{Jl{c}}}Dh}{{{f{{Jl{c}}}}}{{Cf{J`}}}Dh}{{{Jl{c}}{Cf{J`}}}{{Jl{c}}}Dh}{Flb}000000<;5{{{f{Gd}}{f{Gd}}}d}{{{f{Jb}}{f{Jb}}}d}7{{{f{DbGd}}c}b{{Hh{}{{Ch{Gd}}}}}}{{{f{DbJb}}c}b{{Hh{}{{Ch{Jb}}}}}}{{{Jl{c}}d}{{Jl{c}}}Dh}{{{Jl{c}}{Cf{d}}}{{Jl{c}}}Dh}{{{f{{Jl{c}}}}Gd}{{Jl{c}}}Dh}{{{f{{Jl{c}}}}Gd}{{Jl{e}}}DhDh}{{{Jl{c}}Jb}{{Jl{c}}}Dh}{{{Jl{c}}{Cf{Jb}}}{{Jl{c}}}Dh}{{{f{{Jl{c}}}}{f{DbHb}}}{{A`{bHd}}}Dh}{{{f{AEn}}{f{DbHb}}}{{A`{bHd}}}}{{{f{Gd}}{f{DbHb}}}{{A`{bHd}}}}0000{{{f{Jb}}{f{DbHb}}}{{A`{bHd}}}}0000{cc{}}000000{J`{{Cf{Gd}}}}{Al{{Cf{Jb}}}}{J`Gd}0{AlJb}010{g{{A`{ic}}}{}{}{{Hj{c}{{Ch{e}}}}}{}}0{cGd{{Hh{}{{Ch{Gd}}}}}}{cJb{{Hh{}{{Ch{Jb}}}}}}{{{f{Bd}}}{{Cf{Gd}}}}{{{f{Bd}}}{{Cf{Jb}}}}{{{f{{Jl{c}}}}}{{Cf{J`}}}Dh}{{{f{{Jl{c}}}}}dDh}{{{f{Jb}}}d}{{{f{Mj}}}Jb}{{{f{{Jl{c}}}}}JbDh}0{{{f{{Jl{c}}}}}{{Cf{f}}}Dh}0{{{f{Db{Mf{c}}}}}{{f{Db{Jl{c}}}}}Dh}{{{f{Jb}}}Lh}{{}Fl}000000{{{f{DbGd}}Gd}b}{{{f{DbJb}}Jb}b}{{GdGd}Gd}{{JbJb}Jb}{{{f{Gd}}Gd}d}{{{f{Jb}}Jb}d}{ce{}{}}000000{Gd}{Jb}{{{f{Gd}}}d}{{{f{Jb}}}d}{{{f{{Jl{c}}}}}dDh}21{{{f{{Jl{c}}}}}LhDh}111{{{f{Gd}}}{{AFb{Gd}}}}{{{f{Jb}}}{{AFb{Jb}}}}{{{f{Gd}}}{{AFd{Gd}}}}{{{f{Jb}}}{{AFd{Jb}}}}{{}d}{{}{{f{{AFh{AFf}}}}}}{{{f{Mj}}}{{Cf{M`}}}}{{{f{{Jl{c}}}}}{{Cf{M`}}}Dh}{{{Jl{c}}}{{Jl{c}}}Dh}{{{Jl{c}}Cf}{{Jl{c}}}Dh}{{{f{{Jl{c}}}}{Jl{c}}}{{AFj{c}}}Dh}4321{{{Jl{c}}}{{Mf{c}}}Dh}{GdGd}{JbJb}{{{f{{Mf{c}}}}}{{Ml{{Jl{c}}}}}Dh}{{{f{DbGd}}Gd}b}{{{f{DbJb}}Jb}b}{{{f{DbGd}}Gdd}b}{{{f{DbJb}}Jbd}b}{{{f{Db{Jl{c}}}}{Cf{J`}}}bDh}{{{f{Db{Jl{c}}}}d}bDh}{{{f{DbJb}}d}b}{{{f{Db{Jl{c}}}}Jb}bDh}{{{f{Db{Jl{c}}}}Cf}bDh}033{{{f{Db{Jl{c}}}}Lh}bDh}{{{f{DbJb}}Lh}b}{{{Jl{c}}Lh}{{Jl{c}}}Dh}{{{Jl{c}}{Cf{Lh}}}{{Jl{c}}}Dh}{{GdGd}Gd}{{JbJb}Jb}>=10{{{Mf{c}}}{{Jl{c}}}Dh}{{{f{c}}}e{}{}}0000{{{f{DbGd}}Gd}b}{{{f{DbJb}}Jb}b}{c{{A`{e}}}{}{}}0000000000000{{{f{{Mf{c}}}}}{{Cf{{Ml{{Jl{c}}}}}}}Dh}{{{f{{Mf{c}}}}}{{Cf{{Jn{{Jl{c}}}}}}}Dh}{{{f{c}}}AAf{}}00000098{{{f{{Mf{c}}}}}{{f{{AFl{Mj}}}}}Dh}{ce{}{}}000000{AF`AF`}{{{f{{Mf{c}}}}}{{Jn{{Jl{c}}}}}Dh}````{{{f{c}}h}b{}}{{{f{{AFn{c}}}}Fl}{{Gl{{AFn{c}}{AFn{c}}}}}Cd}{e{{AFn{c}}}Cd{{Hh{}{{Ch{{Cf{{f{c}}}}}}}}}}{e{{AFn{c}}}Cd{{Hh{}{{Ch{{f{c}}}}}}}}{{AG`e}g{}{{Hh{}{{Ch{c}}}}}{}}0{{{f{Jd}}}{{f{AGb}}}}{{{f{{AFn{c}}}}}{{f{AGb}}}Cd}{{{f{Db{AFn{c}}}}}{{f{DbAGb}}}Cd}{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}`{{{f{{AFn{c}}}}Fl}dCd}{{{f{{AFn{c}}}}}{{AFn{c}}}{ADbCd}}{{{f{c}}{f{Dbe}}}b{}{}}{{{f{c}}}b{}}{{{f{{AFn{c}}}}}{{f{AG`}}}Cd}{Fl{{f{c}}}{}}{Fl{{f{Dbc}}}{}}{Flb}{{{f{{f{Jd}}}}{f{{f{Jd}}}}}d}{{{f{Jd}}{f{Jd}}}d}{{{f{{AFn{c}}}}{f{DbHb}}}{{A`{bHd}}}{AGdCd}}{cc{}}{{FlAG`}{{AFn{c}}}Cd}{{{f{{AFn{c}}}}Fl}{{Cf{{f{c}}}}}Cd}{{}AG`}{{{f{Ib}}{f{{AFn{c}}}}{f{{AFn{c}}}}}{{AFn{c}}}Cd}{{AG`{f{Ib}}}{{AFn{c}}}Cd}{{{f{Ib}}{f{{AFn{c}}}}}{{AFn{c}}}Cd}0{{}Fl}{ce{}{}}{{{f{{AFn{c}}}}}{}Cd}{{{f{{AFn{c}}}}Fl}dCd}0{{{f{c}}Fl}d{}}{{{f{{AFn{c}}}}}{{AGh{AGf}}}Cd}{{{f{{AFn{c}}}}}{{AGh{{f{c}}{Fj{c}}AGf}}}Cd}{{{f{{AFn{c}}}}}FlCd}0`{db}{{{f{Db{AFn{c}}}}{Cf{Ib}}}bCd}{{{f{Db{AFn{c}}}}FlFl}bCd}{{{f{c}}FlFl}e{}{}}01{{{f{{AFn{c}}}}Fl}{{Gl{{Cl{Cj}}{Cl{Cj}}}}}Cd}0{{{f{Jd}}}{{Cl{Jd}}}}{{{f{{AFn{c}}}}}{{Cl{Cj}}}Cd}{{{f{c}}}e{}{}}{g{{A`{{AFn{c}}e}}}Cd{}{{Hh{}{{Ch{{A`{{Cf{{f{c}}}}e}}}}}}}}{g{{A`{{AFn{c}}e}}}Cd{}{{Hh{}{{Ch{{A`{{f{c}}e}}}}}}}}{{AG`g}{{A`{ie}}}{}{}{{Hh{}{{Ch{{A`{ce}}}}}}}{}}0{c{{A`{e}}}{}{}}0{{{f{c}}}AAf{}}{{{f{Jd}}}{{f{Bd}}}}{{}{{f{Bd}}}}{{{f{{AFn{c}}}}}{{Cf{{f{Ib}}}}}Cd}{{{f{{AFn{c}}}}Fl}{{f{c}}}Cd}0{{{f{{AFn{c}}}}Fl}{}Cd}{{{f{{AFn{c}}}}}{{f{{Mh{{Gb{c}}}}}}}Cd}{{{f{{AFn{c}}}}}{}Cd}{{{f{{AFn{c}}}}}{{Fj{c}}}Cd}{ce{}{}}{{{AFn{c}}{Cf{Ib}}}{{AFn{c}}}Cd}{{{f{{AFn{c}}}}{Cf{Ib}}}{{Cl{Cj}}}Cd}1`{{{f{Db{AGj{c}}}}}bCd}0{{{f{Db{AGj{c}}}}{Cf{c}}}bCd}{{{f{Db{AGj{c}}}}c}bCd}{{{f{Db{AGj{c}}}}{f{AGb}}}bCd}{{{f{Db{AGj{c}}}}{f{AGb}}}{{A`{bn}}}Cd}{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{}{{AGj{c}}}Cd}{Fl{{f{c}}}{}}{Fl{{f{Dbc}}}{}}{Flb}{{{AGj{c}}}{{l{{Cb{c}}}}}Cd}{cc{}}{{}Fl}{ce{}{}}{{{f{Bd}}Fl}{{AGj{c}}}Cd}{{{f{Db{AGj{c}}}}}AbCd}{c{{A`{e}}}{}{}}0{{{f{c}}}AAf{}}4````{{{f{DbAGl}}}b}{{{f{DbAGl}}{Cf{{f{AGb}}}}}b}{{{f{DbAGl}}{f{AGb}}}b}{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}`?>={{{f{AGn}}{f{DbHb}}}{{A`{bHd}}}}<{{{f{Bd}}Fl}{{Cl{AGl}}}}{{}{{Mh{Dj}}}}{{}AG`}>={{}d}`{{{Cl{Dj}}{Mh{Dj}}AG`}b}{{{f{DbAGl}}}Ab}==<{ce{}{}}``````````````````````````````````````````````{{{f{c}}h}b{}}00{{{f{{AHb{}{{AH`{c}}}}}}g}{{AHb{}{{AH`{c}}}}}{}{}{{Dj{{Cf{e}}}{{Ad{{Cf{c}}}}}}Dl}}{{{f{AHd}}{f{Dj}}}AHd}{{{f{AHd}}{f{Dj}}}{{l{c}}}Dh}{{{f{{AHb{}{{AH`{c}}}}}}i{f{Db{An{g}}}}}b{}{}{}{{Dj{{Cf{e}}{f{g}}}{{Ad{g}}}}}}{{{f{{AHb{}{{AH`{c}}}}}}g}{{AHb{}{{AH`{c}}}}}{}{}{{Dj{e}{{Ad{c}}}}Dl}}{{{f{AHf}}El}{{l{En}}}}{{{f{AHf}}{f{{An{Ab}}}}{f{Fb}}}{{A`{{l{En}}n}}}}{{{f{AHh}}}{{A`{{l{En}}n}}}}`{{{f{c}}}{{f{e}}}{}{}}00{{{f{Dbc}}}{{f{Dbe}}}{}{}}00{{{f{AHj}}{f{Eh}}}{{A`{Abn}}}}0{{{f{AHj}}{f{Eh}}Ff}{{A`{Abn}}}}{{{f{El}}}El}{{{f{Fb}}}Fb}{{{f{AHl}}}AHl}{{{f{c}}{f{Dbe}}}b{}{}}00{{{f{c}}}b{}}0000{{}El}{{}Fb}{Fl{{f{c}}}{}}00{Fl{{f{Dbc}}}{}}00``{Flb}00{{{f{El}}{f{El}}}d}{{{f{Fb}}{f{Fb}}}d}{{{f{AHl}}{f{AHl}}}d}{{{f{{AHn{}{{Ch{c}}}}}}e}c{}{}}0{{{f{c}}{f{e}}}d{}{}}00000{{{f{AI`}}}{{A`{Abn}}}}{{{f{AI`}}}{{A`{{Gl{Ab{Gj{Gh}}}}n}}}}`{{{f{AIb}}c}{{A`{AIbn}}}{}}{{{f{AId}}{f{{l{Bb}}}}}{{A`{{l{c}}n}}}Dh}`{{{f{El}}{f{DbHb}}}{{A`{bHd}}}}{{{f{Fb}}{f{DbHb}}}{{A`{bHd}}}}{{{f{AHl}}{f{DbHb}}}{{A`{bHd}}}}{{{f{Fb}}}El}{cc{}}{{{f{El}}}Fb}11`{{{f{Bd}}cFl}AIf{}}{{{f{Bd}}Fl}AIh}`{{{f{AIj}}Fl}{{A`{Inn}}}}{{{f{AIj}}Fl}In}??{{{f{El}}{f{Dbc}}}bADh}{{{f{Fb}}{f{Dbc}}}bADh}{{{f{AHl}}{f{Dbc}}}bADh}{{}Fl}00{ce{}{}}00{{{f{AIl}}}{{A`{{l{Bb}}n}}}}{{{f{AIn}}}{{A`{{l{Bb}}n}}}}{{{f{{AHn{}{{Ch{c}}}}}}e}c{}{}}0``{{{f{AJ`}}}{{Cf{c}}}{}}{{{f{AJ`}}}{{Cf{Mb}}}}{{{f{AJb}}}{{Cf{c}}}{}}2{{{f{AJ`}}}{{Cf{{Gl{cc}}}}}{}}``{{{f{AHh}}}{{A`{Fln}}}}{{}El}{{}Fb}{{{f{AJd}}FlFl}{{l{c}}}Dh}88``{{{f{AI`}}}{{A`{{Gj{Gh}}n}}}}{{{f{AJb}}MbOj}{{A`{{Cf{c}}n}}}{}}{{{f{AJf}}}Ab}0{{{f{AJh}}}AJh}{{{f{AJj}}{f{Dj}}Ol}{{A`{Abn}}}}{{{f{AJl}}c{Cf{e}}}{{A`{AJln}}}{{Hh{}{{Ch{J`}}}}}{}}{{{f{AJl}}ci}{{A`{AJln}}}{{Hh{}{{Ch{J`}}}}}{}{}{{Dj{{Cf{e}}}{{Ad{{Cf{g}}}}}}}}`{{{f{AJl}}{f{{l{Bb}}}}{Cf{c}}}{{A`{AJln}}}{}}{{{f{AJn}}Gh}{{l{c}}}Dh}{{{f{AK`}}Ghc}{{l{e}}}{}Dh}{{{f{AKb}}FlFl}AKb}0`{{{f{AHf}}d}{{l{c}}}Dh}{{{f{AHf}}El}{{l{c}}}Dh}{{{f{AKd}}Al}{{Cf{Mb}}}}{{{f{AJ`}}}{{Cf{c}}}{}}{{{f{AKf}}{f{c}}}{{A`{AKfn}}}A@`}{{{f{AKh}}{f{c}}}AKhA@`}{{{f{AKj}}}{{Gb{{f{{An{Al}}}}}}}}{{{f{c}}}e{}{}}00{c{{A`{e}}}{}{}}00000{{{f{c}}}AAf{}}00{{{f{AHh}}}{{A`{AHhn}}}}8{ce{}{}}00{{Eld}El}{{Fbd}Fb}1010{{Fbc}Fb{{Hh{}{{Ch{d}}}}}}210{ElEl}{FbFb}`{{{f{AKl}}{f{{l{Bb}}}}{f{{l{c}}}}}{{A`{{l{c}}n}}}Dh}``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}DhDh{{Dj{ff}{{Ad{}}}}}{{Dj{f}{{Ad{}}}}}{{Dj{f}{{Ad{}}}}}Dh}{{{l{c}}{l{e}}gik}{{l{m}}}DhDh{{Dj{}{{Ad{}}}}}{{Dj{}{{Ad{}}}}}{{Dj{}{{Ad{}}}}}Dh}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DhDhCj{{Af{ff}{{Ad{g}}}}}{{Dh{}{{Hf{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}DhDh{{AKn{CfCf}}}Dh}{{{f{{l{c}}}}{f{{l{e}}}}g}bDhDh{{Af{CfCf}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{B`}}}DhDh{{Af{{f{DbEf}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DhDh{}{{Af{}{{Ad{g}}}}}Dh}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Bd}}}{{l{k}}}DhDh{CjAL`}{{Af{ff}{{Ad{g}}}}}{{Dh{}{{Hf{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Bd}}}{{l{k}}}DhDhCj{{Af{ff}{{Ad{g}}}}}{{Dh{}{{Hf{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}DhDhCj{{Af{}{{Ad{g}}}}}{{Dh{}{{Hf{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{A`{Abn}}}DhDh{{Af{ff}{{Ad{{Cl{Cj}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}DhDh{{Af{ff}{{Ad{{Cl{Cj}}}}}}}}85{{{f{{l{c}}}}{f{{l{e}}}}k}{{A`{{l{m}}i}}}DhDh{}{}{{Af{CfCf}{{Ad{{A`{{Cf{g}}i}}}}}}}Dh}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}DhDhDh{{ALb{CfCfCf}}}Dh}{{{f{{l{c}}}}{f{{l{e}}}}k}{{A`{{l{m}}i}}}DhDhCjALd{{Af{ff}{{Ad{{A`{gi}}}}}}}{{Dh{}{{Hf{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}k{f{Bd}}}{{A`{{l{m}}i}}}DhDhCjALd{{Af{ff}{{Ad{{A`{gi}}}}}}}{{Dh{}{{Hf{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{A`{{l{c}}g}}}DhDhALd{{Af{ff}{{Ad{{A`{{Cl{Cj}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{A`{{l{o}}k}}}DhDhDh{}{}{{Af{CfCfCf}{{Ad{{A`{{Cf{i}}k}}}}}}}Dh}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dh{}{}{{Af{Cf}{{Ad{{A`{{Cf{e}}g}}}}}}}Dh}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dh{}{}{{Af{}{{Ad{{A`{eg}}}}}}}Dh}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dh{CjAL`}ALd{{Af{f}{{Ad{{A`{eg}}}}}}}{{Dh{}{{Hf{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Dh{{ALf{Cf}}}Dh}{{{f{{l{c}}}}e}{{l{g}}}DhALfDh}{{{f{{l{c}}}}g}{{l{i}}}DhCj{{Af{f}{{Ad{e}}}}}{{Dh{}{{Hf{e}}}}}}{{{l{c}}g}{{l{i}}}DhCj{{Af{}{{Ad{e}}}}}{{Dh{}{{Hf{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Dh{CjAL`}{{Af{f}{{Ad{e}}}}}{{Dh{}{{Hf{e}}}}}}0{{{f{{l{c}}}}}FlBf}0{{LhLh}Lh}{{{f{{l{En}}}}J`}{{A`{bn}}}}{{{f{{ALh{J`}}}}J`}{{A`{bn}}}}````{{{f{c}}h}b{}}{{{f{{l{c}}}}eALjd}{{Gb{J`}}}Dh{{Cn{}{{Ch{Cf}}}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{{f{ALj}}}ALj}{{{f{c}}{f{Dbe}}}b{}{}}{{{f{c}}}b{}}0{{}ALj}{Fl{{f{c}}}{}}{Fl{{f{Dbc}}}{}}{Flb}{{{f{ALj}}{f{ALj}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{ALj}}{f{DbHb}}}{{A`{bHd}}}}{cc{}}{{{f{ALj}}{f{Dbc}}}bADh}{{}Fl}{ce{}{}}{{{f{{An{f}}}}cJ`e}{{Gb{J`}}}{{Cn{}{{Ch{Cf}}}}}{{Dj{fFlf}{{Ad{d}}}}}}{{{f{c}}}e{}{}}{c{{A`{e}}}{}{}}0{{{f{c}}}AAf{}}4`{{Fl{f{Db{Gb{d}}}}}b}```{{{f{AKb}}FlFl}AKb}0{{Fl{f{{An{Ab}}}}{f{DbFb}}}{{A`{{ALl{{l{En}}}}n}}}}{{{f{{An{Ab}}}}{f{{An{d}}}}{f{{An{d}}}}}{{A`{ALnn}}}}{{{f{{An{Ab}}}}{f{{An{d}}}}{f{{An{d}}}}}{{A`{{Jf{Gh}}n}}}}{{{f{Bd}}{f{{An{Ab}}}}{f{{An{d}}}}{f{{An{d}}}}}{{A`{{l{F`}}n}}}}{{{f{Bd}}{f{{An{Ab}}}}}{{A`{{l{F`}}n}}}}{{{f{Ab}}}{{A`{{Cl{Cj}}n}}}}{{{f{{An{Ab}}}}}{{A`{ALnn}}}}{{{f{{An{Ab}}}}}{{A`{{l{F`}}n}}}}0```````````88`{AM`Gh}00{{{f{Bd}}}{{A`{Efn}}}}{{{f{Bd}}}{{A`{AMbn}}}}{{{f{AMd}}}Gh}{{{f{Bd}}}{{A`{bn}}}}444`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}00000000000000000000000000000000{{{f{AMf}}}d}{{{f{In}}}{{`{{Cn{}{{Ch{In}}}}}}}}{{{f{In}}{f{Db{Gb{In}}}}}b}{{AMfd}AMf}{{{f{{Kd{KnKl}}}}{f{{Kd{KnKl}}}}}}{{{f{In}}{f{In}}}In}{{{f{{l{C`}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{{f{{l{B`}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Aj}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Bb}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{DbAMh}}{Cf{{f{Bd}}}}}b}{{{f{DbAMf}}{f{AMf}}}{{A`{bn}}}}{{{f{DbAMh}}}b}{{{f{DbAMh}}{f{Bd}}}b}{{{f{AMf}}El}{{l{En}}}}{eAMj{}{{Hh{}{{Ch{c}}}}}}0{{AG`e}AMl{}{{Hh{}{{Ch{c}}}}}}0{{{f{In}}}In}{{{f{{Kd{KbK`}}}}}{{`{Il}}}}{{{f{{Kd{KjKf}}}}}{{`{Il}}}}{{{f{Eh}}}{{f{Eh}}}}{{{f{Od}}}{{f{Eh}}}}{{{f{AMn}}}{{f{Eh}}}}{{{f{{AL`{}{{AN`{c}}{ANb{e}}{ANd{g}}}}}}}{{Cf{{f{{An{c}}}}}}}ADb{ANf{ANh{c}}}{{Gf{}{{Ch{c}}}}IlIfIh}}{{{f{{Kd{LdKf}}}}}{{`{Il}}}}{{{f{c}}}{{f{e}}}{}{}}000000000000000000000000000000000000000000{{{f{Dbc}}}{{f{Dbe}}}{}{}}000000000000000000000000000000000000000000{Eh{{Cl{Eh}}}}{{{ANj{Bd}}}ANl}{{{f{AMf}}{f{AMf}}c}{{A`{AMfn}}}ANn}{{{f{AO`}}{f{Eh}}}{{A`{Abn}}}}{{{f{In}}{f{Eh}}}In}{{{f{Eh}}Eh}Eh}{{{f{{Kd{L`Kf}}}}Kh}{{Kd{L`Kf}}}}{{{f{{Kd{KjKf}}}}Kh}{{Kd{KjKf}}}}{{{f{AO`}}{f{Eh}}Ff}{{A`{Abn}}}}{{{f{{Kd{L`Kf}}}}{f{Eh}}Ff}{{A`{Abn}}}}{{{f{{Kd{KjKf}}}}{f{Eh}}Ff}{{A`{Abn}}}}{{{f{{Kd{KbK`}}}}{f{Eh}}Ff}{{A`{Abn}}}}{{{f{{Kd{KnKl}}}}{f{Eh}}Ff}{{A`{Abn}}}}{{{f{{Kd{LdKf}}}}{f{Eh}}Ff}{{A`{Abn}}}}{{{f{AMf}}{f{Eh}}Ff}{{A`{Abn}}}}`{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}00000000{{{f{{l{Eb}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Ed}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{Kd{ce}}}}}{{Kd{ce}}}DhDh}{{{f{AOb}}}AOb}{{{f{ANl}}}ANl}{{{f{AMf}}}AMf}{{{f{AOd}}}AOd}{{{f{In}}}In}{{{f{AOf}}}AOf}{{{f{Eh}}}Eh}{{{f{AOh}}}AOh}{{{f{Od}}}Od}{{{f{Kh}}}Kh}{{{f{Nf}}}Nf}{{{f{Nb}}}Nb}{{{f{En}}}En}{{{f{Ob}}}Ob}{{{f{Mn}}}Mn}{{{f{Nn}}}Nn}{{{f{K`}}}K`}{{{f{Kf}}}Kf}{{{f{Eb}}}Eb}{{{f{Ed}}}Ed}{{{f{Kb}}}Kb}{{{f{Ld}}}Ld}{{{f{B`}}}B`}{{{f{Aj}}}Aj}{{{f{F`}}}F`}{{{f{Bb}}}Bb}{{{f{Kn}}}Kn}{{{f{Kj}}}Kj}{{{f{L`}}}L`}{{{f{AOj}}}AOj}{{{f{AG`}}}AG`}{{{f{AOl}}}AOl}{{{f{c}}{f{Dbe}}}b{}{}}00000000000000000000000000000000{{{f{c}}}b{}}000000000000000000000000000000000000000000000000000000000{{{f{DbOd}}Eh}b}{AOne{}{{AMj{c}}AL`}}0{{AOnAG`}e{}{{AMl{c}}AL`}}0{{{f{Eh}}}d}00{{{ANj{Bd}}}Eh}{{{f{Od}}}{{f{Eh}}}}{{{f{{Kd{L`Kf}}}}}{{l{Kf}}}}{{}B@`}{{}AOb}{{}ANl}{{}In}{{}AOf}{{}Eh}{{}AG`}{Fl{{f{c}}}{}}00{{{f{{Kd{ce}}}}}fDhDh}1111111111111111111111111111111111111111{Fl{{f{Dbc}}}{}}0{{{f{Db{Kd{ce}}}}}{{f{Db}}}DhDh}11111111111111111111111111111111111111111{{{f{{Kd{KnKl}}}}{f{{Kd{KnKl}}}}}}{{{f{{l{C`}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{AMhc}AMf{{Hh{}{{Ch{{Cf{{f{Bd}}}}}}}}}}{Flb}000000000000000000000000000000000000000000{{{f{AO`}}}{{f{Eh}}}}{{{f{{Kd{L`Kf}}}}}{{f{Eh}}}}{{{f{{Kd{KbK`}}}}}{{f{Eh}}}}{{{f{{Kd{KnKl}}}}}{{f{Eh}}}}{{{f{{Kd{LdKf}}}}}{{f{Eh}}}}{{{f{{Kd{KjKf}}}}}{{f{Eh}}}}{{{f{AMf}}}{{f{Eh}}}}{{{f{In}}}Eh}`{{{f{AOb}}{f{AOb}}}d}{{{f{In}}{f{In}}}d}{{{f{AOf}}{f{AOf}}}d}{{{f{Eh}}{f{AG`}}}d}{{{f{Eh}}{f{Eh}}}d}{{{f{AOh}}{f{AOh}}}d}{{{f{Od}}{f{Od}}}d}{{{f{Kh}}{f{Kh}}}d}{{{f{AG`}}{f{AG`}}}d}{{{f{AOl}}{f{AOl}}}d}{{{f{In}}{f{In}}d}d}{{{f{AMf}}{f{{l{B`}}}}}}{{{f{AMf}}{f{AMf}}}}{{{f{AMf}}{f{Bd}}}}102{{{f{c}}{f{e}}}d{}{}}00000000000000000000000{{{f{{Kd{ce}}}}}OdDhDh}{{{f{ANl}}{f{Bd}}}{{Cf{J`}}}}{{ANn{f{{l{En}}}}{f{{l{En}}}}}{{A`{{l{En}}n}}}}{AMhAMf}{B@`{{Mh{ANl}}}}{{{f{AOb}}{f{DbHb}}}{{A`{bHd}}}}{{{f{ANl}}{f{DbHb}}}{{A`{bHd}}}}{{{f{AOd}}{f{DbHb}}}{{A`{bHd}}}}{{{f{In}}{f{DbHb}}}{{A`{bHd}}}}0{{{f{AOf}}{f{DbHb}}}{{A`{bHd}}}}{{{f{Eh}}{f{DbHb}}}{{A`{bHd}}}}0{{{f{AOh}}{f{DbHb}}}{{A`{bHd}}}}{{{f{Od}}{f{DbHb}}}{{A`{bHd}}}}{{{f{Kh}}{f{DbHb}}}{{A`{bHd}}}}0{{{f{AG`}}{f{DbHb}}}{{A`{bHd}}}}{{{f{AOl}}{f{DbHb}}}{{A`{bHd}}}}{cc{}}0{{{l{K`}}}{{Kd{KbK`}}}}{{{l{Kf}}}{{Kd{LdKf}}}}22222222222222{cInB@b}{{{Cf{c}}}In{{B@d{In}}}}{dIn}{{{f{Bd}}}In}{{{f{{An{Al}}}}}In}7{{{f{In}}}Eh}{InEh}{{{f{AG`}}}Eh}::{{{f{B@f}}}Od};{{{f{In}}}Od}<{{{f{AOl}}}Kh}===================={B@hAG`}{B@jAG`}??{{{f{AG`}}d}Eh}{{{l{En}}{Mh{ANl}}dAOb}AMf}{{{f{Bd}}cKh}{{Kd{L`Kf}}}{{Hh{}{{Ch{B@l}}}}}}{{{f{Bd}}cKh}{{Kd{L`Kf}}}{{Hh{}{{Ch{{Cf{B@l}}}}}}}}{{{l{En}}AOb}AMf}{{{f{Bd}}c}{{Kd{KbK`}}}{{Hh{}{{Ch{B@n}}}}}}{{{f{Bd}}c}{{Kd{KbK`}}}{{Hh{}{{Ch{{Cf{B@n}}}}}}}}{{{f{Bd}}cKh}{{Kd{KjKf}}}{{Hh{}{{Ch{AM`}}}}}}{{{f{Bd}}cKh}{{Kd{KjKf}}}{{Hh{}{{Ch{{Cf{AM`}}}}}}}}{{{f{Bd}}c}{{Kd{LdKf}}}{{Hh{}{{Ch{AMd}}}}}}{{{f{Bd}}c}{{Kd{LdKf}}}{{Hh{}{{Ch{{Cf{AMd}}}}}}}}{{{BAb{BA`}}Eh}Od}{{{f{{l{B`}}}}{f{{ANj{Bd}}}}AOb}{{A`{AMfn}}}}{{{Gb{c}}AG`}{{AL`{}{{AN`{c}}{ANb{e}}{ANd{g}}}}}ADb{ANf{ANh{c}}}{{Gf{}{{Ch{c}}}}IlIfIh}}{{{Gb{c}}AG`}{{AL`{}{{AN`{e}}{ANb{c}}{ANd{g}}}}}{ANf{ANh{e}}}ADb{{Gf{}{{Ch{e}}}}IlIfIh}}{{FlcAG`}{{AL`{}{{AN`{c}}{ANb{e}}{ANd{g}}}}}ADb{ANf{ANh{c}}}{{Gf{}{{Ch{c}}}}IlIfIh}}{{FlAG`}{{AL`{}{{AN`{c}}{ANb{e}}{ANd{g}}}}}ADb{ANf{ANh{c}}}{{Gf{}{{Ch{c}}}}IlIfIh}}{{{f{Bd}}dFlAOb}AMf}{{{f{{AL`{}{{AN`{c}}{ANb{e}}{ANd{g}}}}}}Fl}{{Cf{c}}}ADb{ANf{ANh{c}}}{{Gf{}{{Ch{c}}}}IlIfIh}}{{{f{ANl}}J`}{{f{Bd}}}}{{{f{{Kd{LdKf}}}}Fl}{{A`{Inn}}}}{{{f{{Kd{L`Kf}}}}Fl}{{A`{Inn}}}}{{{f{{Kd{KbK`}}}}Fl}{{A`{Inn}}}}{{{f{{Kd{KjKf}}}}Fl}{{A`{Inn}}}}{{{f{{Kd{KnKl}}}}Fl}{{A`{Inn}}}}{{{f{AO`}}Fl}{{A`{Inn}}}}{{{f{AMf}}Fl}{{A`{Inn}}}}{{{f{{Kd{LdKf}}}}Fl}In}{{{f{{Kd{KnKl}}}}Fl}In}{{{f{{Kd{L`Kf}}}}Fl}In}{{{f{{Kd{KbK`}}}}Fl}In}{{{f{{Kd{KjKf}}}}Fl}In}{{{f{AO`}}Fl}In}{{{f{AMf}}Fl}In}{{{f{ANl}}}{{f{{ANj{Bd}}}}}}{{}Eh}0000000000000000000000000{{{f{ANl}}J`}{{Cf{{f{Bd}}}}}}{{{f{AMf}}}{{f{{Mh{ANl}}}}}}{{{f{Eh}}}{{Cf{{Gb{Fl}}}}}}{{{f{In}}}{{Cf{{f{Bd}}}}}}{{{f{BAd}}Fl}In}{{{f{{AL`{}{{AN`{c}}{ANb{e}}{ANd{g}}}}}}Fl}{{Cf{c}}}ADb{ANf{ANh{c}}}{{Gf{}{{Ch{c}}}}IlIfIh}}{{{f{AMf}}{f{AMf}}}}{{{f{AMf}}{f{Bd}}}}{{{f{AMf}}{f{{l{B`}}}}}}210{{{f{In}}{f{Dbc}}}bADh}{{{f{AOf}}{f{Dbc}}}bADh}{{{f{Eh}}{f{Dbc}}}bADh}{{{f{Od}}{f{Dbc}}}bADh}{{{f{Kh}}{f{Dbc}}}bADh}{{{f{AG`}}{f{Dbc}}}bADh}{{{f{AOl}}{f{Dbc}}}bADh}{{{f{In}}{f{Dbc}}d}bADh}{{{f{{Kd{LdKf}}}}}{{l{Mn}}}}{{{f{{Kd{L`Kf}}}}}{{l{Kf}}}}{EhEh}{{}Fl}000000000000000000000000000000000000000000{{{f{Eh}}}{{Cf{{f{Eh}}}}}}{{{f{AG`}}}{{Cf{{f{AG`}}}}}}{ce{}{}}0000000000000000000000000000000000000000000{{BAfEh}{{A`{M`n}}}}{{{Kd{L`Kf}}}Ab}{{{Kd{LdKf}}}Ab}{{{Kd{KnKl}}}Ab}{{{Kd{KbK`}}}Ab}{{{Kd{KjKf}}}Ab}{AMfAb}{In{{A`{Inn}}}}{{{f{Eh}}}d}00{{{f{In}}}d}11{{{f{AMf}}}d}0212{{{f{ANl}}}d}23330332323233332333323{{{f{AG`}}}d}{{{f{{AL`{}{{AN`{c}}{ANb{e}}{ANd{g}}}}}}}{{AGh{cgAGf}}}ADb{ANf{ANh{c}}}{{Gf{}{{Ch{c}}}}IlIfIh}}{{{f{AMf}}}BAh}{{{f{{AL`{}{{AN`{c}}{ANb{e}}{ANd{g}}}}}}}{{Cf{c}}}ADb{ANf{ANh{c}}}{{Gf{}{{Ch{c}}}}IlIfIh}}{{{f{Eh}}}{{f{Eh}}}}{{{f{ANl}}}Fl}{{{f{AMf}}}Fl}{{{f{AMf}}{f{AMf}}}}{{{f{AMf}}{f{Bd}}}}{{{f{AMf}}{f{{l{B`}}}}}}120{{{f{AMf}}{f{AMf}}}{{A`{{Gl{AMfAMf}}n}}}}{{{l{Ah}}{l{Ah}}}{{A`{{Gl{{l{Ah}}{l{Ah}}}}n}}}}{{{f{Eh}}{f{Eh}}}{{A`{dn}}}}{{{f{AOf}}}{{Cf{Eh}}}}{{{f{AMf}}}M`}{{{f{Eh}}{f{Eh}}}{{A`{Ehn}}}}{{{f{DbB@`}}{f{{Mh{ANl}}}}}{{A`{bn}}}}{{{f{{Kd{L`Kf}}}}}{{l{Kf}}}}03{{{f{{Kd{LdKf}}}}}{{l{Mn}}}}1{{{f{{Kd{KnKl}}}}{f{{Kd{KnKl}}}}}}{{{f{{l{C`}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{{f{AMf}}}{{A`{Fln}}}}{{{f{AMf}}}{{f{Bd}}}}{{{f{Od}}}{{f{{BAb{BA`}}}}}}`{{{f{{Kd{LdKf}}}}}{{l{K`}}}}8{{}c{}}0{{{f{Bd}}FlAOb}AMh}{{{f{Bd}}c}{{Kd{LdKf}}}{{Hl{{An{{Cf{AMd}}}}}}}}{{{f{Bd}}c}{{Kd{KjKf}}}{{Hl{{An{AM`}}}}}}{{{f{Bd}}c}{{Kd{KbK`}}}{{Hl{{An{B@n}}}}}}{{{f{Bd}}c}{{Kd{LdKf}}}{{Hl{{An{AMd}}}}}}{{{f{Bd}}c}{{Kd{L`Kf}}}{{Hl{{An{{Cf{B@l}}}}}}}}{{{f{Bd}}c}{{Kd{L`Kf}}}{{Hl{{An{B@l}}}}}}{{{f{Bd}}c}{{Kd{KbK`}}}{{Hl{{An{{Cf{B@n}}}}}}}}{{{f{Bd}}c}{{Kd{KjKf}}}{{Hl{{An{{Cf{AM`}}}}}}}}{{{Mh{ANl}}}B@`}{{{f{Bd}}Eh}Od}{{{l{c}}}{{Kd{ec}}}DhDh}{{}AOh}{{{f{DbBAh}}}Cf}{{{f{AMf}}{f{AMf}}}}{{{f{AMf}}{f{{l{B`}}}}}}{{{f{AMf}}{f{Bd}}}}012{{{f{AMf}}}Fl}5{{{f{Bd}}{f{{An{{f{Bd}}}}}}{f{Bd}}}{{Kd{LdKf}}}}{{{f{Bd}}{f{{An{{f{Bd}}}}}}{f{Bd}}}{{Kd{KbK`}}}}{{{f{In}}{f{In}}}{{Cf{BAj}}}}{{{f{Kh}}{f{Kh}}}{{Cf{BAj}}}}{{{f{{Kd{ce}}}}}{{f{{l{e}}}}}DhDh}{{{f{AMf}}}{{f{{l{En}}}}}}{{{f{{Kd{KnKl}}}}}{{Cf{Fl}}}}{{{f{DbAMh}}{f{Bd}}}{{Gl{J`d}}}}{{{f{{l{C`}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{{f{{Kd{KjKf}}}}{f{{l{B`}}}}{Cf{{f{AMb}}}}}{{A`{{Kd{KjKf}}n}}}}{{{f{{Kd{KbK`}}}}{f{{l{B`}}}}{Cf{{f{AMb}}}}}{{A`{{Kd{KbK`}}n}}}}{{{f{ANl}}{f{ANl}}}d}{{{f{{Kd{KnKl}}}}}Fl}{{{f{{Kd{LdKf}}}}}{{l{Mn}}}}{{{f{{Kd{L`Kf}}}}}{{l{Kf}}}}{{{f{DbOd}}{BAb{BA`}}}b}{{{f{Db{Kd{KjKf}}}}Kh}b}{{{f{Db{Kd{L`Kf}}}}Kh}b}{{{f{Db{Kd{KjKf}}}}KhEf}{{A`{bn}}}}{{{f{Db{Kd{KjKf}}}}Ef}{{A`{bn}}}}{{{f{BAh}}}{{Gl{Fl{Cf{Fl}}}}}}{{{f{AMf}}d}AMf}{{{f{AMf}}El}AMf}{{{f{{Kd{LdKf}}}}{f{Bd}}}{{l{B`}}}}{{{f{{Kd{KjKf}}}}{f{Bd}}}{{A`{{l{B`}}n}}}}{{{f{{Kd{KbK`}}}}{f{Bd}}}{{A`{{l{B`}}n}}}}{{{f{In}}{f{Eh}}}{{Cf{In}}}}{{{f{{Kd{KnKl}}}}{f{{Kd{KnKl}}}}}}{{{f{{l{C`}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{{f{{Kd{L`Kf}}}}}Kh}{{{f{{Kd{KjKf}}}}}Kh}{{{f{{Kd{KjKf}}}}}{{f{{Cf{Ef}}}}}}{{{f{AMf}}AOhd}{{Cl{Cj}}}}{{{f{Eh}}AOh}AG`}{{{f{Od}}AOh}B@f}{KhAOl}{{{f{Eh}}{f{Bd}}AOh}B@f}{Kh{{f{Bd}}}}{{{f{AMf}}{f{{ANj{Bd}}}}BAl}AMf}{{{f{AMf}}}{{A`{AMfn}}}}{{{f{AMf}}}AMf}{{{f{AG`}}}{{f{AG`}}}}{{{f{c}}}e{}{}}00000000000000000000000000000000{{{f{Eh}}}Eh}{{{f{AG`}}}BAn}{{{f{{Kd{KnKl}}}}Fl}{{A`{{Dn{{Kd{KnKl}}}}n}}}}{{{f{{Kd{LdKf}}}}{f{Bd}}}{{l{B`}}}}{{{f{{Kd{KjKf}}}}{f{Bd}}}{{A`{{l{B`}}n}}}}{{{f{{Kd{KbK`}}}}{f{Bd}}}{{A`{{l{B`}}n}}}}{{{f{c}}}Ef{}}00{{{f{In}}{f{In}}}d}{{{f{{Kd{KbK`}}}}{Cf{{f{AMb}}}}{f{{l{B`}}}}}{{A`{{Kd{KbK`}}n}}}}{{{f{{Kd{KjKf}}}}{Cf{{f{AMb}}}}{f{{l{B`}}}}}{{A`{{Kd{KjKf}}n}}}}{g{{A`{AMje}}}{}{}{{Hh{}{{Ch{{A`{ce}}}}}}}}0{{AG`g}{{A`{AMle}}}{}{}{{Hh{}{{Ch{{A`{ce}}}}}}}}0{AOn{{A`{eg}}}{}{{AMj{c}}AL`}{}}0{{AOnAG`}{{A`{eg}}}{}{{AMl{c}}AL`}{}}0{{{f{In}}}{{A`{cn}}}Ln}{c{{A`{e}}}{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{In}}{f{Eh}}}{{A`{Inn}}}}{{{f{Eh}}AOh}{{A`{AG`n}}}}{{{f{c}}}AAf{}}000000000000000000000000000000000000000000{{{f{AG`}}}AG`}{{{f{AMf}}}{{A`{AMfn}}}}{{{f{AMf}}}d}{{{f{{AL`{}{{AN`{c}}{ANb{e}}{ANd{g}}}}}}Fl}cADb{ANf{ANh{c}}}{{Gf{}{{Ch{c}}}}IlIfIh}}{{{f{AMf}}}{{A`{AAhn}}}}1{{{f{Eh}}In}d}{{{f{{AL`{}{{AN`{c}}{ANb{e}}{ANd{g}}}}}}}gADb{ANf{ANh{c}}}{{Gf{}{{Ch{c}}}}IlIfIh}}{ce{}{}}000000000000000000000000000000000000000000{Flc{}}0{{{AL`{}{{AN`{c}}{ANb{e}}{ANd{g}}}}{Cf{Ib}}}{{AL`{}{{AN`{c}}{ANb{e}}{ANd{g}}}}}ADb{ANf{ANh{c}}}{{Gf{}{{Ch{c}}}}IlIfIh}}{{{f{Eh}}}In}```````````{{{f{AMf}}{f{AMf}}c}{{A`{AMfn}}}ANn}{{ANn{f{{l{En}}}}{f{{l{En}}}}}{{A`{{l{En}}n}}}}{{{f{AMf}}{f{AMf}}}{{A`{{Gl{AMfAMf}}n}}}}{{{l{Ah}}{l{Ah}}}{{A`{{Gl{{l{Ah}}{l{Ah}}}}n}}}}`````````{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{}BB`}{Fl{{f{c}}}{}}{Fl{{f{Dbc}}}{}}{{}b}{{{f{DbBB`}}}b}{Flb}2{cc{}}6{{}Fl}{ce{}{}}{c{{A`{e}}}{}{}}0{{{f{c}}}AAf{}}{{}d}3``````````````````````````{{{f{BBb}}}{{f{Bd}}}}>>>===`{{nBBb}n}{nn}={{{f{BBb}}}f}>>===:::`{{{f{BBd}}{f{DbHb}}}{{A`{bHd}}}}{{{f{BBb}}{f{DbHb}}}{{A`{bHd}}}}0{{{f{n}}{f{DbHb}}}{{A`{bHd}}}}0<<{cBBb{{B@d{{Dn{Bd}}}}}}{BBfn}{BBhn}{BBjn}{cc{}}{BBln}{BBnn}{BC`n}{{}{{Fn{{f{Bd}}BBd}{{Ad{b}}}}}}{{}Fl}00{ce{}{}}00{cnALd}````{{{Fn{{f{Bd}}BBd}{{Ad{b}}}}}b}{cnBCb}{{{f{c}}}Ef{}}0{c{{A`{e}}}{}{}}00000{{{f{c}}}AAf{}}00666``````````````````{{{f{c}}h}b{}}00{{{f{DbAAh}}{Gb{Ab}}{f{BCd}}}{{A`{bn}}}}{{{f{AAh}}{f{Dj}}}{{Gb{Ab}}}}0{{{f{AAh}}{f{{l{Bb}}}}}{{A`{AAhn}}}}{{{f{AAh}}{f{{An{{BAb{BA`}}}}}}}{{A`{AAhn}}}}0{{{f{AAh}}GhFl}AAh}{{{f{DbAAh}}}{{f{DbAAh}}}}{{{f{DbAAh}}{f{Bd}}e}{{A`{{f{DbAAh}}n}}}BCf{{AAl{{f{Ab}}}{{Ad{c}}}}}}{{{f{DbAAh}}Fle}{{A`{{f{DbAAh}}n}}}BCf{{AAl{{f{Ab}}}{{Ad{c}}}}}}22{{{f{c}}}{{f{e}}}{}{}}0000{{{f{Dbc}}}{{f{Dbe}}}{}{}}0000{{{f{AAh}}}{{`{{Cn{}{{Ch{Fl}}}}}}}}{{{f{AAh}}}AAh}{{{f{BCh}}}BCh}{{{f{BCj}}}BCj}2{{{f{c}}{f{Dbe}}}b{}{}}00{{{f{c}}}b{}}0000{{{f{AAh}}{f{Bd}}}{{A`{{f{Ab}}n}}}}{{{f{AAh}}e}{{A`{{Gb{{f{Ab}}}}n}}}{{Hl{Bd}}}{{Hh{}{{Ch{c}}}}}}{{}BCj}{{}AAh}{Fl{{f{c}}}{}}0000{Fl{{f{Dbc}}}{}}0000{Flb}0000{{{f{AAh}}{f{Bd}}}{{A`{AAhn}}}}{{{f{DbAAh}}{f{Bd}}}{{A`{Abn}}}}{{{f{AAh}}{f{{An{c}}}}}AAh{{Hl{Bd}}}}{{{f{AAh}}{f{{BCl{{f{Bd}}A@f}}}}}AAh}{{{f{AAh}}{Cf{{f{{An{c}}}}}}}{{A`{AAhn}}}{{Hl{Bd}}}}{{{f{AAh}}}{{Gb{Eh}}}}9{{{f{BCn}}}AAh}{{{f{BCd}}}AAh}{{{f{BCj}}{f{BCj}}}d}{{{f{AAh}}{f{AAh}}}d}00{{{f{c}}{f{e}}}d{}{}}00{{{f{AAh}}}Fl}`{{{f{AAh}}e}{{A`{AAhn}}}{{Hl{Bd}}}{{Hh{}{{Ch{c}}}}}}{{{f{AAh}}{Gb{Ab}}}{{A`{AAhn}}}}{{{f{DbAAh}}{f{AAh}}}{{A`{bn}}}}{{{f{AAh}}}{{Gb{Od}}}}{{{f{AAh}}AHl}{{A`{AAhn}}}}{{{f{AAh}}{f{{l{Bb}}}}}{{A`{AAhn}}}}{{{f{BCh}}{f{DbHb}}}{{A`{bHd}}}}{{{f{BCj}}{f{DbHb}}}{{A`{bHd}}}}{{{f{AAh}}{f{DbHb}}}{{A`{bHd}}}}0{cc{}}0000{g{{A`{ic}}}{}{}{{Hj{c}{{Ch{e}}}}}{}}{cAAh{{Hh{}{{Ch{Ab}}}}}}{{{f{{An{BD`}}}}}{{A`{AAhn}}}}{{{f{{An{BD`}}}}{f{BCd}}}{{A`{AAhn}}}}{{c{f{BCd}}}{{A`{AAhn}}}{{Cn{}{{Ch{{f{BD`}}}}}}}}{{{f{AAh}}Fl}{{Cf{{Gb{In}}}}}}{{{f{AAh}}{f{Bd}}}{{Cf{Fl}}}}{{{f{AAh}}}{{Gb{{f{Bd}}}}}}{{{f{AAh}}}{{Gb{{BAb{BA`}}}}}}{{{f{AAh}}}{{f{{An{Ab}}}}}}{{{f{DbAAh}}}{{f{Db{Gb{Ab}}}}}}{{{f{AAh}}Fl}{{A`{BD`n}}}}{{{f{AAh}}Fl{f{DbBD`}}}{{A`{bn}}}}{{{f{AAh}}Fl{f{DbBD`}}}b}{{{f{AAh}}}{{Cf{{A`{Ehn}}}}}}`{{{f{AAh}}e}{{A`{BDbn}}}{{Hl{Bd}}}{{Hh{}{{Ch{c}}}}}}{{{f{AAh}}{Gb{Ab}}{f{BDd}}}{{A`{{Gl{Ab{Gb{Ab}}Bn}}n}}}}1{{{f{AAh}}{Gb{Ab}}dd}{{A`{BDbn}}}}{{{f{BCj}}{f{Dbc}}}bADh}{{{f{AAh}}{Cf{Fl}}}AAh}{{{f{AAh}}}Fl}{{{f{AAh}}{f{{An{Ab}}}}}{{A`{AAhn}}}}{{{f{DbAAh}}{f{{An{Ab}}}}}{{A`{{f{DbAAh}}n}}}}{{{f{DbAAh}}{f{{An{Ab}}}}}{{f{DbAAh}}}}{{{f{AAh}}{BDf{Fl}}}f}{{{f{AAh}}{BDh{Fl}}}f}{{{f{AAh}}{BDj{Fl}}}f}{{{f{AAh}}{BDl{Fl}}}f}{{{f{AAh}}BDn}f}{{{f{AAh}}{f{Bd}}}f}{{{f{AAh}}{Nh{Fl}}}f}{{{f{AAh}}Fl}f}{{}Fl}0000{{{f{DbAAh}}Flc}{{A`{{f{DbAAh}}n}}}BCf}{ce{}{}}000000{{AAh{f{Bd}}}{{l{j}}}}{{{f{AAh}}}{{A`{{l{Bb}}n}}}}{{{f{AAh}}}d}1{{{f{AAh}}}{{Fj{Ab}}}}{{{f{AAh}}}{{`{{Cn{}{{Ch{AAh}}}}}}}}{{{f{AAh}}AOhd}BE`}{{{f{AAh}}}BEb}{AAhBEd}{{{f{AAh}}}Fl}{{{f{AAh}}}{{A`{{Cf{Ab}}n}}}}{{{f{AAh}}BCh}{{A`{{Cf{Ab}}n}}}}122{{{Gb{c}}}{{A`{AAhn}}}BCf}{{{Gb{Ab}}}AAh}{{{Gb{Ab}}}{{A`{AAhn}}}}{{{f{DbBE`}}}Cf}{{{f{DbBEb}}}Cf}{{{f{AAh}}}AAh}{{AAhe}{{A`{cn}}}{}{{Dj{AAh}{{Ad{{A`{cn}}}}}}}}{{{f{DbAAh}}e}{{A`{cn}}}{}{{Dj{{f{DbAAh}}}{{Ad{{A`{cn}}}}}}}}{{AAhgc}{{A`{en}}}{}{}{{Dj{AAhc}{{Ad{{A`{en}}}}}}}}{{{f{DbAAh}}}{{Cf{Ab}}}}{{{f{AAh}}{f{AAh}}}d}{{{f{DbAAh}}{f{Bd}}{f{Bd}}}{{A`{{f{DbAAh}}n}}}}{{{f{DbAAh}}{f{Bd}}c}{{A`{{f{DbAAh}}n}}}BCf}{{{f{DbAAh}}Flc}{{A`{{f{DbAAh}}n}}}BCf}18{{{f{AAh}}{Gb{Ab}}{f{BEf}}}{{A`{{Gl{Ab{Gb{Ab}}Bn}}n}}}}`{{{f{AAh}}{f{Ab}}dd{Cf{Jj}}}{{A`{AAhn}}}}0{{{f{AAh}}Fldd{Cf{Jj}}}{{A`{AAhn}}}}{{{f{AAh}}}BCd}{{{f{AAh}}{f{AAh}}}{{A`{bn}}}}{{{f{AAh}}e}{{A`{AAhn}}}{{Hl{Bd}}}{{Hh{}{{Ch{c}}}}}}{{{f{AAh}}Fl}{{Cf{{f{Ab}}}}}}{{{f{AAh}}c}{{A`{AAhn}}}{{BEh{Fl}}}}2{{{f{AAh}}c}{{A`{{Gb{Ab}}n}}}{{BEj{{BAb{BA`}}}}}}{{{f{AAh}}e{f{{Mh{BCd}}}}}{{A`{AAhn}}}{{Hl{Bd}}}{{Hh{}{{Ch{c}}}}}}{{{f{AAh}}e{f{BCd}}}{{A`{AAhn}}}{{Hl{Bd}}}{{Hh{}{{Ch{c}}}}}}{{{f{DbAAh}}{f{{An{c}}}}}{{A`{bn}}}{{Hl{Bd}}}}{{{f{AAh}}}{{Gl{FlFl}}}}{{{f{AAh}}Gh}AAh}{{{f{AAh}}}d}{{{f{DbAAh}}}b}{{{f{BE`}}}{{Gl{Fl{Cf{Fl}}}}}}{{{f{BEb}}}{{Gl{Fl{Cf{Fl}}}}}}{{{f{AAh}}GhFl}AAh}00{{{f{AAh}}cFb}{{A`{AAhn}}}{{BEj{{BAb{BA`}}}}}}{{{f{DbAAh}}cFb}{{A`{{f{DbAAh}}n}}}{{BEj{{BAb{BA`}}}}}}{{{f{AAh}}Gh}{{Gl{AAhAAh}}}}0{{{f{DbAAh}}}{{`{{Cn{}{{Ch{AAh}}}}}}}}{{AAhFld}{{Gb{AAh}}}}{{{f{AAh}}BCh}{{A`{{Cf{Ab}}n}}}}{{{f{AAh}}{Cf{Fl}}}AAh}{{{f{AAh}}{f{{l{En}}}}}{{A`{AAhn}}}}{{{f{AAh}}{f{{l{En}}}}}AAh}{{{f{AAh}}{f{{l{En}}}}d}AAh}{{{f{AAh}}}{{f{AAh}}}}{{{f{AAh}}BEl}{{A`{{AA`{AAb{A@n{{A@l{Fl}}}}}}n}}}}{{{f{c}}}e{}{}}00{{{f{c}}}Ef{}}{{{f{DbAAh}}{Cf{{f{Bd}}}}{Cf{{AAd{Ef{Gb{Ef}}}}}}}{{A`{AAhn}}}}{{{f{DbAAh}}{f{Bd}}e}{{A`{{f{DbAAh}}n}}}BCf{{AAl{{f{Ab}}}{{Ad{{A`{cn}}}}}}}}{{{f{DbAAh}}Fle}{{A`{{f{DbAAh}}n}}}BCf{{AAl{{f{Ab}}}{{Ad{{A`{cn}}}}}}}}{c{{A`{e}}}{}{}}0000{{{Gl{{BEn{{Cl{Cj}}}}{f{{An{B@f}}}}}}}{{A`{AAhn}}}}{BF`{{A`{AAhn}}}}{{c{f{BCd}}}{{A`{AAhn}}}{{Cn{}{{Ch{{A`{{f{BD`}}n}}}}}}}}{{{f{AAh}}{f{Bd}}}{{A`{Fln}}}}44444{{{f{c}}}AAf{}}0000{{{f{AAh}}{Cf{{f{{An{Ef}}}}}}BCj{Cf{{Gl{GhFl}}}}}{{A`{AAhn}}}}{{{f{AAh}}d{Cf{{f{{An{Ef}}}}}}BCj{Cf{{Gl{GhFl}}}}}{{A`{AAhn}}}}1{{{f{AAh}}c}{{A`{AAhn}}}{{BEj{Ef}}}}{{{f{AAh}}ce}{{A`{AAhn}}}{{BEj{{BAb{BA`}}}}}{{BEj{{BAb{BA`}}}}}}{{{f{AAh}}BFb}{{A`{AAhn}}}}{{{f{AAh}}c{f{Bd}}BFd}{{A`{AAhn}}}{{BEj{Ef}}}}0{{{f{AAh}}{f{AAh}}}{{A`{AAhn}}}}{{{f{DbAAh}}{f{AAh}}}{{A`{{f{DbAAh}}n}}}}{ce{}{}}0000{{{f{AAh}}}Fl}{{{f{DbAAh}}c}{{A`{{f{DbAAh}}n}}}BCf}{{{f{DbAAh}}c{f{BCd}}}{{A`{{f{DbAAh}}n}}}BCf}{{{f{DbAAh}}Ab}{{f{DbAAh}}}}{{{f{AAh}}{f{Bd}}{Cf{J`}}}{{A`{AAhn}}}}{{{f{DbAAh}}{f{Bd}}{Cf{J`}}}{{f{DbAAh}}}}`{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{{f{BFb}}}BFb}{{{f{c}}{f{Dbe}}}b{}{}}{{{f{c}}}b{}}{{}BFb}{Fl{{f{c}}}{}}{Fl{{f{Dbc}}}{}}{Flb}{{{f{BFb}}{f{BFb}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BFb}}{f{DbHb}}}{{A`{bHd}}}}{cc{}}{{{f{BFb}}{f{Dbc}}}bADh}`{{}Fl}{ce{}{}}``{{{f{c}}}e{}{}}{c{{A`{e}}}{}{}}0{{{f{c}}}AAf{}}``3````````````````````````````````{{{f{c}}h}b{}}000{{{f{BDb}}}{{A`{AAhn}}}}`{{{f{BFf}}}{{f{{An{{BFh{J`}}}}}}}}{{{f{BDb}}c}{{A`{AAhn}}}{{Af{AAh}{{Ad{{A`{AAhn}}}}}}IfIh}}{{{f{Bn}}}{{l{Ah}}}}{{{f{c}}}{{f{e}}}{}{}}0000000{{{f{Dbc}}}{{f{Dbe}}}{}{}}0000000{{{f{BFf}}}BFf}{{{f{Bn}}}Bn}{{{f{BDb}}}BDb}{{{f{BFj}}}BFj}{{{f{c}}{f{Dbe}}}b{}{}}000{{{f{c}}}b{}}0000;{{}BFf}{{}Bn}{Fl{{f{c}}}{}}00{{{f{BFl}}}f}11111{Fl{{f{Dbc}}}{}}0000000`{{BFnc}{}BG`}{Flb}000{{{f{DbBFf}}}b}1111{{{f{BFf}}{f{BFf}}}d}{{{f{Bn}}{f{Bn}}}d}{{{f{c}}{f{e}}}d{}{}}00000`{{{f{BGb}}}J`}{{{f{BFf}}}{{f{{An{J`}}}}}}{{{f{BDb}}}{{A`{AAhn}}}}{{{f{DbBFf}}}{{f{Db{Gb{J`}}}}}}{{{f{BFf}}{f{DbHb}}}{{A`{bHd}}}}{{{f{Bn}}{f{DbHb}}}{{A`{bHd}}}}{{{f{BDb}}{f{DbHb}}}{{A`{bHd}}}}{{{f{BFj}}{f{DbHb}}}{{A`{bHd}}}}0{{{f{Bd}}BFj}Ef}{cc{}}000{{{Gb{{Gl{{Gb{J`}}{Gb{{BFh{J`}}}}}}}}}BFf}{{{Gb{{Gb{{Gl{J`{BFh{J`}}}}}}}}}BFf}2{{{Gb{{Gl{J`{BFh{J`}}}}}}}BFf}{BFfBn}444{BGdBFj}{g{{A`{ic}}}{}{}{{Hj{c}{{Ch{e}}}}}{}}{cBFf{{Hh{}{{Ch{{Gl{J`{BFh{J`}}}}}}}}}}{cBFf{{Id{}{{Ch{{Gl{J`{BFh{J`}}}}}}}}}}{{{f{Bn}}Fl}BGb}{{{f{BDb}}}{{f{Bn}}}}{{{f{DbBDb}}}{{f{DbBn}}}}{{{f{Bn}}}{{l{En}}}}{{{f{BGf}}dd}{{A`{Bnn}}}}{{{f{BDb}}}{{A`{AAhn}}}}{{{f{DbBn}}}{{f{DbBFf}}}}{{}Fl}0000000{ce{}{}}0000000{BnBFf}1{{{f{BFf}}}}{BFf}301{{{f{BGb}}}d}{{{f{Bn}}}d}{{{f{BFf}}}d}{{{f{BFf}}}{{BGj{{BGh{{Fj{J`}}}}{Fj{{BFh{J`}}}}}}}}{{{f{Bn}}}BGl}{{{f{BDb}}}{{Gb{Ab}}}}{{{f{BDb}}{Cf{{Gl{GhFl}}}}}{{Gb{Ab}}}}={{{f{BGb}}}Fl}{{{f{Bn}}}Fl}?????{{{Gb{J`}}{Gb{{BFh{J`}}}}d}BFf}{{{f{AAh}}{Gb{Ab}}Bn{Cf{{Gb{Ef}}}}}BDb}{{{f{DbBGl}}}Cf}{{{f{DbBGl}}Fl}Cf}{{{f{BDb}}c}{{A`{AAhn}}}{{Dj{AAh}{{Ad{{A`{AAhn}}}}}}IfIh}}{{{f{c}}}{}{}}{{{f{Bn}}}BFn}{{{f{BDb}}MbOj}{{A`{AAhn}}}}{{BDbe}BDb{{Hl{Bd}}}{{Hh{}{{Ch{c}}}}}}{{{f{Bn}}GhFl}BFl}{{{f{DbBFf}}}b}{{{f{DbBn}}}b}{{{f{BDb}}Al}{{A`{AAhn}}}}{{{f{BDb}}}{{A`{AAhn}}}}{Bn{{Gb{J`}}}}0{BDbBn}{{{f{DbBDb}}}Bn}{{{f{c}}}e{}{}}000{{{f{c}}}Ef{}}{c{{A`{e}}}{}{}}000000000000000{{{f{c}}}AAf{}}0000000{BnBn}{{{f{Bn}}}{{f{BFf}}}}{{{f{Bn}}}{{f{{Gb{{A@l{J`}}}}}}}};{ce{}{}}0000000`````{{{f{BFf}}c}Ab{{Dj{{Gl{J`{f{{BFh{J`}}}}}}}{{Ad{Cf}}}}IfIh}}{{{f{BFf}}c}Ab{{Dj{{Gl{J`{f{{BFh{J`}}}}}}}{{Ad{}}}}IfIh}}{{{f{{An{{A@l{J`}}}}}}c}Ab{{Dj{{A@l{J`}}}{{Ad{Cf}}}}IfIh}}{{{f{{An{{A@l{J`}}}}}}c}Ab{{Dj{{A@l{J`}}}{{Ad{}}}}IfIh}}{{{f{{An{c}}}}e{Cf{{Mh{AGb}}}}}{{ALh{c}}}{BGnBH`}{{Cn{}{{Ch{{Gl{J`J`}}}}}}Il}}{{{f{{An{c}}}}{f{Ib}}e{Cf{{Mh{AGb}}}}}{{ALh{c}}}{BGnBH`}{{Cn{}{{Ch{{Gl{J`J`}}}}}}Il}}{{{f{{l{c}}}}J`J`}{{l{c}}}Dh}{{{f{{Gb{{A@l{J`}}}}}}{f{{An{{Cl{Cj}}}}}}}d}{{{f{BHb}}{f{Bn}}}Ab}{{BHdBHd}BHd}0`{{{f{BHf}}{f{AAh}}{f{Bn}}}{{A`{Abn}}}}{{{f{BHf}}}{{A`{{f{Bd}}n}}}}````````````````````````````````````{{{f{c}}h}b{}}00{{{f{DbBHh}}In}{{Cf{b}}}}{{{f{DbBHj}}{f{In}}}b}0{{{f{c}}}{{f{e}}}{}{}}00{{{f{Dbc}}}{{f{Dbe}}}{}{}}00{{{f{BHh}}}BHh}{{{f{BHj}}}BHj}{{{f{BD`}}}BD`}{{{f{c}}{f{Dbe}}}b{}{}}00{{{f{c}}}b{}}00{{{f{{An{c}}}}}Eh{{Hn{Eh}}}}{{}BD`}{Fl{{f{c}}}{}}00{Fl{{f{Dbc}}}{}}00{Flb}00{{{f{BD`}}{f{BD`}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BD`}}{f{DbHb}}}{{A`{bHd}}}}{{{Gl{{f{Eh}}Fl}}}BHh}{cc{}}0{{{Gl{{f{Eh}}Fl}}}BHj}1{{eFl}BCd{{B@d{Eh}}}{{Cn{}{{Ch{{Gb{{Gl{Efc}}}}}}}}}}{{}Fl}00{ce{}{}}00{BHhAb}{BHjAb}{{{f{Eh}}Fl}BHh}{{{f{Eh}}Fl}BHj}{{{Gb{In}}}BD`}{{{f{DbBHh}}Fl}Ab}{{{f{DbBHj}}Fl}Ab}{{{f{{An{BD`}}}}{Cf{Fl}}}{{A`{BCdn}}}}0{{{f{{An{BD`}}}}{Cf{Fl}}}{{A`{{Gb{Eh}}n}}}}{{{f{c}}}e{}{}}00{c{{A`{e}}}{}{}}00000{{{f{c}}}AAf{}}00<<<{{{f{{An{AAh}}}}}{{A`{AAhn}}}}{{{f{{An{AAh}}}}d}{{A`{AAhn}}}}```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{AAh{f{{An{{f{Bd}}}}}}{f{{An{{f{Bd}}}}}}{Cf{{f{Bd}}}}{f{AAh}}}AAh}{{BEdc}{{A`{AAhn}}}{{Dj{BHl{f{Db{BI`{BHn}}}}{f{Db{BI`{BIb}}}}}{{Ad{{A`{bn}}}}}}}}{{{f{BId}}{f{{An{J`}}}}dd}AAh}{{{f{BId}}{f{AAh}}{f{Ab}}{f{Ab}}BIf}{{A`{AAhn}}}}{{{f{Bd}}{f{Bd}}}Ef}{{{f{BF`}}Fl}{{Gl{BF`BF`}}}}{{{f{BIh}}{f{{An{A@b}}}}Lh}AAh}0{{{f{BIh}}{f{{An{A@b}}}}}AAh}0{{{f{BIj}}{Cf{{Gb{{f{Bd}}}}}}{Cf{{f{Bd}}}}d}{{A`{AAhn}}}}{{BEdd}BEd}{{{BIl{c}}{Cf{{Mh{BIn}}}}}{{BIl{c}}}BJ`}{{{f{Ab}}}{{A`{Abn}}}}{BJbBJb}{{{BJd{}{{Ad{c}}}}{f{Ab}}}c{}}{{BJbBJb}}{{BJfBJf}}{{{f{BFd}}Gh{Cf{{f{AMb}}}}}{{A`{Ghn}}}}0{{{f{BJh}}{f{Ab}}}{{A`{Abn}}}}1{{BJjc}BEd{{Hl{{An{BJb}}}}}}6`{{BJb{f{Bd}}}BJb}{{}BJb}{{BJbd}BJb}{{}BJl}{c{{A`{BJbn}}}{{Hl{{An{BJb}}}}}}{{{f{{Mh{ce}}}}}{{f{e}}}A@`BJn}{{BK`d}BK`}`{{{f{BKb}}}d}00`{{BJbc}BJb{{B@d{BJb}}}}{{{Mh{BKb}}BKd}{{A`{BEdn}}}}75{{BJbcd}BJb{{B@d{BJb}}}}{{{f{DbABn}}}b}{{{f{DbAC`}}}b}{{{f{DbABn}}{Cf{{f{Ab}}}}}{{A`{bn}}}}{{{f{DbAC`}}{Cf{c}}}b{}}{{{f{DbABn}}{f{Ab}}}{{A`{bn}}}}{{{f{DbAC`}}c}b{}}{{{f{{AHb{}{{AH`{c}}}}}}g}{{AHb{}{{AH`{c}}}}}{}{}{{Dj{{Cf{e}}}{{Ad{{Cf{c}}}}}}Dl}}{{BJjc{Mh{BCd}}}BEd{{Dj{AAh}{{Ad{{A`{AAhn}}}}}}IfIh}}{{BJbc{BKh{{Mh{BKf}}}}}BJb{{Dj{Ab}{{Ad{{A`{{Cf{Ab}}n}}}}}}IfIh}}{{BJbBJbc{BKh{{Mh{BKf}}}}}BJb{{Dj{AbAb}{{Ad{{A`{{Cf{Ab}}n}}}}}}IfIh}}{{{f{BJb}}{f{Dbc}}f}{{A`{BKjn}}}{{Af{{f{BJb}}f}{{Ad{{A`{BKjn}}}}}}}}{{{f{AHd}}{f{Dj}}}AHd}{{{f{AHd}}{f{Dj}}}{{l{c}}}Dh}{{BJbc{f{{An{BJb}}}}{BKh{{Mh{BKf}}}}}BJb{{Dj{{f{Db{An{Ab}}}}}{{Ad{{A`{{Cf{Ab}}n}}}}}}IfIh}}{{BJbBKl{f{{An{BJb}}}}dd}BJb}{{ce{BKh{{Mh{BKf}}}}d}BJb{{Dj{{f{Db{An{Ab}}}}}{{Ad{{A`{{Cf{Ab}}n}}}}}}IfIh}{{Hl{{An{BJb}}}}}}{{{f{{AHb{}{{AH`{c}}}}}}i{f{Db{An{g}}}}}b{}{}{}{{Dj{{Cf{e}}{f{g}}}{{Ad{g}}}}}}{{{f{{AHb{}{{AH`{c}}}}}}g}{{AHb{}{{AH`{c}}}}}{}{}{{Dj{e}{{Ad{c}}}}Dl}}{{BJbBJbGhEh}BJb}{BF`{{Mh{Cj}}}}{{{f{BKn}}}{{Cf{Fl}}}}{BL`BJb}{BLbBJb}{BJbBJb}3210{{{f{AHf}}El}{{l{En}}}}{{BJbEl}BJb}{{{f{BLd}}El}{{l{En}}}}{{cFb}BJb{{Hl{{An{BJb}}}}}}{{{f{AHf}}{f{{An{Ab}}}}{f{Fb}}}{{A`{{l{En}}n}}}}{{{f{AHh}}}{{A`{{l{En}}n}}}}6{{{f{BLd}}}{{A`{{l{En}}n}}}}{cBJb{{B@d{BJb}}}}{{{f{BLf}}}{{f{{An{Od}}}}}}``{BJbBL`}{eAMj{}{{Hh{}{{Ch{c}}}}}}{cBF`{{Hh{}{{Ch{b}}}}}}{cBF`{{Hh{}{{Ch{{Cf{b}}}}}}}}2{{AG`e}AMl{}{{Hh{}{{Ch{c}}}}}}0{{AG`c}BF`{{Hh{}{{Ch{{Cf{b}}}}}}}}{{AG`c}BF`{{Hh{}{{Ch{b}}}}}}`{{{f{Db{BLh{c}}}}}{{A`{BCnn}}}BLj}{{{f{BKb}}}{{f{AGb}}}}{{{f{BLd}}}{{f{AGb}}}}{{{f{BLl}}}{{f{AGb}}}}{{{f{BF`}}}{{f{AGb}}}}{{{f{DbBLd}}}{{f{DbAGb}}}}{{{f{DbBF`}}}{{f{DbAGb}}}}{{{f{M`}}}In}{{{f{BLn}}}{{f{{l{Aj}}}}}}{{{f{BM`}}{Cf{{f{Bd}}}}d}{{A`{{Kd{KbK`}}n}}}}{{{f{BM`}}{Cf{{f{Bd}}}}}{{A`{{Kd{KbK`}}n}}}}{{{f{BM`}}{Cf{{f{Bd}}}}Khdd{Cf{{f{Ef}}}}{f{{l{B`}}}}}{{A`{{Kd{KjKf}}n}}}}{{{f{BM`}}{Cf{{f{Bd}}}}Khd{Cf{{f{Ef}}}}{f{{l{B`}}}}}{{A`{{Kd{KjKf}}n}}}}{{{f{{Mh{c}}}}}BMb{BMdA@`}}{{{f{BMf}}}{{f{{l{Ah}}}}}}{{{f{{Mh{ce}}}}}{}A@`BJn}{{{f{{Mh{c}}}}}NlBMh}{{{f{BMj}}}{{f{BJb}}}}{{{f{{Mh{ce}}}}}{{f{c}}}A@`BJn}{{{f{AMn}}}{{f{Eh}}}}{{{f{BMl}}}{{f{Ab}}}}{{{f{DbBLd}}}{{A`{Fln}}}}{{{f{{AL`{}{{AN`{c}}{ANb{e}}{ANd{g}}}}}}}{{Cf{{f{{An{c}}}}}}}ADb{ANf{ANh{c}}}{{Gf{}{{Ch{c}}}}IlIfIh}}{{{f{BMn}}}{{f{{l{B`}}}}}}{{{Gb{BJb}}}BJb}{{{f{BM`}}{Cf{{f{Bd}}}}d}{{A`{{Kd{LdKf}}n}}}}{{{Mh{{An{{BN`{c}}}}e}}}{{Mh{{An{c}}e}}}{}BJn}{{{Mh{{BN`{c}}e}}}{{Mh{ce}}}{}BJn}{{{f{Bd}}}BJb}{{BJb{Cf{J`}}}BJb}{{{f{BNb}}}{{A`{{l{B`}}n}}}}{{{f{BNb}}}{{l{B`}}}}{{{f{{Kd{KjKf}}}}{f{Kh}}{f{AMb}}}{{Kd{L`Kf}}}}`{{{BIl{{Cl{BJ`}}}}{Cf{{Mh{BCd}}}}}{{A`{BNdn}}}}{{{BNf{c}}{f{BCd}}}{{A`{{BNh{c}}n}}}BNj}{{{BNl{c}}{f{BCd}}}{{A`{{BNn{c}}n}}}BNj}{{{BO`{c}}Fl}{{A`{BObn}}}BJ`}{{{BOd{c}}{f{BCd}}}{{A`{{BOf{c}}n}}}BNj}{{{f{Db{BIl{c}}}}}{{A`{BOhn}}}BJ`}`{BJbBOj}{{BJbBOlBJb}BJb}{{BJfBJf}}{{BJlBJl}BJl}{{{f{BLd}}{f{Ab}}}{{A`{Abn}}}}{{{f{DbBJl}}BJl}b}210{{{f{BJl}}}J`}04321{{{f{c}}}{{f{e}}}{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{{Mh{ce}}}}}{{f{c}}}A@`BJn}111111111111111{{{f{Dbc}}}{{f{Dbe}}}{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{BEdJ`cFb}BEd{{Hl{{An{BJb}}}}}}{BF`{{Cl{Cj}}}}``{BEdBEd}```{{{f{BOn}}{f{Bd}}}{{A`{Efn}}}}{{C@`{Gb{BJb}}}{{A`{BJbn}}}}{{{f{AMf}}{f{AMf}}c}{{A`{AMfn}}}ANn}{{{f{BLl}}{f{Db{An{Ab}}}}}{{A`{{Cf{Ab}}n}}}}{{{f{C@b}}AbAb}{{A`{Abn}}}}{{C@`{Gb{BJb}}}BJb}{{{f{C@d}}}b}{{BJbEh}BJb}{{{f{BLd}}{f{Eh}}Ff}{{A`{Abn}}}}{{BEd{C@f{{f{Bd}}EhA@f}}d}BEd}{{{f{AHj}}{f{Eh}}}{{A`{Abn}}}}3{{{f{AO`}}{f{Eh}}}{{A`{Abn}}}}{{BEdEhd}BEd}2{{{f{AHj}}{f{Eh}}Ff}{{A`{Abn}}}}{{{f{AO`}}{f{Eh}}Ff}{{A`{Abn}}}}{{BJbEhFf}BJb}`{BJbC@h}{{{f{{Mh{c}}}}}{{Cf{{f{ALd}}}}}{ALdA@`}}{BJbBJb}{{{f{C@j}}}{{A`{Abn}}}}1`{{{f{C@l}}}{{A`{{l{K`}}n}}}}{{{f{BF`}}Fl}d}{{{BO`{c}}{f{BCn}}}{{A`{{BO`{c}}n}}}BJ`}{{{f{C@n}}{f{Ab}}}{{A`{Abn}}}}{{{f{BLd}}{f{Ab}}}{{A`{Abn}}}}{{{f{C@n}}c}{{A`{Abn}}}Bj}{{{f{BLd}}}{{G`{{Fj{{Cl{Cj}}}}{Fn{{f{{Cl{Cj}}}}}{{Ad{Fl}}}}}}}}``{{{f{BLd}}}{{f{{Gb{{Cl{Cj}}}}}}}}{{{f{DbBLd}}}{{f{Db{Gb{{Cl{Cj}}}}}}}}{{{f{Ab}}{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{BJbBJbBJb}BJb}{{{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{BJbBJb}BJb}10{{{f{C@d}}}C@d}{{{f{BEd}}}BEd}{{{f{BJj}}}BJj}{{{f{BKd}}}BKd}{{{f{CA`}}}CA`}{{{f{CAb}}}CAb}{{{f{CAd}}}CAd}{{{f{CAf}}}CAf}{{{f{CAh}}}CAh}{{{f{BDd}}}BDd}{{{f{BEf}}}BEf}{{{f{CAj}}}CAj}{{{f{BFd}}}BFd}{{{f{CAl}}}CAl}{{{f{CAn}}}CAn}{{{f{CB`}}}CB`}{{{f{CBb}}}CBb}{{{f{AAj}}}AAj}{{{f{A@b}}}A@b}{{{f{CBd}}}CBd}{{{f{CBf}}}CBf}{{{f{CBh}}}CBh}{{{f{CBj}}}CBj}{{{f{CBl}}}CBl}{{{f{CBn}}}CBn}{{{f{BIf}}}BIf}{{{f{CC`}}}CC`}{{{f{CCb}}}CCb}{{{f{CCd}}}CCd}{{{f{CCf}}}CCf}{{{f{CCh}}}CCh}{{{f{CCj}}}CCj}{{{f{CCl}}}CCl}{{{f{CCn}}}CCn}{{{f{CD`}}}CD`}{{{f{CDb}}}CDb}{{{f{CDd}}}CDd}{{{f{CDf}}}CDf}{{{f{CDh}}}CDh}{{{f{CDj}}}CDj}{{{f{CDl}}}CDl}{{{f{CDn}}}CDn}{{{f{CE`}}}CE`}{{{f{CEb}}}CEb}{{{f{CEd}}}CEd}{{{f{CEf}}}CEf}{{{f{CEh}}}CEh}{{{f{CEj}}}CEj}{{{f{CEl}}}CEl}{{{f{CEn}}}CEn}{{{f{CF`}}}CF`}{{{f{CFb}}}CFb}{{{f{CFd}}}CFd}{{{f{BMj}}}BMj}{{{f{BJb}}}BJb}{{{f{CFf}}}CFf}{{{f{BOl}}}BOl}{{{f{{BKh{c}}}}}{{BKh{c}}}ADb}{{{f{CFh}}}CFh}{{{f{CFj}}}CFj}{{{f{CFl}}}CFl}{{{f{CFn}}}CFn}{{{f{CG`}}}CG`}{{{f{CGb}}}CGb}{{{f{BKl}}}BKl}{{{f{CGd}}}CGd}{{{f{CGf}}}CGf}{{{f{CGh}}}CGh}{{{f{CGj}}}CGj}{{{f{CGl}}}CGl}{{{f{CGn}}}CGn}{{{f{CH`}}}CH`}{{{f{CHb}}}CHb}{{{f{BJf}}}BJf}{{{f{C@`}}}C@`}{{{f{BJl}}}BJl}{{{f{CHd}}}CHd}{{{f{CHf}}}CHf}{{{f{{Mh{ce}}}}}{{Mh{ce}}}A@`{BJnADb}}{{{f{CHh}}}CHh}{{{f{CHj}}}CHj}{{{f{CHl}}}CHl}{{{f{Ol}}}Ol}{{{f{BEl}}}BEl}{{{f{BF`}}}BF`}{{{f{M`}}}M`}{{{f{BCd}}}BCd}{{{f{B@f}}}B@f}{{{f{BCn}}}BCn}{{{f{Oj}}}Oj}{{{f{CHn}}}CHn}{{{f{CI`}}}CI`}{{{f{CIb}}}CIb}{{{f{BLd}}}{{Mh{BLd}}}}{{{f{c}}{f{Dbe}}}b{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{c}}}b{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000````{{{f{CId}}}{{Cf{{f{CIf}}}}}}{{{f{CA`}}}{{Cf{{f{CIf}}}}}}{{{f{CAd}}}{{Cf{{f{CIf}}}}}}``{{{f{BFd}}{f{BFd}}}BAj}{{{f{{Mh{ce}}}}{f{{Mh{ce}}}}}BAj{CIhA@`}BJn}{{{f{{An{BJb}}}}}BJb}{{BK`CCb}BK`}{{{f{CCb}}{f{CCf}}}d}`{{{f{{An{Ab}}}}}{{A`{Abn}}}}{{{f{Bd}}}BJb}{BEd{{A`{AAhn}}}}{c{{A`{{Gb{AAh}}n}}}{{Id{}{{Ch{BEd}}}}}}{AOne{}{{AMj{c}}AL`}}0{{AOnAG`}e{}{{AMl{c}}AL`}}0{{ADj{f{Bd}}}{{l{c}}}Dh}{{ADl{f{{l{c}}}}}{{l{c}}}Dh}10{{ADl{f{Bd}}Eh}{{l{c}}}Dh}0{BEd{{A`{C@dn}}}}{cBJb{{BEj{Ef}}}}{{{f{CHh}}Fl}CIj}``{{{f{BIj}}{Gb{{f{Bd}}}}{Cf{{f{Bd}}}}d}{{A`{AAhn}}}}`{{{f{c}}{f{e}}}BAj{}{}}0{BJlBJl}```{{{f{CEl}}}{{A`{{Mh{BCd}}n}}}}{{cCHl}{{A`{BEdn}}}{{Hl{{An{BEd}}}}}}{{{f{BNb}}{f{{l{B`}}}}}{{l{B`}}}}{{ed}{{A`{BJbn}}}{{B@d{BJb}}ADb}{{Hl{{An{c}}}}}}{{{f{CId}}{Gb{BEd}}}{{A`{BEdn}}}}{{{f{CA`}}{Gb{BEd}}}{{A`{BEdn}}}}44{e{{A`{BJbn}}}{{B@d{BJb}}ADb}{{Hl{{An{c}}}}}}{{c{f{Bd}}d}BJb{{Hl{{An{BJb}}}}}}{{BL`c}BJb{{B@d{BJb}}}}{{{f{CIl}}{f{{An{Al}}}}}{{l{Bb}}}}{{{f{BNb}}{f{Bd}}d}{{A`{{l{Bb}}n}}}}{{BLbc}BJb{{B@d{BJb}}}}{{{f{BJl}}BJl}d}{{{f{BCd}}{f{Bd}}}d}{{{f{CIl}}{f{{l{Aj}}}}}{{l{Bb}}}}{{{f{BNb}}{f{{l{B`}}}}dd}{{A`{{l{Bb}}n}}}}{{{f{BNb}}{f{Bd}}}{{A`{{l{Bb}}n}}}}{{{f{Cj}}{f{AG`}}}{{Cl{Cj}}}}{{{f{Ab}}Fl}{{A`{{l{En}}n}}}}{BEdBEd}{{{CIn{c}}}{{A`{Fln}}}BJ`}{BJbBJb}{{{f{BNb}}{f{Bd}}d}{{A`{{l{En}}n}}}}{{{f{BNb}}{f{{l{B`}}}}d}{{A`{{l{En}}n}}}}{{{f{CJ`}}Al{Cf{Al}}{Cf{{f{CBj}}}}Ald}{{A`{Fln}}}}{{{ANj{Bd}}}Eh}{{{f{BId}}{f{{An{A@b}}}}d}AAh}`{{BEdBEd{Cf{Ef}}}BEd}{{{f{CJb}}{f{AAh}}{Cf{{f{Bd}}}}{Cf{{Gl{GhFl}}}}}{{A`{AAhn}}}}{{{f{CJb}}{f{AAh}}{Cf{{Gl{GhFl}}}}d}{{A`{{Gl{AAhAAh}}n}}}}{{{f{Ab}}d}{{A`{Abn}}}}{{BJbd}BJb}{{BJbced}BJb{{Dj{AbAb}{{Ad{{A`{{Cf{Ab}}n}}}}}}IfIhADb}{{Hl{{An{BJb}}}}}}212121{{ce}BJb{{Dj{AbAb}{{Ad{{A`{{Cf{Ab}}n}}}}}}IfIhADb}{{Hl{{An{BJb}}}}}}32{{CJdBJbFld}BJb}`{{{f{BF`}}}{{f{AG`}}}}{{{f{B@f}}}{{f{AG`}}}}```{{BJbBJbBFdCAl}BJb}`{CGdBJb}`{{BJbBJbBFdCAl{Cf{Kh}}{Cf{Ef}}}BJb}0{AM`Gh}00{{{f{CJf}}}{{l{Mn}}}}{{{f{CJh}}}{{l{Mn}}}}{{{f{C@l}}}{{A`{{l{Mn}}n}}}}`{{{f{CJj}}}{{l{Kf}}}}{{{f{BFd}}}Gh}`{{{f{BFd}}}d}```{{}b}{cbBJn}{{}BEd}{{}BKd}{{}CAb}{{}CAf}{{}CJl}{{}BDd}{{}BEf}{{}CB`}{{}CBd}{{}CBf}{{}CBh}{{}CBn}{{}BIf}{{}CC`}{{}CCb}{{}CCd}{{}CCj}{{}CCl}{{}CCn}{{}CD`}{{}CDb}{{}CDd}{{}CDj}{{}CDl}{{}CE`}{{}CEb}{{}CEd}{{}CEl}{{}BJb}{{}{{BKh{{Mh{BKf}}}}}}{{}{{BKh{{Mh{CJn}}}}}}{{}{{BKh{{Mh{C@b}}}}}}{{}CGd}{{}CGf}{{}CGj}{{}CGl}{{}CGn}{{}CH`}{{}BJl}{{}CHd}{{}{{Mh{CK`}}}}{{}{{Mh{Bd}}}}{{}{{Mh{c}}}CKb}{{}{{Mh{{An{c}}}}}{}}{{}CHj}{{}CHl}{{}Ol}{{}BEl}{{}BCd}{{}B@f}{{}BCn}{{}Oj}`{{}{{AAd{{Gb{AAj}}{Gb{A@b}}}}}}{Fl{{f{c}}}{}}00{{{f{{ALl{c}}}}}f{}}11111111111111111111111111111111111111111111111111111111111111111111111111111111111{{{f{{BKh{c}}}}}f{}}2222222222222222222222{{{f{{Mh{ce}}}}}{{f{c}}}A@`BJn}333333333333333{Fl{{f{Dbc}}}{}}00{{{f{Db{ALl{c}}}}}{{f{Db}}}{}}111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111```{{{f{CEl}}}{{A`{Efn}}}}{{{f{BEd}}}{{A`{Efn}}}}0001{{{f{{Mh{c}}}}}{{f{Bd}}}{ALdA@`}}{{{f{B@f}}{f{CKd}}}{{A`{CKfn}}}}```{{{f{Ab}}GhCKh}{{A`{Abn}}}}{{BLbGhCKh}BJb}{{BJbGhCKh}BJb}{{BJlBJl}BJl}{{{f{CEl}}}{{A`{{`{BCb}}n}}}}``{{{BJd{}{{Ad{c}}}}{f{Ab}}}c{}}{{BJbBJb}}{{{f{BJh}}{f{Ab}}}{{A`{Abn}}}}{{BJbc}BJb{{B@d{BJb}}}}{{{Mh{AGbc}}}{{A`{{Mh{ec}}{Mh{AGbc}}}}}BJn{AGbIfIh}}{{{Mh{AGbc}}}{{Mh{ec}}}BJn{AGbIfIh}}{{{f{{Mh{ce}}}}}{{CKj{ce}}}A@`{ADbBJn}}{Flb}0000000{{{f{DbC@d}}}b}1{{BEde}BEd{{B@d{BJf}}}{{Hh{}{{Ch{c}}}}}}22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222{{{f{Db{Mh{ce}}}}}bA@`BJn}3333333333333333{BJbBJb}2{{BEd{Cf{{Gb{BJb}}}}}BEd}1{{{f{BLd}}}Ab}{{{f{{Kd{KjKf}}}}{f{Kh}}{f{AMb}}}{{Kd{L`Kf}}}}`{BJbCKl}{{{f{AO`}}}{{f{Eh}}}}{{{f{BLd}}}{{f{Eh}}}}{{{f{M`}}}{{f{Eh}}}}`{{{f{Eh}}}BJb}{cBJb{{Hl{{An{Eh}}}}}}`{CGfBJb}{{}BJl}{{}CHd}{{{f{c}}}e{}{{CL`{CKn}}}}0`{{{f{CIl}}{f{{An{Al}}}}}{{l{Bb}}}}{{{f{CIl}}{f{{l{Aj}}}}}{{l{Bb}}}}{{BFd{f{Eh}}{f{Bd}}}{{A`{bn}}}}{{BFd{Cf{{f{Bd}}}}{f{Bd}}}{{A`{bn}}}}{{{f{c}}{f{c}}}{{A`{bn}}}CLb}{{{f{CLd}}{f{Bd}}}{{A`{bn}}}}`{{{f{CAh}}{f{CAh}}}d}{{{f{BDd}}{f{BDd}}}d}{{{f{BEf}}{f{BEf}}}d}{{{f{BFd}}{f{BFd}}}d}{{{f{CAl}}{f{CAl}}}d}{{{f{CAn}}{f{CAn}}}d}{{{f{CB`}}{f{CB`}}}d}{{{f{AAj}}{f{AAj}}}d}{{{f{CBd}}{f{CBd}}}d}{{{f{CBf}}{f{CBf}}}d}{{{f{CBh}}{f{CBh}}}d}{{{f{CBj}}{f{CBj}}}d}{{{f{CBl}}{f{CBl}}}d}{{{f{CBn}}{f{CBn}}}d}{{{f{BIf}}{f{BIf}}}d}{{{f{CC`}}{f{CC`}}}d}{{{f{CCb}}{f{CCb}}}d}{{{f{CCd}}{f{CCd}}}d}{{{f{CCf}}{f{CCf}}}d}{{{f{CCh}}{f{CCh}}}d}{{{f{CCj}}{f{CCj}}}d}{{{f{CCl}}{f{CCl}}}d}{{{f{CCn}}{f{CCn}}}d}{{{f{CD`}}{f{CD`}}}d}{{{f{CDb}}{f{CDb}}}d}{{{f{CDd}}{f{CDd}}}d}{{{f{CDf}}{f{CDf}}}d}{{{f{CDh}}{f{CDh}}}d}{{{f{CDj}}{f{CDj}}}d}{{{f{CDl}}{f{CDl}}}d}{{{f{CDn}}{f{CDn}}}d}{{{f{CE`}}{f{CE`}}}d}{{{f{CEb}}{f{CEb}}}d}{{{f{CEd}}{f{CEd}}}d}{{{f{CEf}}{f{CEf}}}d}{{{f{CEh}}{f{CEh}}}d}{{{f{CEj}}{f{CEj}}}d}{{{f{BMj}}{f{BMj}}}d}{{BJbc}BJb{{B@d{BJb}}}}{{{f{BJb}}{f{BJb}}}d}{{{f{CFf}}{f{CFf}}}d}{{{f{BOl}}{f{BOl}}}d}{{{f{{BKh{Ab}}}}{f{{BKh{Ab}}}}}d}{{{f{{BKh{{Mh{c}}}}}}{f{{BKh{{Mh{c}}}}}}}dA@`}{{{f{CFh}}{f{CFh}}}d}{{{f{CFj}}{f{CFj}}}d}{{{f{CFl}}{f{CFl}}}d}{{{f{CFn}}{f{CFn}}}d}{{{f{CG`}}{f{CG`}}}d}{{{f{CGb}}{f{CGb}}}d}{{{f{BKl}}{f{BKl}}}d}{{{f{CGh}}{f{CGh}}}d}{{{f{CGj}}{f{CGj}}}d}{{{f{CGl}}{f{CGl}}}d}{{{f{CGn}}{f{CGn}}}d}{{{f{CH`}}{f{CH`}}}d}{{{f{CHb}}{f{CHb}}}d}{{{f{BJf}}{f{BJf}}}d}{{{f{CKf}}{f{CKf}}}d}{{{f{CHd}}{f{CHd}}}d}{{{f{CHf}}{f{CHf}}}d}{{{f{{Mh{CLf}}}}{f{CLf}}}d}{{{f{{Mh{ce}}}}{f{{Mh{ce}}}}}d{CLhA@`}BJn}{{{f{{Mh{Cj}}}}{f{Cj}}}d}{{{f{CHj}}{f{CHj}}}d}{{{f{CHl}}{f{CHl}}}d}{{{f{Ol}}{f{Ol}}}d}{{{f{BEl}}{f{BEl}}}d}{{{f{BF`}}{f{BF`}}}d}{{{f{BF`}}{f{{f{Cj}}}}}d}{{{f{BCd}}{f{BCd}}}d}{{{f{B@f}}{f{B@f}}}d}{{{f{BCn}}{f{BCn}}}d}{{{f{Oj}}{f{Oj}}}d}{{{f{CIb}}{f{CIb}}}d}{{BJbc}BJb{{B@d{BJb}}}}{{{f{{AHn{}{{Ch{c}}}}}}e}c{}{}}0{{{f{c}}{f{e}}}d{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{CLjBJbd}BJb}``{{BJbc}BJb{{BEj{Ef}}}}{{BJbc}BJb{{Hl{{An{Eh}}}}}}{{{f{Dbc}}e}{{A`{{f{Dbg}}BBn}}}{}CLl{}}{{{f{{An{CJ`}}}}d{Cf{{f{CIf}}}}}{{A`{{Mh{{An{CJ`}}}}n}}}}{{{f{{An{CJ`}}}}d{Cf{{f{CIf}}}}d}{{A`{{Gl{{Mh{{An{CJ`}}}}Fl}}n}}}}{{{f{{An{c}}}}{f{{An{c}}}}}d{{Hl{CLn}}}}{{{f{BEd}}d}{{A`{Efn}}}}{{BEde}BEd{{B@d{BJb}}ADb}{{Hl{{An{c}}}}}}{{{f{AI`}}}{{A`{Abn}}}}{BJbBJb}{{{f{AI`}}}{{A`{{Gl{Ab{Gj{Gh}}}}n}}}}`{{{f{DbBJl}}c}b{{Hh{}{{Ch{BJl}}}}}}{{BJbBJbBJb}BJb}{{{f{BNb}}{f{{l{B`}}}}Fl}{{A`{{l{B`}}n}}}}{A@b{{Gl{J`J`}}}}{{{f{BNb}}{f{Bd}}}{{A`{{l{Ah}}n}}}}{{{f{BNb}}{f{{l{B`}}}}}{{A`{{l{Ah}}n}}}}{{{f{BNb}}{f{Bd}}{f{Eh}}}{{A`{Abn}}}}{{{f{ABn}}}d}{{{f{C@d}}}{{Cf{{A`{AAhn}}}}}}{{BEdFl}{{A`{AAhn}}}}{{{f{C@d}}}{{A`{AAhn}}}}{{{f{ABn}}}{{f{Od}}}}{{{f{BLd}}}{{Dn{Od}}}}{{CM`Gh}BJb}{{CM`{f{Bd}}}BJb}{{CM`{f{{An{c}}}}}BJb{{Hl{Bd}}}}{{{f{BF`}}}{{f{{An{B@f}}}}}}``{{BEdc}BEd{{B@d{BJb}}}}{{BJbc}BJb{{B@d{BJb}}}}`10{{BJbAHl}BJb}{{{f{AIb}}c}{{A`{AIbn}}}{}}{{{f{AId}}{f{{l{Bb}}}}}{{A`{{l{c}}n}}}Dh}{{{f{BLd}}{f{{l{Bb}}}}}{{A`{Abn}}}}{{BEdBJb}BEd}5{{BCnc}BCn{{Dj{Fl{f{B@f}}}{{Ad{d}}}}}}{{{f{BNb}}{f{Bd}}d}{{A`{{l{En}}n}}}}{{{f{BNb}}{f{{l{B`}}}}dd}{{A`{{l{En}}n}}}}{{{f{BNb}}{f{Bd}}}{{A`{{l{En}}n}}}}{CMb{{A`{AAhn}}}}{{{f{DbCMd}}{f{DbAAh}}}{{A`{bn}}}}{AC`{{l{c}}}Dh}{{ANn{f{{l{En}}}}{f{{l{En}}}}}{{A`{{l{En}}n}}}}{BK`BEd}{CId{{A`{BEdn}}}}{{{BIl{c}}}{{A`{AAhn}}}BJ`}{CA`{{A`{BEdn}}}}{CAd{{A`{BEdn}}}}{{{f{Db{BNf{c}}}}{f{DbAAh}}}{{A`{bn}}}BNj}{{{CMf{c}}}{{A`{AAhn}}}BJ`}{{{BLh{c}}}{{A`{AAhn}}}BLj}{{{f{Db{CMh{c}}}}{f{DbAAh}}}{{A`{bn}}}BNj}{{{f{Db{BNl{c}}}}{f{DbAAh}}}{{A`{bn}}}BNj}{{{f{Db{CMj{c}}}}{f{DbAAh}}}{{A`{bn}}}BNj}{{{CMl{c}}}{{A`{AAhn}}}BJ`}{{{CIn{c}}}{{A`{AAhn}}}BJ`}{{{BO`{c}}}{{A`{AAhn}}}BJ`}{{{BOd{c}}{f{DbAAh}}}{{A`{Jjn}}}BNj}{{{f{DbABn}}}{{l{Ah}}}}><;{{{CMf{c}}{Cf{{Mh{BIn}}}}d}{{A`{AAhn}}}BJ`}{{{f{BOb}}Fl}d}{{}BJb}{BEdBEd}{BLbBJb}{BJbBJb}`0```{{}{{BKh{{Mh{BKf}}}}}}{{{f{C@j}}}{{A`{Abn}}}}2{{BJbBJb}BJb}{{{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{{f{Db{Mh{AFf}}}}}{{A`{bBBn}}}}{{{f{BLl}}{f{DbHb}}}{{A`{bHd}}}}{{{f{C@b}}{f{DbHb}}}{{A`{bHd}}}}{{{f{BOn}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CAh}}{f{DbHb}}}{{A`{bHd}}}}{{{f{BDd}}{f{DbHb}}}{{A`{bHd}}}}{{{f{BEf}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CAj}}{f{DbHb}}}{{A`{bHd}}}}{{{f{BFd}}{f{DbHb}}}{{A`{bHd}}}}0{{{f{CAl}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CAn}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CB`}}{f{DbHb}}}{{A`{bHd}}}}{{{f{AAj}}{f{DbHb}}}{{A`{bHd}}}}{{{f{A@b}}{f{DbHb}}}{{A`{bHd}}}}{{{f{BKb}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CBd}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CBf}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CBh}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CBj}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CBl}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CMn}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CBn}}{f{DbHb}}}{{A`{bHd}}}}{{{f{BIf}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CC`}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CCb}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CCd}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CCf}}{f{DbHb}}}{{A`{bHd}}}}0{{{f{CCh}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CCj}}{f{DbHb}}}{{A`{bHd}}}}0{{{f{CCl}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CCn}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CD`}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CDb}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CDd}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CDf}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CDh}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CDj}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CDl}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CDn}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CE`}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CEb}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CEd}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CEf}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CEh}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CEj}}{f{DbHb}}}{{A`{bHd}}}}{{{f{BJb}}{f{DbHb}}}{{A`{bHd}}}}0{{{f{CFf}}{f{DbHb}}}{{A`{bHd}}}}{{{f{BOl}}{f{DbHb}}}{{A`{bHd}}}}0{{{f{{BKh{c}}}}{f{DbHb}}}{{A`{bHd}}}{}}{{{f{CFh}}{f{DbHb}}}{{A`{bHd}}}}0{{{f{CFj}}{f{DbHb}}}{{A`{bHd}}}}0{{{f{CFl}}{f{DbHb}}}{{A`{bHd}}}}0{{{f{CFn}}{f{DbHb}}}{{A`{bHd}}}}0{{{f{CG`}}{f{DbHb}}}{{A`{bHd}}}}0{{{f{CGb}}{f{DbHb}}}{{A`{bHd}}}}0{{{f{BKl}}{f{DbHb}}}{{A`{bHd}}}}0{{{f{CGd}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CGf}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CGh}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CGj}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CGl}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CGn}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CH`}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CHb}}{f{DbHb}}}{{A`{bHd}}}}{{{f{C@`}}{f{DbHb}}}{{A`{bHd}}}}{{{f{BJl}}{f{DbHb}}}{{A`{bHd}}}}0000{{{f{CKf}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CHd}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CHf}}{f{DbHb}}}{{A`{bHd}}}}{{{f{{Mh{ce}}}}{f{DbHb}}}{{A`{bHd}}}{AGdA@`}BJn}{{{f{{Mh{ce}}}}{f{DbHb}}}{{A`{bHd}}}A@`BJn}{{{f{{Mh{ce}}}}{f{DbHb}}}{{A`{bHd}}}{BCbA@`}BJn}{{{f{CHh}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CHj}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CHl}}{f{DbHb}}}{{A`{bHd}}}}{{{f{Ol}}{f{DbHb}}}{{A`{bHd}}}}{{{f{BEl}}{f{DbHb}}}{{A`{bHd}}}}{{{f{BF`}}{f{DbHb}}}{{A`{bHd}}}}{{{f{BCd}}{f{DbHb}}}{{A`{bHd}}}}{{{f{B@f}}{f{DbHb}}}{{A`{bHd}}}}{{{f{BCn}}{f{DbHb}}}{{A`{bHd}}}}{{{f{Oj}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CHn}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CI`}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CIb}}{f{DbHb}}}{{A`{bHd}}}}{{{f{Bd}}BFj}Ef}```{{BJbce}BJb{{Dj{AbAb}{{Ad{{A`{{Cf{Ab}}n}}}}}}IfIhADb}{{Hl{{An{BJb}}}}}}{{BK`d}BK`}``{{{f{Bd}}c}{{A`{BJbn}}}{{Hl{{An{BJb}}}}}}{{BJb{Cf{J`}}}BJb}{cc{}}0000000{CElBEd}1{BJjBEd}2222222222222222222222222222222222{J`AAj}333333{{{f{Bd}}}CBj}4444{CCfBIf}55555555555555555555555555555{NdBJb}{O`BJb}{NlBJb}{GhBJb}{AlBJb}{JhBJb}{BMjBJb}{{{f{Bd}}}BJb}{J`BJb}>{JjBJb}{dBJb}{N`BJb}{MbBJb}{cc{}}00{CG`{{BKh{{Mh{BLl}}}}}}{CFh{{BKh{{Mh{BLl}}}}}}{CN`{{BKh{{Mh{BLl}}}}}}{CFj{{BKh{{Mh{BLl}}}}}}{CNb{{BKh{{Mh{BLl}}}}}}{BKl{{BKh{{Mh{BLl}}}}}}{CFl{{BKh{{Mh{BLl}}}}}}{CNd{{BKh{{Mh{BLl}}}}}}{CNf{{BKh{{Mh{BLl}}}}}}{CGb{{BKh{{Mh{BLl}}}}}}::::::{CG`BKl}{CFhBKl}{CNbBKl}={CFjBKl}>>>>>{CH`CGn}????{{{f{Bd}}}BJf}{EfBJf}{{{Mh{Bd}}}BJf}{BJbBJf}{cc{}}0{CNhCKf}111{{{A@l{c}}}{{Mh{{An{c}}}}}{}}{CNj{{Mh{CK`}}}}3{{{Mh{Bd}}}{{Mh{{An{Al}}}}}}{{{Dn{c}}}{{Mh{c}}}{CNlA@`}}{{{Gb{ce}}}{{Mh{{An{c}}e}}}{}{BJnADb}}{{{Cl{ce}}}{{Mh{ce}}}A@`BJn}{Ef{{Mh{Bd}}}}{{{f{Bd}}}{{Mh{Bd}}}}{CNn{{Mh{CO`}}}}{{{f{CO`}}}{{Mh{CO`}}}}{{{f{{An{c}}}}}{{Mh{{An{c}}}}}ADb}{CJ`{{Mh{CLn}}}}{c{{Mh{c}}}{}}{{{f{CLn}}}{{Mh{CLn}}}}{{{f{CK`}}}{{Mh{CK`}}}}{CObc{}}{cc{}}00000{COdBF`}1{COfBF`}22{BCnBCd}{{{Mh{BCn}}}BCd}{{{f{BD`}}}BCd}{{{f{BCn}}}BCd}{{{f{{An{Ab}}}}}BCd}{{{f{{Mh{BCn}}}}}BCd}8{{{Gb{B@f}}}BCn}99999{J`{{Cf{BJl}}}}{J`BJl}00{{c{Cf{Ib}}}COh{}}{{{COj{Gh}}{COj{Al}}{Cf{Ib}}}COl}{{{COj{Gh}}{COj{Al}}{Cf{Ib}}}COn}{g{{A`{ic}}}{}{}{{Hj{c}{{Ch{e}}}}}{}}000{c{{ALl{{l{Bb}}}}}{{Hh{}{{Ch{d}}}}}}{c{{ALl{{l{e}}}}}{{Hh{}{{Ch{}}}}}Bf}{cBJl{{Hh{}{{Ch{BJl}}}}}}{e{{Mh{{An{c}}}}}{}{{Hh{}{{Ch{c}}}}}}{eBCd{{B@d{Od}}}{{Hh{}{{Ch{c}}}}}}{{gFl}{{D@`{Gh}}}Hl{{Hh{}{{Ch{{Cf{c}}}}}}}{{Hh{}{{Ch{{Cf{e}}}}}}}}0{e{{D@`{Gh}}}{{Hh{}{{Ch{{Cf{d}}}}}}}{{Hh{}{{Ch{{Cf{c}}}}}}}}{{{f{Bd}}e}ADf{}{{Cn{}{{Ch{{Cf{c}}}}}}}}{{gAG`}{{D@`{Gh}}}BH`{{Hh{}{{Ch{{Cf{c}}}}}}}{{Hh{}{{Ch{{Cf{e}}}}}}}}783{{{f{Bd}}e}ADf{}{{Cn{}{{Ch{c}}}}}}{{{f{Bd}}}{{Cf{BJl}}}}{c{{ALl{{l{e}}}}}{{Id{}{{Ch{}}}}}Bf}{e{{Mh{{An{c}}}}}If{{Id{}{{Ch{c}}}}}}`{c{{A`{{CIn{AFf}}n}}}{{B@d{CJ`}}}}{{}{{Mh{c}}}A@`}{c{{Mh{ec}}}BJnA@`}{{{f{Bd}}{f{{An{c}}}}}ADf{}}{{{f{Bd}}{f{{An{{Cf{c}}}}}}}ADf{}}{{{f{Bd}}}{{A`{D@b}}}}{c{{ALl{{l{e}}}}}{{Il{}{{Ch{}}}}}Bf}{c{{ALl{{l{Bb}}}}}{{Il{}{{Ch{d}}}}}}{Eh{{BKh{{Mh{BKf}}}}}}{{{f{Bd}}c}D@d{}}{{{Gb{c}}AG`}{{AL`{}{{AN`{c}}{ANb{e}}{ANd{g}}}}}ADb{ANf{ANh{c}}}{{Gf{}{{Ch{c}}}}IlIfIh}}{{{Gb{c}}AG`}{{AL`{}{{AN`{e}}{ANb{c}}{ANd{g}}}}}{ANf{ANh{e}}}ADb{{Gf{}{{Ch{e}}}}IlIfIh}}`{{{f{Bd}}cFl}AIf{}}{{FlcAG`}{{AL`{}{{AN`{c}}{ANb{e}}{ANd{g}}}}}ADb{ANf{ANh{c}}}{{Gf{}{{Ch{c}}}}IlIfIh}}{{}CHd}{{BEdBEdcc}BEd{{B@d{BJb}}}}{{{f{D@f}}{f{AAh}}ee}{{A`{AAhn}}}{{Hl{Bd}}}{{Hh{}{{Ch{c}}}}}}{{{f{Bd}}Fl}AIh}{{FlAG`}{{AL`{}{{AN`{c}}{ANb{e}}{ANd{g}}}}}ADb{ANf{ANh{c}}}{{Gf{}{{Ch{c}}}}IlIfIh}}{{FlAG`}BF`}``{{BJbc{BKh{{Mh{BKf}}}}D@h}BJb{{Dj{Ab}{{Ad{{A`{{Cf{Ab}}n}}}}}}IfIh}}`{{BJbc}BJb{{B@d{BJb}}}}{{BJbFlFl}BJb}{{{f{{Mh{ce}}}}{f{{Mh{ce}}}}}d{D@jA@`}BJn}{{{f{BLd}}Fl}{{A`{Inn}}}}{{BL`BJbd}BJb}{{BLbBJbd}BJb}{{{f{{AL`{}{{AN`{c}}{ANb{e}}{ANd{g}}}}}}Fl}{{Cf{c}}}ADb{ANf{ANh{c}}}{{Gf{}{{Ch{c}}}}IlIfIh}}6{{{f{BCd}}{f{Bd}}}{{Cf{{f{Eh}}}}}}{{{f{AIj}}Fl}{{A`{Inn}}}}{{{f{AO`}}Fl}{{A`{Inn}}}}{{{f{AIj}}Fl}In}{{{f{AO`}}Fl}In}{{{f{BCd}}Fl}{{Cf{{Gl{{f{{BAb{BA`}}}}{f{Eh}}}}}}}}{{{f{DbBCd}}Fl}{{Cf{{Gl{{f{Db{BAb{BA`}}}}{f{DbEh}}}}}}}}{C@hBJb}{{{f{BEd}}}BJl}{{{f{CHf}}}Eh}{{}Eh}{{{f{CBb}}GhCAl{Cf{{f{AMb}}}}}{{A`{CAjn}}}}00{{{f{CJn}}{f{BCd}}D@l{f{Od}}{f{Od}}}{{Cf{Od}}}}{{{f{BKf}}{f{BCd}}D@l{f{{An{Od}}}}}{{A`{Odn}}}}{{{f{BCd}}{f{Bd}}}{{Cf{Od}}}}{{{f{AG`}}}{{f{{An{B@f}}}}}}{{{f{BLf}}}Fl}{{{f{BCd}}{f{Bd}}}{{Cf{{Gl{Fl{f{{BAb{BA`}}}}{f{Eh}}}}}}}}{{{f{{An{Al}}}}}{{Cf{Fl}}}}{{{f{Db{BO`{c}}}}}{{A`{{f{{Mh{CHh}}}}n}}}BJ`}{{{f{BLd}}}{{Cf{{Ml{Mj}}}}}}{{{f{Db{Mh{ce}}}}}{{Cf{{f{Dbc}}}}}A@`BJn}{{{f{Db{Mh{ce}}}}}{{f{Dbc}}}A@`BJn}{{{f{D@n}}}{{Gb{{f{Bd}}}}}}{{{f{BCd}}}{{Gb{{f{Bd}}}}}}{{{f{BCn}}}{{Gb{{f{Bd}}}}}}{{{f{{CLb{}{{DA`{c}}}}}}}{{Gb{{Gl{{f{Bd}}c}}}}}{AGdCLh}}{{{f{BCd}}}{{Gb{{Gl{{f{Bd}}}}}}}}{{{f{BCn}}}{{Gb{{Gl{{f{Bd}}}}}}}}{{{f{BLd}}Fl}{{Cf{{f{Jd}}}}}}{{{f{BLd}}FlFl}{{Cf{{f{Jd}}}}}}{{{f{BLl}}}{{Cf{{BKh{{Mh{BKf}}}}}}}}{{{f{CBb}}CAjCAlKh{Cf{{f{AMb}}}}CB`}{{A`{DAbn}}}}{{{f{CBd}}}{{Mh{CBf}}}}{{{f{Dbc}}}{{A`{DAdn}}}{BLjBJ`A@`}}{{{f{CMn}}{f{BCd}}}{{A`{{Mh{BCd}}n}}}}{{{f{BAd}}Fl}In}{{{f{{AL`{}{{AN`{c}}{ANb{e}}{ANd{g}}}}}}Fl}{{Cf{c}}}ADb{ANf{ANh{c}}}{{Gf{}{{Ch{c}}}}IlIfIh}}{{{f{BLd}}Fl}In}{{{f{CId}}}d}{{{f{CA`}}}d}`{{BEde}BJj{{B@d{BJb}}ADb}{{Hl{{An{c}}}}}}{{{f{DAf}}{Gb{Ab}}{f{BDd}}}{{A`{{Gl{Ab{Gb{Ab}}Bn}}n}}}}{{BEdBJbcBDd}BJj{{Hl{{An{BJb}}}}}}2{{BFdBFd{f{{An{Gh}}}}CAlKh{Cf{AMb}}}{{A`{{Gb{{A@l{J`}}}}n}}}}{{CBb{f{{An{Gh}}}}CAlKh{f{{Cf{Ef}}}}ddCB`}{{Gl{{Gb{{A@l{J`}}}}{Gb{Gh}}{Gb{Gh}}}}}}{{{f{BGf}}dd}{{A`{Bnn}}}}{{{f{{AHn{}{{Ch{c}}}}}}e}c{}{}}{{BJbc}BJb{{B@d{BJb}}}}{{{f{{Mh{ce}}}}{f{{Mh{ce}}}}}d{D@jA@`}BJn}21`{{{f{BLd}}}d}{{{f{BDd}}{f{Dbc}}}bADh}{{{f{BEf}}{f{Dbc}}}bADh}{{{f{BFd}}{f{Dbc}}}bADh}{{{f{CAl}}{f{Dbc}}}bADh}{{{f{CAn}}{f{Dbc}}}bADh}{{{f{CB`}}{f{Dbc}}}bADh}{{{f{CBd}}{f{Dbc}}}bADh}{{{f{CBf}}{f{Dbc}}}bADh}{{{f{CBh}}{f{Dbc}}}bADh}{{{f{CBj}}{f{Dbc}}}bADh}{{{f{CBl}}{f{Dbc}}}bADh}{{{f{CBn}}{f{Dbc}}}bADh}{{{f{BIf}}{f{Dbc}}}bADh}{{{f{CC`}}{f{Dbc}}}bADh}{{{f{CCb}}{f{Dbc}}}bADh}{{{f{CCd}}{f{Dbc}}}bADh}{{{f{CCf}}{f{Dbc}}}bADh}{{{f{CCh}}{f{Dbc}}}bADh}{{{f{CCj}}{f{Dbc}}}bADh}{{{f{CCl}}{f{Dbc}}}bADh}{{{f{CCn}}{f{Dbc}}}bADh}{{{f{CD`}}{f{Dbc}}}bADh}{{{f{CDb}}{f{Dbc}}}bADh}{{{f{CDd}}{f{Dbc}}}bADh}{{{f{CDf}}{f{Dbc}}}bADh}{{{f{CDh}}{f{Dbc}}}bADh}{{{f{CDj}}{f{Dbc}}}bADh}{{{f{CDl}}{f{Dbc}}}bADh}{{{f{CDn}}{f{Dbc}}}bADh}{{{f{CE`}}{f{Dbc}}}bADh}{{{f{CEb}}{f{Dbc}}}bADh}{{{f{CEd}}{f{Dbc}}}bADh}{{{f{CEf}}{f{Dbc}}}bADh}{{{f{CEh}}{f{Dbc}}}bADh}{{{f{CEj}}{f{Dbc}}}bADh}{{{f{BMj}}{f{Dbc}}}bADh}{{{f{BJb}}{f{Dbc}}}bADh}{{{f{CFf}}{f{Dbc}}}bADh}{{{f{BOl}}{f{Dbc}}}bADh}{{{f{CFh}}{f{Dbc}}}bADh}{{{f{CFj}}{f{Dbc}}}bADh}{{{f{CFl}}{f{Dbc}}}bADh}{{{f{CFn}}{f{Dbc}}}bADh}{{{f{CG`}}{f{Dbc}}}bADh}{{{f{CGb}}{f{Dbc}}}bADh}{{{f{BKl}}{f{Dbc}}}bADh}{{{f{CGh}}{f{Dbc}}}bADh}{{{f{CGj}}{f{Dbc}}}bADh}{{{f{CGl}}{f{Dbc}}}bADh}{{{f{CGn}}{f{Dbc}}}bADh}{{{f{CH`}}{f{Dbc}}}bADh}{{{f{CHb}}{f{Dbc}}}bADh}{{{f{BJf}}{f{Dbc}}}bADh}{{{f{CHd}}{f{Dbc}}}bADh}{{{f{CHf}}{f{Dbc}}}bADh}{{{f{{Mh{ce}}}}{f{Dbg}}}b{DAhA@`}BJnADh}{{{f{CHj}}{f{Dbc}}}bADh}{{{f{CHl}}{f{Dbc}}}bADh}{{{f{BEl}}{f{Dbc}}}bADh}{{{f{BCd}}{f{Dbc}}}bADh}{{{f{B@f}}{f{Dbc}}}bADh}{{{f{Oj}}{f{Dbc}}}bADh}{{{f{CIb}}{f{Dbc}}}bADh}{{{f{DAj}}{f{Ab}}CCjd}{{A`{{Gl{{Gl{{Gb{J`}}{Gb{J`}}}}d}}n}}}}{{{f{DAj}}{f{Ab}}CCjd}{{A`{{Gl{{ALh{J`}}{ALh{J`}}}}n}}}}{{BJj{Cf{Fl}}}BEd}{{BLbBJb}BJb}{{BJb{Cf{Fl}}}BJb}{{{f{BNb}}}{{A`{{l{B`}}n}}}}{{{f{BNb}}}{{l{B`}}}}``{{{f{{An{{f{{l{B`}}}}}}}}{f{Bd}}d}{{A`{{l{B`}}n}}}}{{{f{DAl}}}{{l{Mn}}}}{{{f{CJh}}}{{l{Mn}}}}{{{f{C@l}}}{{A`{{l{Mn}}n}}}}`{{{f{CJj}}}{{l{Kf}}}}`{{BK`CCf}BK`}`{{{f{AAj}}}J`}`{{{f{{Kd{KjKf}}}}{f{{l{B`}}}}CIb{Fn{Gh}{{Ad{AM`}}}}{Fn{AM`}{{Ad{Gh}}}}{f{AMb}}{f{AMb}}}{{A`{{l{Kf}}n}}}}{{{f{{Kd{KjKf}}}}{Cf{{f{Bd}}}}{Fn{Gh}{{Ad{AM`}}}}{Fn{AM`}{{Ad{Gh}}}}{f{AMb}}{f{AMb}}}{{A`{{l{Kf}}n}}}}{BJbBJb}{{{f{AM`}}}d}{{{BNf{c}}d}{{BNf{c}}}BNj}````0`{{}b}{cb{ADbBJn}}`{cBJb{{Hl{{An{Gh}}}}}}``{{{f{D@n}}{f{Bd}}}{{Cf{Fl}}}}{{{f{BCd}}{f{Bd}}}{{Cf{Fl}}}}{{{f{BCn}}{f{Bd}}}{{Cf{Fl}}}}{{{f{{An{J`}}}}}{{`{{Cn{}{{Ch{Fl}}}}}}}}{{{f{DAd}}Al{Cf{Fl}}d{Cf{{f{BCd}}}}FlFl{Cf{{f{CBj}}}}{Cf{Al}}Al{Cf{{f{CBl}}}}dd{f{Db{Cf{Fl}}}}d}{{A`{{Gl{BCdFlFl}}n}}}}{{{CMl{c}}{Cf{{DAn{Fl}}}}}{{CMl{c}}}BJ`}{{{CIn{c}}{Cf{{DAn{Fl}}}}}{{CIn{c}}}BJ`}``{{}Fl}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`{{{f{DbABn}}}{{Cl{Cj}}}}{{BEdBEdcc}BEd{{B@d{BJb}}}}{{{f{D@f}}{f{AAh}}ee}{{A`{AAhn}}}{{Hl{Bd}}}{{Hh{}{{Ch{c}}}}}}{{{f{DbA@b}}}{{f{DbJj}}}}`{{{f{DbBJl}}BJl}b}{{{f{DbBCd}}Fl{BAb{BA`}}Eh}{{A`{{Cf{Eh}}n}}}}{{BJbBJbGhEh}BJb}{{BJbBJbBJb}BJb}``{{{f{Ab}}CDf}Ab}{{BJbCDf}BJb}`{{{f{Ab}}{f{Ab}}d}{{A`{Abn}}}}{{BJbBJb}BJb}{{BJlBJl}BJl}{{{f{BJl}}BJl}d}{ce{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{BF`{{Gl{{Gb{B@f}}{Gb{{Cl{Cj}}}}{Cf{Ib}}}}}}{{{ALl{c}}}c{}}{{{Mh{ce}}}{{Cf{c}}}{}BJn}33{{{f{BJb}}}}{BJl}{{{f{BF`}}}}{BCd}{DB`BLb}{BLbBLb}{{{Mh{ce}}}{}A@`BJn}{{{Mh{ce}}}{{Gl{e}}}A@`BJn}{{CBdc}{{BIl{c}}}BJ`}{{BAfEh}{{A`{M`n}}}}{BCfAb}{{{Mh{BLd}}}Ab}{{M`{f{Bd}}}Ab}{CHhDBb}{BEj{{Gb{c}}}{}}{c{{Gb{{BAb{BA`}}}}}{}}{c{{Gb{Ef}}}{}}{{{f{BJl}}}d}{{{f{BOl}}}d}{{{f{CCf}}}d}{{{f{Ab}}{f{Ab}}{f{Ab}}CDj}{{A`{{l{Bb}}n}}}}{{BJbccCDj}BJb{{B@d{BJb}}}}{cd{{Hl{CLn}}}}{{{f{{An{Al}}}}}d}{{{f{BFd}}{Cf{{f{Bd}}}}}d}7{{{f{CHd}}}d}{{{f{BLd}}}d}{{{f{BCd}}}d}{{{f{BCn}}}d}{{{f{BOb}}}d}{BJbBJb}{{{f{Ab}}}{{A`{{l{Bb}}n}}}}{{{f{AIl}}}{{A`{{l{Bb}}n}}}}27{{{f{BFd}}}d}{{{f{Ab}}{f{Ab}}}{{A`{{l{Bb}}n}}}}{{BJbc}BJb{{B@d{BJb}}}}54{{{f{AIn}}}{{A`{{l{Bb}}n}}}}6{{{f{CJf}}}{{l{Bb}}}}{{{f{CJh}}}{{l{Bb}}}}{{{f{C@l}}}{{A`{{l{Bb}}n}}}}999{{{f{BLd}}}{{l{Bb}}}}::0{{{f{A@b}}}d};{{{f{AAj}}}d}`{{{f{Ab}}}d}{{{f{{Mh{AFf}}}}}d}{{}d}{{{f{CLd}}El}{{A`{dn}}}}{{{f{c}}}d{}}0{{{f{CCj}}{f{CCf}}}{{A`{bn}}}}4?{{{f{CJf}}}{{l{K`}}}}{{{f{CJh}}}{{l{K`}}}}{{{f{C@l}}}{{A`{{l{K`}}n}}}}{{{f{{AL`{}{{AN`{c}}{ANb{e}}{ANd{g}}}}}}}{{AGh{cgAGf}}}ADb{ANf{ANh{c}}}{{Gf{}{{Ch{c}}}}IlIfIh}}{{{f{BJl}}}{{AFb{BJl}}}}{{{f{BF`}}}{{AGh{{Gb{{Cl{CLf}}}}DBdAGf}}}}{{{f{BCd}}}{{`{{Cn{}{{Ch{{Gl{{f{{BAb{BA`}}}}{f{Eh}}}}}}}}}}}}{{{f{BCd}}}{{`{Lb}}}}{{{f{DbBCd}}}{{`{Lb}}}}1{{{f{BJl}}}{{AFd{BJl}}}}2{{BL`BJbd}BJb}{{BEdBEdccBIf}BEd{{Hl{{An{BJb}}}}}}{{BLbBJbd}BJb}{{{f{D@f}}{f{AAh}}eeBIf}{{A`{AAhn}}}{{Hl{Bd}}}{{Hh{}{{Ch{c}}}}}}{{{f{DBf}}{f{AAh}}{f{Bd}}{f{Bd}}eeCDd{Cf{In}}}{{A`{AAhn}}}{{Hl{Bd}}}{{Hh{}{{Ch{c}}}}}}{BEdBK`}{{{f{DBh}}{f{Bd}}d}{{A`{{l{B`}}n}}}}{{{f{DBh}}{f{{l{B`}}}}d}{{A`{{l{B`}}n}}}}{{BK`d}BK`}`{CM`BJb}{DBjBJb}{{{f{CHh}}}{{f{{Cf{{Gb{DBl}}}}}}}}``{{}BJb}{BEdBEd}{BLbBJb}{{{f{{AL`{}{{AN`{c}}{ANb{e}}{ANd{g}}}}}}}{{Cf{c}}}ADb{ANf{ANh{c}}}{{Gf{}{{Ch{c}}}}IlIfIh}}{BJbBJb}{DBnBEd}4{{{f{{Mh{ce}}}}{f{{Mh{ce}}}}}d{D@jA@`}BJn}`{{BEdBEdcc}BEd{{B@d{BJb}}}}{{{f{D@f}}{f{AAh}}ee}{{A`{AAhn}}}{{Hl{Bd}}}{{Hh{}{{Ch{c}}}}}}{{BK`c}BK`{{Hl{{An{BJb}}}}}}{{{ABd{}{{AAn{c}}{AB`{e}}{ABb{g}}}}{ABd{}{{AAn{c}}{AB`{e}}{ABb{g}}}}}e{}{}{}}{{{ABd{}{{AAn{c}}{AB`{e}}{ABb{g}}}}c}e{}{}{}}{{c{ABd{}{{AAn{c}}{AB`{e}}{ABb{g}}}}}e{}{}{}}<{{{f{BLd}}}Fl};9{{{f{BF`}}}Fl}{{{f{BCd}}}Fl}{{{f{BCn}}}Fl}{{BEdJ`}BEd}{{{f{BLd}}Fl}Ab}`{BJbBLb}{cBJbDC`}{DC`BJb}{BFdBJb}{DCbBJb}{CHfBJb}{{BJbc}BJb{{B@d{BJb}}}}0``{{CAdd}CAd}{{{CIn{c}}d}{{CIn{c}}}BJ`}```{BJbBJb}{{{f{DBh}}}{{l{En}}}}0{{{f{DBh}}{f{{An{Ab}}}}}{{A`{{l{Ah}}n}}}}{{{f{DBh}}GhCKh}{{A`{{l{Ah}}n}}}}{{{f{DBh}}Ghd}{{A`{Abn}}}}{{{f{DBh}}{f{{l{B`}}}}d}{{A`{{l{B`}}n}}}}4{{{f{DBh}}}{{A`{Abn}}}}{{{f{DBh}}}Ab}01{{{f{DBh}}}{{A`{{l{En}}n}}}}{{{f{DBh}}}{{l{Ah}}}}{{{f{DBh}}{f{Ab}}}{{A`{{l{Ah}}n}}}}{{{f{DBh}}GhFl}{{l{Ah}}}}{{{f{DBh}}El}{{A`{{l{Ah}}n}}}}{{{f{DBh}}Al}Ab}7{{{f{DBh}}}{{A`{{l{Ah}}n}}}}01{{{f{{AHn{}{{Ch{c}}}}}}e}c{}{}}{{BJbc}BJb{{B@d{BJb}}}}{{{f{{Mh{ce}}}}{f{{Mh{ce}}}}}d{D@jA@`}BJn}21``````{{{f{AMf}}{f{AMf}}}{{A`{{Gl{AMfAMf}}n}}}}{{{l{Ah}}{l{Ah}}}{{A`{{Gl{{l{Ah}}{l{Ah}}}}n}}}}{{{f{Db{Mh{ce}}}}}{{f{Dbc}}}{DCdA@`}{BJnADb}}{{BEdcBJl{Cf{{Mh{CMn}}}}{Cf{{f{Bd}}}}}BEd{{Dj{AAh}{{Ad{{A`{AAhn}}}}}}IfIh}}{{DBjc}BJb{{Dj{{f{Bd}}}{{Ad{{A`{Efn}}}}}}IfIh}}{{BJbc{BKh{{Mh{BKf}}}}}BJb{{Dj{Ab}{{Ad{{A`{{Cf{Ab}}n}}}}}}IfIh}}{{BJbBJbc{BKh{{Mh{BKf}}}}}BJb{{Dj{AbAb}{{Ad{{A`{{Cf{Ab}}n}}}}}}IfIh}}{{BJb{f{Dbc}}{f{Db}}}{{A`{BJbn}}}{{Af{BJb{f{Db}}}{{Ad{{A`{BJbn}}}}}}}}{{{f{BLf}}{Cf{{f{Ef}}}}}{{A`{Odn}}}}{{{f{BLf}}c}{{A`{Odn}}}{{AAl{{f{Eh}}}{{Ad{Eh}}}}}}{c{{BKh{{Mh{BKf}}}}}{{Dj{{f{Eh}}}{{Ad{{A`{Ehn}}}}}}IfIh}}{c{{BKh{{Mh{BKf}}}}}{{Dj{{f{{An{{f{Eh}}}}}}}{{Ad{{A`{Ehn}}}}}}IfIh}}{{BJbc}BJb{{Af{BJb}{{Ad{BJb}}}}}}{c{{BKh{{Mh{BKf}}}}}{{Dj{{f{Od}}}{{Ad{{A`{Odn}}}}}}IfIh}}{{DBj{Mh{Dj}}}BJb}{c{{BKh{{Mh{BKf}}}}}{{Dj{{f{{An{Od}}}}}{{Ad{{A`{Odn}}}}}}IfIh}}:{{ce{BKh{{Mh{BKf}}}}}BJb{{Dj{{f{Db{An{Ab}}}}}{{Ad{{A`{{Cf{Ab}}n}}}}}}IfIh}{{Hl{{An{BJb}}}}}}{{BJbc{f{{An{BJb}}}}{BKh{{Mh{BKf}}}}}BJb{{Dj{{f{Db{An{Ab}}}}}{{Ad{{A`{{Cf{Ab}}n}}}}}}IfIh}}{{BJbBKl{f{{An{BJb}}}}dd}BJb}2{{{f{BLf}}}{{A`{Odn}}}}{{CBdc}CBd{{Dj{CBf}{{Ad{CBf}}}}}}1111{CHfCHf}{{{Cf{{f{{An{Fl}}}}}}{f{BCn}}{Cf{{f{{An{Ab}}}}}}{Cf{{f{DCf}}}}}AAh}{{{Cf{{f{{An{Ef}}}}}}{f{BCd}}{Cf{{f{{An{Ab}}}}}}d}{{Cf{{Gb{Fl}}}}}}{{{f{Bd}}}BJb}{BL`BJb}{BEdBEd}{BLbBJb}{{{f{AJ`}}}{{Cf{c}}}{}}{BJbBJb}{{{f{DCh}}}M`}{{{f{BLd}}}{{A`{M`n}}}}``{{{f{{An{Al}}}}{f{Db{Gb{Al}}}}}{{A`{{f{{An{Al}}}}n}}}}865{{{f{AJ`}}}{{Cf{Mb}}}}4{{{f{BLd}}}{{Cf{Mb}}}}:987{{{f{AJb}}}{{Cf{c}}}{}}61{{{f{DCj}}}M`}5``{{{CMf{c}}{Cf{CJ`}}}{{CMf{c}}}BJ`}{{{f{DbBCd}}BCd}b}{{{f{Eh}}{f{Eh}}}{{A`{Ehn}}}}{{{f{DbBCd}}{f{BCd}}}b}````{{{f{CJj}}}{{l{Kf}}}}`{{{f{C@l}}}{{A`{{l{K`}}n}}}}1`{{{f{Bd}}}BJb}{BL`BJb}{BEdBEd}{BLbBJb}{{{f{AJ`}}}{{Cf{c}}}{}}{BJbBJb}{{{f{AJ`}}}{{Cf{{Gl{cc}}}}}{}}```{{{f{DCh}}}M`}{{{f{BLd}}}{{A`{M`n}}}}``{{{f{DAl}}}{{l{Mn}}}}{{{f{CJh}}}{{l{Mn}}}}{{{f{C@l}}}{{A`{{l{Mn}}n}}}}`=```6{{{f{CJf}}}{{l{Mn}}}}21`{{{f{BFd}}}Gh}{{{f{BFd}}}d}{{{BJd{}{{Ad{c}}}}{f{Ab}}}c{}}{{BFdGh}BFd}{{BJbBJb}}{{{f{BJh}}{f{Ab}}}{{A`{Abn}}}}``{{{f{BLd}}}Fl}{{{f{CId}}}{{Cf{Fl}}}}{{{f{CA`}}}{{Cf{Fl}}}}{{{f{CAd}}}{{Cf{Fl}}}}`````{{{BNf{c}}Fl}{{BNf{c}}}BNj}`{BL`BJb}{BLbBJb}{{{f{AHh}}}{{A`{Fln}}}}{BJbBJb}{{{f{BLd}}}{{A`{Fln}}}}{{{f{BLd}}}{{f{Bd}}}}{BJbDBj}````33`{{{f{DAl}}}{{l{K`}}}}{{{f{CJh}}}{{l{K`}}}}{{{f{C@l}}}{{A`{{l{K`}}n}}}}{{{f{CJj}}}{{l{Kf}}}}{{{f{BFd}}}Gh}`{{{f{{Mh{ce}}}}{f{{Mh{ce}}}}}d{CLhA@`}BJn}{{{f{CCj}}}d}{BFd}{BJb}{{{f{Ab}}}{{A`{Abn}}}}0{{{f{BFd}}}d}{{DClFl}{{Cf{Fl}}}}{{BJbc}BJb{{B@d{BJb}}}}0{{{f{BLf}}}{{A`{Odn}}}}{{}c{}}{cCMbBLj}{cCMdBNj}2{{{f{Bd}}c}DCn{}}{c{{ALl{c}}}{}}{BEdBK`}{c{{BIl{c}}}BJ`}{cCA`{{Hl{CLn}}}}{cCAd{{Hl{CLn}}}}{c{{BNf{c}}}BNj}{{{f{{An{Od}}}}}BLf}{c{{CMf{c}}}BJ`}{c{{BLh{c}}}BLj}{c{{CMh{c}}}BNj}{{}CJl}{c{{BNl{c}}}BNj}{GhBFd}{c{{CMj{c}}}BNj}{c{{CMl{c}}}BJ`}{{BFdBFdBFd}CBb}{c{{CIn{c}}}BJ`}{{DD`{Mh{CHh}}{Mh{BCn}}{Gl{FlFl}}{Cf{{Gb{Fl}}}}{Cf{{Mh{BIn}}}}{Cf{DCf}}Fld{Cf{{Gb{Ab}}}}{Cf{{Gl{{Mh{Bd}}{Mh{Bd}}}}}}CDl}{{A`{BObn}}}}{c{{BO`{c}}}BJ`}{c{{BOd{c}}}{BNjBNj}}{CCfBIf}{c{{BKh{c}}}{}}{{BJbBJbBJb}CGd}{{}CGf}{BJbBJf}{{{f{Bd}}{Gb{Od}}{BKh{{Mh{BKf}}}}c}C@`BLl}{c{{Mh{c}}}{}}{{AG`{Gb{{Cl{Cj}}}}{Cf{Ib}}}BF`}{{EhIn}M`}{{}BCd}{{cAG`d}B@f{{B@d{Ef}}}}{e{{Mh{c}}}{}{{AAl{{f{{CKj{c}}}}}{{Ad{c}}}}}}{AG`BF`}{{{f{AJd}}FlFl}{{l{c}}}Dh}{{{f{BLd}}FlFl}Ab}{{{f{Bd}}}CBj}{{ce}{{Mh{ce}}}{}BJn}{{{f{BCd}}Fl{BAb{BA`}}Eh}{{A`{BCdn}}}}{{Gh{f{Bd}}}{{A`{Abn}}}}{EfCBj}{{AG`Fl}BF`}{{{Mh{{An{CJ`}}}}}CA`}{{{Mh{{An{CJ`}}}}}CAd}{AlCBj}{{}{{Mh{{BN`{c}}}}}{}}{c{{Mh{{BN`{e}}c}}}BJn{}}{Fl{{Mh{{An{{BN`{c}}}}}}}{}}{{Flc}{{Mh{{An{{BN`{e}}}}c}}}BJn{}}3210{{{f{DbDDb}}}Cf}{{{f{DbDAb}}}Cf}{{{f{BKb}}DDd}{{A`{{Cf{AAh}}n}}}}{{{f{DbBOh}}Fl}{{A`{{Cf{{Gb{AAh}}}}n}}}}{{{f{DbBNd}}Fl}{{A`{{Cf{{Gb{AAh}}}}n}}}}{{{f{DbBOb}}Fl}{{A`{{Cf{{Gb{AAh}}}}n}}}}{{{f{BJb}}{f{Db{BFh{{f{BJb}}}}}}}b}{{BJb{f{Db{BFh{BJb}}}}}b}{BJbBJb}0{BJlBJl}{{{f{{AHn{}{{Ch{c}}}}}}e}c{}{}}0{GhBJb}`{{}AAj}{{}A@b}`{{{f{BLd}}}Fl}{BEdBEd}7`````{{{f{Db{BO`{c}}}}}{{A`{Fln}}}BJ`}````{{{f{AI`}}}{{A`{{Gj{Gh}}n}}}}{{BK`c}BK`{{Hl{{An{BJb}}}}}}`{{BEd{f{Db{BI`{BHn}}}}{f{Db{BI`{BIb}}}}}{{A`{BHln}}}}`{{BJbc}BJb{{B@d{BJb}}}}{{{f{CJf}}}{{l{Nn}}}}{{{f{CJh}}}{{l{Nn}}}}{{{f{C@l}}}{{A`{{l{Nn}}n}}}}{{{f{C@l}}}{{A`{{l{K`}}n}}}}{{CF`c}BJb{{B@d{BJb}}}}{{CFdc}BJb{{B@d{BJb}}}}`{{BJbe}BJb{{B@d{BJb}}ADb}{{Hl{{An{c}}}}}}{{BJbe{Cf{{Gl{eEl}}}}CH`}BJb{{B@d{BJb}}ADb}{{Hl{{An{c}}}}}}{{{f{DbBCd}}{f{BCd}}}{{A`{bn}}}}```{{{f{Bd}}}BFd}{{{f{Bd}}{f{{An{{f{Bd}}}}}}{f{Bd}}}{{Kd{KbK`}}}}{{{f{Bd}}{f{{An{{f{Bd}}}}}}{f{Bd}}}{{Kd{LdKf}}}}{{{f{Bd}}{f{{An{{f{Bd}}}}}}{f{Bd}}Kh}{{Kd{KjKf}}}}``{{{f{BFd}}{f{BFd}}}{{Cf{BAj}}}}{{{f{{Mh{ce}}}}{f{{Mh{ce}}}}}{{Cf{BAj}}}{D@jA@`}BJn}`{{{f{CId}}}{{f{{An{CJ`}}}}}}{{{f{CA`}}}{{f{{An{CJ`}}}}}}{{{f{CAd}}}{{f{{An{CJ`}}}}}}``{{}BJb}{c{{DDf{{Mh{c}}}}}{}}{{ce}{{DDf{{Mh{ce}}}}}{}BJn}````{{BJbc}BJb{{B@d{BJb}}}}`{{DBj{f{Bd}}}BJb}0{{{f{AAh}}{f{AAh}}d}{{A`{{Gl{{AAd{{Gb{J`}}{Gb{A@b}}}}{AAd{{Gb{AAj}}{Gb{A@b}}}}}}n}}}}`{{{f{DCh}}}M`}{BJbBJb}{BEd{{A`{{Gl{AAhAAh}}n}}}}`{{{f{BF`}}}BF`}{{{f{{Mh{c}}}}{f{DbDDh}}}b{ALdA@`}}{{{f{{Mh{ce}}}}{f{{Mh{ce}}}}}dA@`BJn}{{{f{Bd}}BJbOj}BJb}{{BEdBJbOj}BEd}{{{f{AJb}}MbOj}{{A`{{Cf{c}}n}}}{}}{{BJbBJbOj}BJb}{{{f{DCj}}MbOj}{{A`{M`n}}}}{{{f{BLd}}MbOj}{{A`{M`n}}}}{{{f{CJf}}}{{l{Mn}}}}{{{f{CJh}}}{{l{Mn}}}}{{{f{C@l}}}{{A`{{l{Mn}}n}}}}{{{f{Dbc}}e}{{A`{{f{Dbg}}BBn}}}{}CLl{}}````{{{f{DDj}}CE`{Cf{Jj}}}Ab}{{BJbCE`{Cf{Jj}}}BJb}{{{f{Db{Mh{AFf}}}}{f{Db{An{Al}}}}}{{A`{FlBBn}}}}{{{f{Db{Mh{AFf}}}}DDl}{{A`{bBBn}}}}{{{BO`{c}}CDl}{{BO`{c}}}BJ`}{{{f{Db{Mh{AFf}}}}{f{Db{Gb{Al}}}}}{{A`{FlBBn}}}}{{{f{Db{Mh{AFf}}}}{f{DbEf}}}{{A`{FlBBn}}}}{{{f{Dbc}}}{{A`{eBBn}}}{}DDn}{{{f{Db{Mh{AFf}}}}{f{Db{An{DE`}}}}}{{A`{FlBBn}}}}{{{f{CId}}}d}{{{f{BLd}}}Ab}{{{f{CA`}}}d}{{{f{CAd}}}d}````{{ce}BJb{{Dj{AbAb}{{Ad{{A`{{Cf{Ab}}n}}}}}}IfIhADb}{{Hl{{An{BJb}}}}}}{{{f{AJf}}}Ab}0{{{BJd{}{{Ad{c}}}}{f{Ab}}}c{}}{{BJbBJb}}{{{f{BJh}}{f{Ab}}}{{A`{Abn}}}}{{{f{DbBJl}}BJl}b}{{{f{DbBCd}}{f{Bd}}}{{Cf{Eh}}}}{{{f{DbBLd}}{f{Bd}}}b}{{BEdei}BEd{{Hl{Bd}}}{{Hh{}{{Ch{c}}}}}{{Hl{Bd}}}{{Hh{}{{Ch{g}}}}}}{{{f{DbBCd}}{f{Bd}}{BAb{BA`}}}{{Cf{{BAb{BA`}}}}}}{{CM`{Gb{Ef}}}BJb}{{cBJb}BJb{{B@d{BJb}}}}{{{f{Ab}}{f{{l{En}}}}}{{A`{{l{Ah}}n}}}}{{BJbc}BJb{{B@d{BJb}}}}{{{f{Ab}}{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{{f{BNb}}{f{Bd}}{f{Bd}}}{{A`{{l{B`}}n}}}}{{BJbcc}BJb{{B@d{BJb}}}}1{{{f{BLf}}{Cf{Eh}}}{{A`{Odn}}}}{{{f{BNb}}{f{Bd}}{f{Bd}}Fl}{{A`{{l{B`}}n}}}}3{{{f{Ab}}{f{Ab}}{f{Ab}}{f{Ab}}{Cf{Eh}}}{{A`{Abn}}}}{{{f{Ab}}{f{Ab}}{f{Ab}}{Cf{Eh}}}{{A`{Abn}}}}{{BJbcc{Cf{c}}{Cf{Eh}}}BJb{{B@d{BJb}}}}{{{f{{Kd{KjKf}}}}{Cf{{f{Bd}}}}{f{{l{B`}}}}CIb}{{A`{{Kd{KjKf}}n}}}}{{{f{DbBCd}}Fl}b}{{BJb{f{{An{Gh}}}}CHb}BJb}{{{f{CLn}}}CJ`}`{{{f{AJh}}}AJh}{{{f{BLd}}}Ab}{BL`BJb}{BEdBEd}{BLbBJb}{BJbBJb}`{{BK`c}BK`{{Hl{{An{BJb}}}}}}{{{f{DAf}}{Gb{Ab}}{f{BEf}}}{{A`{{Gl{Ab{Gb{Ab}}Bn}}n}}}}{{BEdBJbcBEf}BJj{{Hl{{An{BJb}}}}}}{{BJbBEf}BJb}{{{f{AJj}}{f{Dj}}Ol}{{A`{Abn}}}}{{BJb{Mh{Dj}}{BKh{{Mh{BKf}}}}Ol}BJb}{{{f{BLd}}{f{Dj}}Ol}{{A`{Abn}}}}{{BJbFlc}BJb{{Af{{f{Db{l{Ed}}}}}{{Ad{{Cf{Mb}}}}}}IfIhDl}}{{{f{DEb}}Ol}{{A`{Abn}}}}{{BJbOl}BJb}{{{f{DEb}}{f{Ab}}CAh}{{A`{Abn}}}}{{BJbBJbCAh}BJb}32102032103{{BJbOjMbOl}BJb}2{{BJbBJbOjMbCAh}BJb}543254325432{{{f{DEd}}{f{{l{B`}}}}{Cf{{f{AMb}}}}}{{A`{DEdn}}}}{{{f{C@j}}J`}{{A`{Abn}}}}{{BJbJ`}BJb}{{{f{CBb}}Gh{Cf{{f{AMb}}}}}{{A`{Ghn}}}}0{{{f{C@j}}Nl}{{A`{Abn}}}}{{BJbNl}BJb}2``{{{f{CId}}}{{Cf{{f{DCf}}}}}}{{{f{CA`}}}{{Cf{{f{DCf}}}}}}{{{f{CAd}}}{{Cf{{f{DCf}}}}}}``````{{{f{DBh}}{l{Ah}}}{{l{Ah}}}}{{}{{BKh{{Mh{BKf}}}}}}{{BJbBJbdd{Cf{Jj}}}BJb}0`{{{f{BKb}}DDd}{{A`{AAhn}}}}{{cCAb}{{A`{BEdn}}}{{Hl{CLn}}}}{{{Mh{{An{CJ`}}}}CAb}{{A`{BEdn}}}}{{cCAf}{{A`{BEdn}}}{{Hl{CLn}}}}{{{Mh{{An{CJ`}}}}CAf}{{A`{BEdn}}}}{{DEf{f{{An{J`}}}}e}{{A`{Abn}}}Dl{{Hh{}{{Ch{{Cf{c}}}}}}}}{{{f{AJl}}c{Cf{e}}}{{A`{AJln}}}{{Hh{}{{Ch{J`}}}}}{}}{{{f{AJl}}ci}{{A`{AJln}}}{{Hh{}{{Ch{J`}}}}}{}{}{{Dj{{Cf{e}}}{{Ad{{Cf{g}}}}}}}}{{{f{DbBEd}}}{{A`{{Mh{BCd}}n}}}}{{{f{Db{CMf{c}}}}}{{A`{{Mh{BCn}}n}}}BJ`}{{{f{Db{BLh{c}}}}}{{A`{BCdn}}}BLj}{{{f{BOb}}}{{f{{Mh{BCn}}}}}}{{{f{Db{BO`{c}}}}}{{A`{{Mh{BCn}}n}}}BJ`}{{{f{BKb}}{Cf{Fl}}}{{A`{{Mh{BCd}}n}}}}{{{f{CHh}}}{{f{DEh}}}}``````{{{f{DbBEd}}{f{Db{BI`{BHn}}}}{f{Db{BI`{BIb}}}}}{{A`{{Mh{BCd}}n}}}}`{{{f{DAl}}}{{l{Mn}}}}{{{f{CJh}}}{{l{Mn}}}}{{{f{C@l}}}{{A`{{l{Mn}}n}}}}`{{{f{CJj}}}{{l{Kf}}}}`{{{f{Db{Mh{AFf}}}}DEj}{{A`{JjBBn}}}}{{BEdc}BEd{{Hl{{An{BJb}}}}}}0````{{{f{AJl}}{f{{l{Bb}}}}{Cf{c}}}{{A`{AJln}}}{}}{{{f{DbBJl}}BJld}b}{{{f{BEd}}{BI`{BHn}}{BI`{BIb}}}b}{{{f{DbBCd}}{f{Bd}}Eh}{{Cf{Eh}}}}{{{f{DbBCd}}FlEh}{{Cf{Eh}}}}{{{BO`{c}}d}{{BO`{c}}}BJ`}{{{BOd{c}}d}{{BOd{c}}}BNj}{{{CMf{c}}d}{{CMf{c}}}BJ`}{{{BLh{c}}d}{{BLh{c}}}BLj}{{{CMl{c}}d}{{CMl{c}}}BJ`}4{{CMbd}CMb}{{BJbLh}BJb}{{{f{DbBF`}}{Cf{Ib}}}b}{{{f{AJn}}Gh}{{l{c}}}Dh}{{{f{BLd}}Gh}Ab}{{BL`BJb}BJb}{{BEdc}BEd{{B@d{BJb}}}}{{BLbBJb}BJb}{{BJbBJb}BJb}{{{f{AK`}}Ghc}{{l{e}}}{}Dh}{{BEdce}BEd{{B@d{BJb}}}{{B@d{BJb}}}}{{BJbce}BJb{{B@d{BJb}}}{{B@d{BJb}}}}{{{f{DbBCd}}{f{Bd}}}{{Cf{Eh}}}}{{{f{DbBCd}}Fl}{{Cf{{Gl{{BAb{BA`}}Eh}}}}}}{{{f{BIf}}}d}{BJbBJb}{{{f{DbAC`}}}b}{{{f{DbBLd}}}b}{{BJb{Cf{Jj}}}BJb}{{BEdcCBn}{{A`{bn}}}{{Hl{CLn}}}}{{BEdcCCl}{{A`{bn}}}{{Hl{CLn}}}}{{BEdcCDb}{{A`{bn}}}{{Hl{CLn}}}}{{BEdcCEb}{{A`{bn}}}{{Hl{CLn}}}}{{{f{CIl}}}{{l{En}}}}````{{{f{BLd}}GhFl}Ab}{{BEdGhJ`}BEd}{{BLbBJbBJb}BJb}?{{{f{DbBF`}}FlFl}b}0`{{{f{AKb}}FlFl}AKb}{{{f{c}}FlFl}e{}{}}1022{{BF`FlFl}BF`}0`{{{f{AHf}}d}{{l{c}}}Dh}{{BL`El}BJb}{{BEdcFb}BEd{{BEj{{BAb{BA`}}}}}}{{BLbEl}BJb}{{BJbEl}BJb}{{BJbeFb}BJb{{B@d{BJb}}ADb}{{Hl{{An{c}}}}}}{{BEdcFb}BEd{{Hl{{An{BJb}}}}}}{{{f{AHf}}El}{{l{c}}}Dh}{{{f{BLd}}El}{{A`{Abn}}}}{{{f{{Mh{c}}}}}{{Cf{{f{ALd}}}}}{ALdA@`}}{{{f{BNb}}{f{{l{B`}}}}}{{l{Ah}}}}{{{f{BLd}}Gh}{{Gl{AbAb}}}}{{{f{BF`}}Fl}{{Gl{{Cl{Cj}}{Cl{Cj}}}}}}0{{{f{BNb}}{f{{l{B`}}}}Fl}{{A`{{l{j}}n}}}}0{{{f{{l{B`}}}}{f{{l{B`}}}}e}{{l{Ah}}}{{Cn{}{{Ch{{f{Bd}}}}}}}{{Dj{{f{Bd}}{f{Bd}}}{{Ad{c}}}}}}4{{{f{{l{B`}}}}{f{{l{B`}}}}Fled}{{A`{{l{j}}n}}}{{Cn{}{{Ch{{f{Bd}}}}}}}{{Dj{{f{Bd}}{f{Bd}}}{{Ad{c}}}}}}2{BJbBJb}`{{{f{CIl}}{f{{An{Al}}}}}{{l{Bb}}}}{{{f{CIl}}{f{{l{Aj}}}}}{{l{Bb}}}}`{{BL`Al}BJb}{{BEdAl}BEd}{{BLbAl}BJb}{{{f{AKd}}Al}{{Cf{Mb}}}}{{BJbAl}BJb}{{{f{BLd}}Al}{{Cf{Mb}}}}{{{f{DEl}}Al}M`}{{{f{BLd}}Al}{{A`{M`n}}}}{{J`J`}A@b}{BJbDEn}{{{f{BNb}}{f{Ab}}}{{A`{{l{B`}}n}}}}{{{f{{l{B`}}}}{f{Bd}}d}{{l{B`}}}}{{{f{BNb}}}{{l{En}}}}0{{{f{BNb}}}{{l{B`}}}}{{{f{BNb}}{f{Ab}}{f{Ab}}}{{A`{{l{B`}}n}}}}4``{{{f{C@l}}{f{Bd}}}{{A`{Abn}}}}`{{BJbEh}BJb}`{{{f{{l{B`}}}}{f{{l{B`}}}}}{{l{B`}}}}707070{{{f{BNb}}{f{{l{B`}}}}}{{l{B`}}}}10{{{f{{Mh{ce}}}}}FlA@`BJn}{BJbCM`}{{{BJd{}{{Ad{c}}}}{f{Ab}}}c{}}{{BJbBJb}}{{BJfBJf}}{{BJlBJl}BJl}{{{f{DbBJl}}BJl}b}{{{f{BJh}}{f{Ab}}}{{A`{Abn}}}}{{BK`c}BK`{{Hl{Bd}}}}{{DBj{f{Bd}}}BJb}{{{f{BIf}}}{{f{Bd}}}}`1{{{f{Bd}}}BJb}{BL`BJb}{BEdBEd}{BLbBJb}{{{f{AJ`}}}{{Cf{c}}}{}}{BJbBJb}{{{f{DCh}}}M`}{{{f{BLd}}}{{A`{M`n}}}}{{}{{BKh{{Mh{BKf}}}}}}>{{{f{Dbc}}i}{{A`{gBBn}}}{}{}{}{{AAl{{f{Dbe}}}{{Ad{g}}}}}}{{BEdJ`}BEd}{{BJj{Cf{Fl}}}BEd}{{BLbBJb}BJb}{{BJb{Cf{Fl}}}BJb}{{{f{AKf}}{f{c}}}{{A`{AKfn}}}A@`}{{{f{BLd}}{f{{l{En}}}}}{{A`{Abn}}}}{{{f{DF`}}{f{{An{A@b}}}}Lh}DF`}{{{f{DF`}}{f{{An{A@b}}}}}DF`}{{{f{BLd}}{f{{An{J`}}}}}{{A`{Abn}}}}{{{f{BLd}}{f{{An{J`}}}}}Ab}{{{f{AKh}}{f{c}}}AKhA@`}{{{f{BLd}}{f{{l{En}}}}}Ab}{{{f{DbBF`}}}{{Cf{Ib}}}}{{BJbBJbBJb}BJb}{{CEnc}CF`{{B@d{BJb}}}}{{CFbc}CFd{{B@d{BJb}}}}`{{BJbBJbBFdCAl}BJb}```{{{f{C@l}}Kh}{{A`{{l{Kf}}n}}}}{BEd{{A`{DFbn}}}}{CEl{{A`{DFbn}}}}1{{{f{CHf}}}{{Cf{In}}}}{{BLbFl}BJb}{{{f{BCd}}AOh}BCn}{{{f{BF`}}}{{Cl{Cj}}}}{{{f{AKj}}}{{Gb{{f{{An{Al}}}}}}}}{{{f{BEd}}d}{{A`{Efn}}}}{{{f{DFd}}{Cf{{f{Bd}}}}d}{{A`{AAhn}}}}{{{f{BIj}}{Cf{{f{Bd}}}}d}{{A`{AAhn}}}}{{{f{BJb}}{f{BCd}}D@l}{{A`{Odn}}}}{{{f{BNb}}{f{{l{En}}}}d}{{A`{{l{Kf}}n}}}}{BL`BJb}{{{f{BNb}}}{{l{B`}}}}{DBjBJb}{{{f{AAj}}}{{Cf{J`}}}}{{{f{c}}}e{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{BJbBJb}{{{f{BLf}}}{{A`{Odn}}}}{{{f{C@l}}{f{Bd}}}{{A`{Abn}}}}{{{f{c}}}Ef{}}000000000000{{{f{DbBCd}}{f{BCd}}}{{A`{dn}}}}`887{{{f{CCl}}c}{{BNl{c}}}BNj}{{{f{CEb}}c}{{BOd{c}}}BNj}{{{f{DbBJl}}BJl}b}``{{BEdJ`cFb}BEd{{Hl{{An{BJb}}}}}}{{{f{BF`}}{f{BF`}}}Ib}{{{f{BF`}}f}Ib}10{{{ABd{}{{AAn{c}}{AB`{e}}{ABb{g}}}}{ABd{}{{AAn{c}}{AB`{e}}{ABb{g}}}}}g{}{}{}}{{{ABd{}{{AAn{c}}{AB`{e}}{ABb{g}}}}c}g{}{}{}}{{c{ABd{}{{AAn{c}}{AB`{e}}{ABb{g}}}}}g{}{}{}}{{{f{DFf}}{Cf{{f{AMb}}}}{f{{l{B`}}}}}{{A`{DFfn}}}}{{{f{BFd}}Gh{Cf{{f{AMb}}}}ceg}{{A`{Ghn}}}{{Dj{Gh}{{Ad{Gh}}}}}{{Dj{Gh}{{Ad{AM`}}}}}{{Dj{AM`}{{Ad{Gh}}}}}}{{{f{BFd}}Gh{Cf{{f{AMb}}}}}{{A`{Ghn}}}}{{{f{CBb}}Gh{Cf{{f{AMb}}}}}{{A`{Ghn}}}}10`10{g{{A`{AMje}}}{}{}{{Hh{}{{Ch{{A`{ce}}}}}}}}{e{{A`{BF`c}}}{}{{Hh{}{{Ch{{A`{bc}}}}}}}}{e{{A`{BF`c}}}{}{{Hh{}{{Ch{{A`{{Cf{b}}c}}}}}}}}2{{AG`g}{{A`{AMle}}}{}{}{{Hh{}{{Ch{{A`{ce}}}}}}}}0{{AG`e}{{A`{BF`c}}}{}{{Hh{}{{Ch{{A`{{Cf{b}}c}}}}}}}}{{AG`e}{{A`{BF`c}}}{}{{Hh{}{{Ch{{A`{bc}}}}}}}}{AOn{{A`{eg}}}{}{{AMj{c}}AL`}{}}0{{AOnAG`}{{A`{eg}}}{}{{AMl{c}}AL`}{}}0{{ADj{f{Bd}}}{{A`{{l{c}}e}}}Dh{}}{{ADl{f{{l{c}}}}}{{A`{{l{c}}e}}}Dh{}}10{{ADl{f{Bd}}Eh}{{A`{{l{c}}e}}}Dh{}}0{c{{A`{e}}}{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{In{{A`{CHfn}}}}1{{{Mh{{An{c}}e}}}{{A`{{Mh{{A@l{c}}e}}}}}{}BJn}2222222222222222{DBb{{A`{CHhBBj}}}}{{{f{BCd}}{f{Bd}}}{{A`{{f{Eh}}n}}}}{{{f{BCd}}Fl}{{A`{{Gl{{f{{BAb{BA`}}}}{f{Eh}}}}n}}}}{{{f{BCd}}{f{Bd}}}{{A`{Odn}}}}{{{f{BCd}}{f{Bd}}}{{A`{{Gl{Fl{f{{BAb{BA`}}}}{f{Eh}}}}n}}}}{{{f{DbBCd}}{f{Bd}}}{{A`{{f{DbEh}}n}}}}{{{f{D@n}}{f{Bd}}}{{A`{Fln}}}}999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999{{CBd{Cf{CJ`}}}{{A`{{BIl{AFf}}n}}}}{{{f{BLf}}c}{{A`{Odn}}}{{AAl{{f{Eh}}}{{Ad{{A`{Ehn}}}}}}}}{{{f{BLf}}c}{{A`{Odn}}}{{AAl{{f{{An{{f{Eh}}}}}}}{{Ad{{A`{Ehn}}}}}}}}{{BJbc}{{A`{BJbn}}}{{Af{BJb}{{Ad{{A`{BJbn}}}}}}}}{{{f{BLf}}c}{{A`{Odn}}}{{AAl{{f{Od}}}{{Ad{{A`{Odn}}}}}}}}{{DClFl}{{A`{Fln}}}}{Al{{A`{CEfn}}}}{J`{{A`{CEhn}}}}{Nl{{A`{CEjn}}}}{c{{A`{{Mh{c}}DFh}}}{}}{{AG`{Gb{{Cl{Cj}}}}{Cf{Ib}}}{{A`{BF`n}}}}{{ce}{{A`{{Mh{ce}}DFh}}}{}BJn}{{}{{A`{{Mh{{BN`{c}}}}DFh}}}{}}{c{{A`{{Mh{{BN`{e}}c}}DFh}}}BJn{}}10`{c{{A`{{DDf{{Mh{c}}}}DFh}}}{}}{{ce}{{A`{{DDf{{Mh{ce}}}}DFh}}}{}BJn}{{{f{BCn}}{f{{An{Fl}}}}}{{A`{BCnn}}}}{{{f{BLl}}{f{Db{Gb{Al}}}}}{{A`{bn}}}}{{{Mh{ce}}}{{A`{c{Mh{ce}}}}}{}BJn}{{{f{c}}}AAf{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{}{{f{Bd}}}}`{{BJlBJl}BJl}{{{f{AHh}}}{{A`{AHhn}}}}{BL`BJb}{{BEd{Cf{{Gb{Ef}}}}BCj}BEd}{BLbBJb}{BJbBJb}{{{f{BLd}}}{{A`{Abn}}}}4321{{BEde}BEd{{Hl{Bd}}}{{Hh{}{{Ch{c}}}}}}{{BEdBFb}BEd}{{{Mh{{AFl{c}}}}}{{A`{cb}}}If}{{{Mh{ce}}}cADbBJn}{{{f{DbM`}}In}b}{{{f{DbCBd}}{f{DFj}}}b}7{{{f{DFl}}c{f{Bd}}BFd}{{A`{AAhn}}}{{BEj{Ef}}}}0{{{BO`{c}}d}{{BO`{c}}}BJ`}```{{BK`CCj}BK`}`{{{f{BF`}}}{{Cf{{f{Ib}}}}}}0{{{f{{AL`{}{{AN`{c}}{ANb{e}}{ANd{g}}}}}}Fl}cADb{ANf{ANh{c}}}{{Gf{}{{Ch{c}}}}IlIfIh}}{{{f{M`}}}{{f{In}}}}{{{f{CLd}}ddEfd}{{A`{AAhn}}}}{{BJbddEfd}BJb}`3{{{f{BF`}}}{{f{{An{{Cl{Cj}}}}}}}}{{{f{{AL`{}{{AN`{c}}{ANb{e}}{ANd{g}}}}}}}gADb{ANf{ANh{c}}}{{Gf{}{{Ch{c}}}}IlIfIh}}{{{f{BF`}}}DBd}{{BL`Al}BJb}{{BEdAl}BEd}{{BLbAl}BJb}{{{f{AKd}}Al}{{Cf{Mb}}}}{{BJbAl}BJb}{{{f{BLd}}Al}{{Cf{Mb}}}}{{{f{DEl}}Al}M`}{{{f{BLd}}Al}{{A`{M`n}}}}`{{{f{DFn}}A@f{f{Db{Gb{Jj}}}}}{{A`{bn}}}}{{{f{DFn}}A@f{f{Db{An{Jj}}}}}{{A`{bn}}}}`{{{f{{Mh{{AFl{c}}}}}}g}{{A`{eb}}}If{}{{AAl{{f{c}}}{{Ad{e}}}}}}{ce{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{{Mh{ce}}}}}FlA@`BJn}{{{f{CJf}}}{{l{Mn}}}}{{{f{CJh}}}{{l{Mn}}}}{{{f{C@l}}}{{A`{{l{Mn}}n}}}}10{{{f{CB`}}}{{Cf{J`}}}}{{{f{BFd}}}Gh}`{{{f{BFd}}}d}`{cCEn{{B@d{BJb}}}}{{CF`c}CFb{{B@d{BJb}}}}{{CFdc}CFb{{B@d{BJb}}}}```{{BK`BEd}BK`}{{CGdBJb}CGd}{{CAd{Cf{{DAn{Fl}}}}}CAd}{{{BNf{c}}{DAn{Fl}}}{{BNf{c}}}BNj}{{{CMl{c}}{DAn{Fl}}}{{CMl{c}}}BJ`}{{CA`d}CA`}{Flc{}}0{FlBCd}{{{CIn{c}}{Cf{{DAn{Fl}}}}}{{CIn{c}}}BJ`}{{CBdFl}CBd}{{CA`{Cf{CIf}}}CA`}{{CAd{Cf{CIf}}}CAd}{{BEdd}BEd}{{BIfCCb}BIf}{{BEdBJb}BEd}{{{f{DbBCd}}{BAb{BA`}}Eh}{{Cf{Eh}}}}{{BEdc}BEd{{Hl{{An{BJb}}}}}}{{{CMf{c}}{Cf{{Gb{Ef}}}}}{{CMf{c}}}BJ`}{{{BLh{c}}{Cf{{Gb{Ef}}}}}{{BLh{c}}}BLj}{{{BO`{c}}{Cf{{Gb{Ef}}}}}{{BO`{c}}}BJ`}{{CBd{Cf{{Mh{{An{Ef}}}}}}}CBd}`4{{CA`{Cf{{f{Bd}}}}}CA`}{{CBf{Cf{c}}}CBf{{B@d{CBj}}}}{{{CMh{c}}AOh}{{CMh{c}}}{}}{{{BNl{c}}AOh}{{BNl{c}}}BNj}{{{CMh{c}}{Cf{CCn}}}{{CMh{c}}}{}}{{CJl{Cf{CCn}}}CJl}{{{BNl{c}}{Cf{CCn}}}{{BNl{c}}}BNj}{{{BOd{c}}CEd}{{BOd{c}}}BNj}{{BEdc}BEd{{Hl{{An{BEd}}}}}}{{{BOd{c}}{Cf{Fl}}}{{BOd{c}}}BNj}{{{BNf{c}}{Cf{Ef}}}{{BNf{c}}}BNj}0{{CGdBJb}CGd}{{CGfBJb}CGf}{{CA`d}CA`}{{CBfd}CBf}{{{f{BLf}}Eh}{{A`{Odn}}}}{{CA`{Cf{{Mh{BCd}}}}}CA`}{{CBd{Cf{{Mh{{Gb{Eh}}}}}}}CBd}{{CA`CBh}CA`}{{CBfCBh}CBf}{{CA`Al}CA`}{{CBfAl}CBf}{{CJlCJ`}CJl}{{CM`{Gb{BJb}}}{{A`{BJbn}}}}{{{BNf{c}}{Cf{Fl}}}{{BNf{c}}}BNj}{{{BNf{c}}{Cf{d}}}{{BNf{c}}}BNj}{{CGfBJbBJbBJb}CGf}=={{CBdd}CBd}{{{CMf{c}}{Cf{{Gb{Ab}}}}}{{CMf{c}}}BJ`}{{{BO`{c}}{Cf{{Gb{Ab}}}}}{{BO`{c}}}BJ`}{{CGdBJbBJbBJb}CGd}4{{CGdBJb}CGd}{{CGfBJb}CGf}{{CA`d}CA`}{{CAdd}CAd}{{{CMl{c}}d}{{CMl{c}}}BJ`}{{{CIn{c}}d}{{CIn{c}}}BJ`}9{{{CMf{c}}{Cf{{Gl{{Mh{Bd}}{Mh{Bd}}}}}}}{{CMf{c}}}BJ`}{{{BO`{c}}{Cf{{Gl{{Mh{Bd}}{Mh{Bd}}}}}}}{{BO`{c}}}BJ`}{{CA`{Cf{{Mh{Bd}}}}}CA`}{{CAd{Cf{{Mh{Bd}}}}}CAd}{{CA`{Cf{Fl}}}CA`}{{CAd{Cf{{DAn{Fl}}}}}CAd}{{CBd{Cf{Fl}}}CBd}{{{CMj{c}}DG`}{{CMj{c}}}BNj}{{{CMl{c}}DG`}{{CMl{c}}}BJ`}{{{BNf{c}}Ef}{{BNf{c}}}BNj}={{CBdd}CBd}{{B@f{DGb{EfEf}}}B@f}{{BCn{DGb{EfEf}}}BCn}{{CGdBJb}CGd}{{CGfBJb}CGf}010{{CA`d}CA`}{{CBfd}CBf}3{{CIdc}CId{{B@d{{Cf{Fl}}}}}}{{CA`c}CA`{{B@d{{Cf{Fl}}}}}}>{{CAdc}CAd{{B@d{{Cf{Fl}}}}}}{{CAd{Cf{Fl}}}CAd}{{{CMf{c}}{Cf{Fl}}}{{CMf{c}}}BJ`}{{{BLh{c}}{Cf{Fl}}}{{BLh{c}}}BLj}{{{CIn{c}}{Cf{Fl}}}{{CIn{c}}}BJ`}{{CBd{Cf{Fl}}}CBd}10:{{BEdd}BEd}{{{BNf{c}}Ef}{{BNf{c}}}BNj}{{CA`{Cf{CBl}}}CA`}{{CBf{Cf{CBl}}}CBf}{{BEdBJl}BEd}{{CBdCBf}CBd}{{{CIn{c}}{Cf{e}}}{{CIn{c}}}BJ`{{B@d{CJ`}}}}{{CBd{Cf{c}}}CBd{{B@d{CJ`}}}}{{CId{Mh{{An{CJ`}}}}}CId}{{CA`{Mh{{An{CJ`}}}}}CA`}{{CAd{Mh{{An{CJ`}}}}}CAd}{{{CIn{c}}{Cf{{Mh{BIn}}}}}{{CIn{c}}}BJ`}{{{BO`{c}}{Cf{{Mh{BIn}}}}}{{BO`{c}}}BJ`}<{{{CMf{c}}{Cf{{Gb{Fl}}}}}{{CMf{c}}}BJ`}{{{BLh{c}}{Cf{{Gb{Fl}}}}}{{BLh{c}}}BLj}{{{CMl{c}}{Cf{{Gb{Ef}}}}}{{CMl{c}}}BJ`}{{{CIn{c}}{Cf{{Mh{{An{Ef}}}}}}}{{CIn{c}}}BJ`}{{{BO`{c}}{Cf{{Gb{Fl}}}}}{{BO`{c}}}BJ`}{{CBd{Cf{{Mh{{Gb{Fl}}}}}}}CBd}{{BEdd}BEd}{{CA`{Cf{Al}}}CA`}{{{BNf{c}}Al}{{BNf{c}}}BNj}{{CBf{Cf{Al}}}CBf}{{{BNf{c}}CCd}{{BNf{c}}}BNj}{{CA`d}CA`}{{CBdd}CBd}{{CIdd}CId}2{{CAdd}CAd}{{{CIn{c}}d}{{CIn{c}}}BJ`}39{{{BOd{c}}{Cf{Fl}}}{{BOd{c}}}BNj}{{CIdc}CId{{B@d{{Cf{DCf}}}}}}{{BEd{f{Bd}}{Cf{J`}}}BEd}{{CA`c}CA`{{B@d{{Cf{DCf}}}}}}{{CA`{Cf{DCf}}}CA`}{{CAdc}CAd{{B@d{{Cf{DCf}}}}}}{{CAd{Cf{DCf}}}CAd}{{{CMf{c}}{Cf{DCf}}}{{CMf{c}}}BJ`}{{{BLh{c}}{Cf{DCf}}}{{BLh{c}}}BLj}{{{CIn{c}}{Cf{{f{DbDCf}}}}}{{CIn{c}}}BJ`}{{{BO`{c}}{Cf{DCf}}}{{BO`{c}}}BJ`}{{CBd{Cf{DCf}}}CBd}{{{f{BLf}}}{{A`{Odn}}}}{{CBdFl}CBd}{{CA`{Cf{{Mh{BCd}}}}}CA`}{{CAd{Cf{{Mh{BCd}}}}}CAd}{{{CMl{c}}{Mh{BCd}}}{{CMl{c}}}BJ`}{{{CIn{c}}{Mh{BCd}}}{{CIn{c}}}BJ`}{{CBd{Cf{{Mh{BCd}}}}}CBd}{{CA`c}{{A`{CA`n}}}{{Dj{BCd}{{Ad{{A`{BCdn}}}}}}}}4{{{CMl{c}}{f{BCd}}}{{CMl{c}}}BJ`}{{{CIn{c}}{f{BCd}}}{{CIn{c}}}BJ`}3{{CGdBJb}CGd}{{CGfBJb}CGf}{{CA`Al}CA`}{{{BNf{c}}Al}{{BNf{c}}}BNj}{{CBfAl}CBf}{{BEdd}BEd}{{CA`Fl}CA`}?0?{{{BO`{c}}{Cf{{Gl{FlFl}}}}}{{BO`{c}}}BJ`}2{{{BOd{c}}CHd}{{BOd{c}}}BNj}3{{BIf{Cf{Ef}}}BIf}{{{BNf{c}}{Cf{Ef}}}{{BNf{c}}}BNj}{{CGdKh}CGd}{{CGd{Cf{Ef}}}CGd}{{CA`d}CA`}{{CBfd}CBf}109{{{f{BF`}}{Cf{Ib}}}{{Cl{Cj}}}}{{BF`{Cf{Ib}}}BF`}{{{AL`{}{{AN`{c}}{ANb{e}}{ANd{g}}}}{Cf{Ib}}}{{AL`{}{{AN`{c}}{ANb{e}}{ANd{g}}}}}ADb{ANf{ANh{c}}}{{Gf{}{{Ch{c}}}}IlIfIh}}1{{CGfBJb}CGf}{{CGdBJb}CGd}{BEdBEd}{{{ABd{}{{AAn{c}}{AB`{e}}{ABb{g}}}}}e{}{}{}}{{{ABd{}{{AAn{c}}{AB`{e}}{ABb{g}}}}{ABd{}{{AAn{c}}{AB`{e}}{ABb{g}}}}}e{}{}{}}{{{ABd{}{{AAn{c}}{AB`{e}}{ABb{g}}}}c}e{}{}{}}10{{c{ABd{}{{AAn{c}}{AB`{e}}{ABb{g}}}}}e{}{}{}}210213210210{{{f{Db{Mh{AFf}}}}{f{{An{Al}}}}}{{A`{FlBBn}}}}{{{f{CCl}}AAhc}{{A`{bn}}}BNj}{{{f{CEb}}AAhc}{{A`{bn}}}BNj}{{{f{DbAAh}}{f{CLn}}{f{{An{c}}}}{f{e}}Fl}{{A`{bn}}}{{Hl{Bd}}}{DGdIfIh}}{{{f{Dbc}}e}{{A`{FlBBn}}}{}DDn}{{{f{Db{Mh{AFf}}}}{f{{An{DGf}}}}}{{A`{FlBBn}}}}{{BJbc}BJb{{B@d{BJb}}}}{{{f{CJf}}}{{l{K`}}}}{{{f{CJh}}}{{l{K`}}}}{{{f{C@l}}}{{A`{{l{K`}}n}}}}``{{{f{AKl}}{f{{l{Bb}}}}{f{{l{c}}}}}{{A`{{l{c}}n}}}Dh}`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{BFf}}c}Ab{{Dj{{Gl{J`{f{{BFh{J`}}}}}}}{{Ad{Cf}}}}IfIh}}{{{f{BFf}}c}Ab{{Dj{{Gl{J`{f{{BFh{J`}}}}}}}{{Ad{}}}}IfIh}}{{{f{{An{{A@l{J`}}}}}}c}Ab{{Dj{{A@l{J`}}}{{Ad{Cf}}}}IfIh}}{{{f{{An{{A@l{J`}}}}}}c}Ab{{Dj{{A@l{J`}}}{{Ad{}}}}IfIh}}{{{f{{An{c}}}}e{Cf{{Mh{AGb}}}}}{{ALh{c}}}{BGnBH`}{{Cn{}{{Ch{{Gl{J`J`}}}}}}Il}}{{{f{{An{c}}}}{f{Ib}}e{Cf{{Mh{AGb}}}}}{{ALh{c}}}{BGnBH`}{{Cn{}{{Ch{{Gl{J`J`}}}}}}Il}}{{{f{{l{c}}}}J`J`}{{l{c}}}Dh}{{{f{{Gb{{A@l{J`}}}}}}{f{{An{{Cl{Cj}}}}}}}d}{{{f{BHb}}{f{Bn}}}Ab}{{BHdBHd}BHd}0``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}DhDh{{Dj{ff}{{Ad{}}}}}{{Dj{f}{{Ad{}}}}}{{Dj{f}{{Ad{}}}}}Dh}{{{l{c}}{l{e}}gik}{{l{m}}}DhDh{{Dj{}{{Ad{}}}}}{{Dj{}{{Ad{}}}}}{{Dj{}{{Ad{}}}}}Dh}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DhDhCj{{Af{ff}{{Ad{g}}}}}{{Dh{}{{Hf{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}DhDh{{AKn{CfCf}}}Dh}{{{f{{l{c}}}}{f{{l{e}}}}g}bDhDh{{Af{CfCf}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{B`}}}DhDh{{Af{{f{DbEf}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DhDh{}{{Af{}{{Ad{g}}}}}Dh}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Bd}}}{{l{k}}}DhDh{CjAL`}{{Af{ff}{{Ad{g}}}}}{{Dh{}{{Hf{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Bd}}}{{l{k}}}DhDhCj{{Af{ff}{{Ad{g}}}}}{{Dh{}{{Hf{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}DhDhCj{{Af{}{{Ad{g}}}}}{{Dh{}{{Hf{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{A`{Abn}}}DhDh{{Af{ff}{{Ad{{Cl{Cj}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}DhDh{{Af{ff}{{Ad{{Cl{Cj}}}}}}}}85{{{f{{l{c}}}}{f{{l{e}}}}k}{{A`{{l{m}}i}}}DhDh{}{}{{Af{CfCf}{{Ad{{A`{{Cf{g}}i}}}}}}}Dh}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}DhDhDh{{ALb{CfCfCf}}}Dh}{{{f{{l{c}}}}{f{{l{e}}}}k}{{A`{{l{m}}i}}}DhDhCjALd{{Af{ff}{{Ad{{A`{gi}}}}}}}{{Dh{}{{Hf{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}k{f{Bd}}}{{A`{{l{m}}i}}}DhDhCjALd{{Af{ff}{{Ad{{A`{gi}}}}}}}{{Dh{}{{Hf{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{A`{{l{c}}g}}}DhDhALd{{Af{ff}{{Ad{{A`{{Cl{Cj}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{A`{{l{o}}k}}}DhDhDh{}{}{{Af{CfCfCf}{{Ad{{A`{{Cf{i}}k}}}}}}}Dh}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dh{}{}{{Af{Cf}{{Ad{{A`{{Cf{e}}g}}}}}}}Dh}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dh{}{}{{Af{}{{Ad{{A`{eg}}}}}}}Dh}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dh{CjAL`}ALd{{Af{f}{{Ad{{A`{eg}}}}}}}{{Dh{}{{Hf{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Dh{{ALf{Cf}}}Dh}{{{f{{l{c}}}}e}{{l{g}}}DhALfDh}{{{f{{l{c}}}}g}{{l{i}}}DhCj{{Af{f}{{Ad{e}}}}}{{Dh{}{{Hf{e}}}}}}{{{l{c}}g}{{l{i}}}DhCj{{Af{}{{Ad{e}}}}}{{Dh{}{{Hf{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Dh{CjAL`}{{Af{f}{{Ad{e}}}}}{{Dh{}{{Hf{e}}}}}}0``{{{f{DGh}}}{{l{En}}}}0{{{f{DGh}}{f{{l{Kf}}}}d}{{A`{Abn}}}}{{{f{DGh}}{f{{l{B`}}}}d}{{A`{Abn}}}}{{{f{DGh}}}Ab}{{{f{DGh}}}{{A`{Abn}}}}1{{{f{DGh}}}{{A`{{l{En}}n}}}}{{{f{DGh}}}{{l{C`}}}}{{{f{DGh}}{f{Ab}}}{{A`{Abn}}}}{{{f{DGh}}El}{{A`{{l{C`}}n}}}}{{{f{DGh}}Al}{{A`{Abn}}}}5{{{f{DGh}}}{{A`{{l{Ah}}n}}}}01{{{f{DGj}}}{{f{{l{C`}}}}}}`{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{BOjBJb}BJb}{Fl{{f{c}}}{}}{Fl{{f{Dbc}}}{}}{Flb}3{cc{}}{{}Fl}{ce{}{}}{BOjBJb}7{c{{A`{e}}}{}{}}0{{{f{c}}}AAf{}}3`````````````````````{{{f{DbDGl}}{f{{An{Al}}}}ddd}{{A`{bn}}}}{{{f{DbDGl}}d}b}====<<<<::::99998888{{{f{DGl}}}Eh}88887777{{{f{{An{Fl}}}}Fl{f{BCd}}{Cf{Al}}CBhd}{{A`{{Gb{DGl}}n}}}}7777{DGl{{A`{Abn}}}}6666666655558888```````````{{{f{BM`}}{Cf{{f{Bd}}}}d}{{A`{{Kd{KbK`}}n}}}}{{{f{BM`}}{Cf{{f{Bd}}}}}{{A`{{Kd{KbK`}}n}}}}{{{f{BM`}}{Cf{{f{Bd}}}}Khdd{Cf{{f{Ef}}}}{f{{l{B`}}}}}{{A`{{Kd{KjKf}}n}}}}{{{f{BM`}}{Cf{{f{Bd}}}}Khd{Cf{{f{Ef}}}}{f{{l{B`}}}}}{{A`{{Kd{KjKf}}n}}}}{{{f{BM`}}{Cf{{f{Bd}}}}d}{{A`{{Kd{LdKf}}n}}}}`{{{f{CJf}}}{{l{Mn}}}}{{{f{CJh}}}{{l{Mn}}}}{{{f{CJj}}}{{l{Kf}}}}`{{{f{DAl}}}{{l{Mn}}}}21{{{f{CJf}}}{{l{Bb}}}}{{{f{CJh}}}{{l{Bb}}}}{{{f{CJf}}}{{l{K`}}}}{{{f{CJh}}}{{l{K`}}}}55`46576{{{f{DAl}}}{{l{K`}}}}16{{{f{CJf}}}{{l{Nn}}}}{{{f{CJh}}}{{l{Nn}}}}{{{f{Bd}}{f{{An{{f{Bd}}}}}}{f{Bd}}}{{Kd{KbK`}}}}{{{f{Bd}}{f{{An{{f{Bd}}}}}}{f{Bd}}}{{Kd{LdKf}}}}{{{f{Bd}}{f{{An{{f{Bd}}}}}}{f{Bd}}Kh}{{Kd{KjKf}}}}=<{{{f{DEb}}Ol}{{A`{Abn}}}}{{{f{DEb}}{f{Ab}}CAh}{{A`{Abn}}}}101010101010<>=`?>>`98````````{{{f{c}}h}b{}}{{{f{BM`}}{Cf{{f{Bd}}}}d}{{A`{{Kd{KbK`}}n}}}}{{{f{BM`}}{Cf{{f{Bd}}}}}{{A`{{Kd{KbK`}}n}}}}{{{f{BM`}}{Cf{{f{Bd}}}}Khdd{Cf{{f{Ef}}}}{f{{l{B`}}}}}{{A`{{Kd{KjKf}}n}}}}{{{f{BM`}}{Cf{{f{Bd}}}}Khd{Cf{{f{Ef}}}}{f{{l{B`}}}}}{{A`{{Kd{KjKf}}n}}}}{{{f{DGn}}}{{f{{l{B`}}}}}}{{{f{BM`}}{Cf{{f{Bd}}}}d}{{A`{{Kd{LdKf}}n}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{{f{DH`}}}DH`}{{{f{c}}{f{Dbe}}}b{}{}}{{{f{c}}}b{}}0{Fl{{f{c}}}{}}{Fl{{f{Dbc}}}{}}{Flb}{{{f{DH`}}{f{DH`}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{DH`}}{f{DbHb}}}{{A`{bHd}}}}{cc{}}{{{f{DH`}}{f{Dbc}}}bADh}`{{}Fl}{ce{}{}}{{{f{DH`}}{f{Bd}}}d}{{{f{c}}}e{}{}}{c{{A`{e}}}{}{}}0{{{f{c}}}AAf{}}4````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{{f{{DHb{c}}}}}{{DHb{c}}}{ADbBf}}{{{f{c}}{f{Dbe}}}b{}{}}{{{f{c}}}b{}}{Fl{{f{c}}}{}}{Fl{{f{Dbc}}}{}}{Flb}{cc{}}{{{f{Bd}}}{{Cf{DH`}}}}{{}Fl}{ce{}{}}`{{{f{Db{DHb{c}}}}{f{Bd}}}CfBf}{{{f{DbDHd}}{f{{An{Al}}}}{Cf{Kh}}}{{Cf{c}}}{}}{{{f{Db{DHb{K`}}}}{f{{An{Al}}}}{Cf{Kh}}}{{Cf{Nl}}}}{{{f{Db{DHb{Kf}}}}{f{{An{Al}}}}{Cf{Kh}}}{{Cf{Gh}}}}`{{{f{c}}}e{}{}}{c{{A`{e}}}{}{}}{{c{Cf{Kh}}}{{A`{{DHh{}{{DHf{e}}}}n}}}{}{}}{{DH`{Cf{Kh}}}{{A`{{DHb{Kf}}n}}}}{{DH`{Cf{Kh}}}{{A`{{DHb{K`}}n}}}}3{{{f{c}}}AAf{}}:````````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}0{{{f{Dbc}}}{{f{Dbe}}}{}{}}0{{{f{CIf}}}CIf}{{{f{c}}{f{Dbe}}}b{}{}}{{{f{c}}}b{}}{{}CIf}{Fl{{f{c}}}{}}0{Fl{{f{Dbc}}}{}}0{Flb}0{{{f{CIf}}{f{CIf}}}d}{{{f{DHj}}{f{DHj}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{CIf}}{f{DbHb}}}{{A`{bHd}}}}{cc{}}0{{{f{Bd}}}{{A`{DHj}}}}{{{f{Bd}}g}{{A`{CIfn}}}{{Hl{Bd}}}{{B@d{Ef}}}{{Hh{}{{Ch{{Gl{ce}}}}}}}}{{{f{CIf}}{f{Dbc}}}bADh}{{}Fl}0{ce{}{}}0``{{{f{c}}}e{}{}}{c{{A`{e}}}{}{}}000{{{f{c}}}AAf{}}033{{CIfFl}CIf}`````````{{{f{{An{Al}}}}}d}```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{eAMj{}{{Hh{}{{Ch{c}}}}}}0{{AG`e}AMl{}{{Hh{}{{Ch{c}}}}}}0{{{f{AMn}}}{{f{Eh}}}}{{{f{{AL`{}{{AN`{c}}{ANb{e}}{ANd{g}}}}}}}{{Cf{{f{{An{c}}}}}}}ADb{ANf{ANh{c}}}{{Gf{}{{Ch{c}}}}IlIfIh}}{{{f{AMf}}{f{AMf}}c}{{A`{AMfn}}}ANn}{{{f{AO`}}{f{Eh}}}{{A`{Abn}}}}{{{f{AO`}}{f{Eh}}Ff}{{A`{Abn}}}}`{AOne{}{{AMj{c}}AL`}}0{{AOnAG`}e{}{{AMl{c}}AL`}}0{{{ANj{Bd}}}Eh}{{{f{AO`}}}{{f{Eh}}}}`{{ANn{f{{l{En}}}}{f{{l{En}}}}}{{A`{{l{En}}n}}}}{{{Gb{c}}AG`}{{AL`{}{{AN`{c}}{ANb{e}}{ANd{g}}}}}ADb{ANf{ANh{c}}}{{Gf{}{{Ch{c}}}}IlIfIh}}{{{Gb{c}}AG`}{{AL`{}{{AN`{e}}{ANb{c}}{ANd{g}}}}}{ANf{ANh{e}}}ADb{{Gf{}{{Ch{e}}}}IlIfIh}}{{FlcAG`}{{AL`{}{{AN`{c}}{ANb{e}}{ANd{g}}}}}ADb{ANf{ANh{c}}}{{Gf{}{{Ch{c}}}}IlIfIh}}{{FlAG`}{{AL`{}{{AN`{c}}{ANb{e}}{ANd{g}}}}}ADb{ANf{ANh{c}}}{{Gf{}{{Ch{c}}}}IlIfIh}}{{{f{{AL`{}{{AN`{c}}{ANb{e}}{ANd{g}}}}}}Fl}{{Cf{c}}}ADb{ANf{ANh{c}}}{{Gf{}{{Ch{c}}}}IlIfIh}}{{{f{AO`}}Fl}{{A`{Inn}}}}{{{f{AO`}}Fl}In}{{}Eh}{{{f{BAd}}Fl}In}4{{BAfEh}{{A`{M`n}}}}{{{f{{AL`{}{{AN`{c}}{ANb{e}}{ANd{g}}}}}}}{{AGh{cgAGf}}}ADb{ANf{ANh{c}}}{{Gf{}{{Ch{c}}}}IlIfIh}}{{{f{{AL`{}{{AN`{c}}{ANb{e}}{ANd{g}}}}}}}{{Cf{c}}}ADb{ANf{ANh{c}}}{{Gf{}{{Ch{c}}}}IlIfIh}}{{{f{AMf}}{f{AMf}}}{{A`{{Gl{AMfAMf}}n}}}}{{{l{Ah}}{l{Ah}}}{{A`{{Gl{{l{Ah}}{l{Ah}}}}n}}}}{{{f{Eh}}{f{Eh}}}{{A`{Ehn}}}}`{{}c{}}0{g{{A`{AMje}}}{}{}{{Hh{}{{Ch{{A`{ce}}}}}}}}0{{AG`g}{{A`{AMle}}}{}{}{{Hh{}{{Ch{{A`{ce}}}}}}}}0{AOn{{A`{eg}}}{}{{AMj{c}}AL`}{}}0{{AOnAG`}{{A`{eg}}}{}{{AMl{c}}AL`}{}}0{{{f{{AL`{}{{AN`{c}}{ANb{e}}{ANd{g}}}}}}Fl}cADb{ANf{ANh{c}}}{{Gf{}{{Ch{c}}}}IlIfIh}}0{{{f{{AL`{}{{AN`{c}}{ANb{e}}{ANd{g}}}}}}}gADb{ANf{ANh{c}}}{{Gf{}{{Ch{c}}}}IlIfIh}}{Flc{}}0{{{AL`{}{{AN`{c}}{ANb{e}}{ANd{g}}}}{Cf{Ib}}}{{AL`{}{{AN`{c}}{ANb{e}}{ANd{g}}}}}ADb{ANf{ANh{c}}}{{Gf{}{{Ch{c}}}}IlIfIh}}```````````{{{f{AMf}}{f{AMf}}c}{{A`{AMfn}}}ANn}{{ANn{f{{l{En}}}}{f{{l{En}}}}}{{A`{{l{En}}n}}}}=<`````````{{}b}0{{}d}{{{f{{Kd{KjKf}}}}{f{{l{B`}}}}CIb{Fn{Gh}{{Ad{AM`}}}}{Fn{AM`}{{Ad{Gh}}}}{f{AMb}}{f{AMb}}}{{A`{{l{Kf}}n}}}}{{{f{{Kd{KjKf}}}}{Cf{{f{Bd}}}}{Fn{Gh}{{Ad{AM`}}}}{Fn{AM`}{{Ad{Gh}}}}{f{AMb}}{f{AMb}}}{{A`{{l{Kf}}n}}}}{{{f{{Kd{KjKf}}}}{Cf{{f{Bd}}}}{f{{l{B`}}}}CIb}{{A`{{Kd{KjKf}}n}}}}```{{c{Cf{Ib}}}COh{}}{{{COj{Gh}}{COj{Al}}{Cf{Ib}}}COl}{{{COj{Gh}}{COj{Al}}{Cf{Ib}}}COn}`{CKlBJb}{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{CKlKh}BJb}3{{CKlBJbKh}BJb}{{CKlEf}BJb}555{Fl{{f{c}}}{}}{Fl{{f{Dbc}}}{}}{Flb}8{cc{}}9{{}Fl}{ce{}{}};;;;;;;;;;{{CKl{Cf{Ef}}BJbCIb}BJb}{{CKlBJb}BJb}={{CKl{f{Bd}}}BJb}>;0>>>>>>>1{c{{A`{e}}}{}{}}0{{{f{c}}}AAf{}}5{CKlBJb}0>0`{{{f{BHf}}{f{AAh}}{f{Bn}}}{{A`{Abn}}}}{{{f{BHf}}}{{A`{{f{Bd}}n}}}}`{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{}DHl}{Fl{{f{c}}}{}}{Fl{{f{Dbc}}}{}}{Flb}{{DHl{Cf{{f{AG`}}}}}{{A`{AEhn}}}}{cc{}}{{}Fl}{ce{}{}}{{{f{DHl}}}d}{{FlFl}DHl}{{{f{DbDHl}}{Cl{Cj}}}b}{{{f{DbDHl}}}b}{c{{A`{e}}}{}{}}0{{{f{c}}}AAf{}}6`{{{f{{l{c}}}}}FlBf}0````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{{f{DHn}}}DHn}{{{f{c}}{f{Dbe}}}b{}{}}{{{f{c}}}b{}}{Fl{{f{c}}}{}}{Fl{{f{Dbc}}}{}}{Flb}{{{f{DHn}}{f{DHn}}}d}{{{f{DHn}}{f{DbHb}}}{{A`{bHd}}}}0{cc{}}{{{f{DHn}}{f{Dbc}}}bADh}{{}Fl}{ce{}{}}{{{f{c}}}e{}{}}{{{f{c}}}Ef{}}{c{{A`{e}}}{}{}}0{{{f{c}}}AAf{}}4````````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{{f{DI`}}}DI`}{{{f{c}}{f{Dbe}}}b{}{}}{{{f{c}}}b{}}{Fl{{f{c}}}{}}{Fl{{f{Dbc}}}{}}{Flb}{{{f{DI`}}{f{DI`}}}d}{{{f{DI`}}{f{DbHb}}}{{A`{bHd}}}}0{cc{}}{{{f{DI`}}{f{Dbc}}}bADh}{{}Fl}{ce{}{}}{{{f{c}}}e{}{}}{{{f{c}}}Ef{}}{c{{A`{e}}}{}{}}0{{{f{c}}}AAf{}}4{{LhLh}Lh}{{{f{{l{En}}}}J`}{{A`{bn}}}}{{{f{{ALh{J`}}}}J`}{{A`{bn}}}}```{{{f{Ab}}CDf}Ab}{{{f{Ab}}{f{Ab}}d}{{A`{Abn}}}}{{{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}e}CfLf{{Dj{}{{Ad{}}}}Dl}}{{{f{Ab}}{f{Bn}}}Ab}0{{{f{Ab}}{f{Bd}}}Ab}0`{{{f{c}}h}b{}}{{{f{DIb}}}{{f{AGb}}}}{{{f{DbDIb}}}{{Cl{Cj}}}}{{{f{DbDIb}}}{{f{DbAGb}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{{f{DIb}}}DIb}{{{f{c}}{f{Dbe}}}b{}{}}{{{f{c}}}b{}}{{{f{DIb}}}{{f{AG`}}}}{{}DIb}{Fl{{f{c}}}{}}{Fl{{f{Dbc}}}{}}{Flb}{{{f{DbDIb}}Fl}b}{{{f{DIb}}{f{DbHb}}}{{A`{bHd}}}}{cc{}}{{}Fl}{ce{}{}}{{{f{DIb}}}Fl}{FlDIb}{{{f{DbDIb}}}b}70{{{f{c}}}e{}{}}{c{{A`{e}}}{}{}}0{{{f{c}}}AAf{}}{{{f{DIb}}}{{Cf{{f{DId}}}}}}7`{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{{f{DFj}}}DFj}{{{f{c}}{f{Dbe}}}b{}{}}{{{f{c}}}b{}}{{}DFj}{Fl{{f{c}}}{}}{Fl{{f{Dbc}}}{}}{Flb}{{{f{{BCl{EhA@f}}}}}Eh}{{{f{DFj}}{f{DbHb}}}{{A`{bHd}}}}{cc{}}{{{f{DFj}}}Fl}{{{f{DFj}}}{{Mh{BCd}}}}{{{f{Bd}}dd}Eh}{{{f{DAd}}Al{Cf{Fl}}d{Cf{{f{BCd}}}}FlFl{Cf{{f{CBj}}}}{Cf{Al}}Al{Cf{{f{CBl}}}}dd{f{Db{Cf{Fl}}}}d}{{A`{{Gl{BCdFlFl}}n}}}}{{}Fl}{ce{}{}}{{{f{c}}}e{}{}}{c{{A`{e}}}{}{}}{{{f{DAd}}{f{CBd}}}{{A`{DFjn}}}}1{{{f{c}}}AAf{}}4{{DFj{Mh{BCd}}}DFj}````{{{f{{l{c}}}}eALjd}{{Gb{J`}}}Dh{{Cn{}{{Ch{Cf}}}}}}{{{f{{An{f}}}}cJ`e}{{Gb{J`}}}{{Cn{}{{Ch{Cf}}}}}{{Dj{fFlf}{{Ad{d}}}}}}``{{{f{DIf}}}{{f{Ab}}}}{{{f{C@l}}}{{A`{{l{K`}}n}}}}{{{f{C@l}}}{{A`{{l{Mn}}n}}}}0{{{f{C@l}}}{{A`{{l{Bb}}n}}}}22112{{{f{C@l}}}{{A`{{l{Nn}}n}}}}322{{{f{C@l}}{f{Bd}}}{{A`{Abn}}}}{{{f{C@l}}Kh}{{A`{{l{Kf}}n}}}}1445`{{Fl{f{Db{Gb{d}}}}}b}```{{{f{AKb}}FlFl}AKb}0{{Fl{f{{An{Ab}}}}{f{DbFb}}}{{A`{{ALl{{l{En}}}}n}}}}{{{f{{An{Ab}}}}{f{{An{d}}}}{f{{An{d}}}}}{{A`{ALnn}}}}{{{f{{An{Ab}}}}{f{{An{d}}}}{f{{An{d}}}}}{{A`{{Jf{Gh}}n}}}}{{{f{Bd}}{f{{An{Ab}}}}{f{{An{d}}}}{f{{An{d}}}}}{{A`{{l{F`}}n}}}}{{{f{Bd}}{f{{An{Ab}}}}}{{A`{{l{F`}}n}}}}{{{f{Ab}}}{{A`{{Cl{Cj}}n}}}}{{{f{{An{Ab}}}}}{{A`{ALnn}}}}{{{f{{An{Ab}}}}}{{A`{{l{F`}}n}}}}0```````````88```{{{f{BMn}}}{{f{{l{B`}}}}}}{{{f{BNb}}}{{A`{{l{B`}}n}}}}{{{f{BNb}}}{{l{B`}}}}{{{f{BNb}}{f{{l{B`}}}}}{{l{B`}}}}{{{f{BNb}}{f{Bd}}d}{{A`{{l{Bb}}n}}}}{{{f{BNb}}{f{{l{B`}}}}dd}{{A`{{l{Bb}}n}}}}{{{f{BNb}}{f{Bd}}}{{A`{{l{Bb}}n}}}}{{{f{BNb}}{f{Bd}}d}{{A`{{l{En}}n}}}}{{{f{BNb}}{f{{l{B`}}}}d}{{A`{{l{En}}n}}}}{{{f{BNb}}{f{{l{B`}}}}Fl}{{A`{{l{B`}}n}}}}{{{f{BNb}}{f{Bd}}}{{A`{{l{Ah}}n}}}}{{{f{BNb}}{f{{l{B`}}}}}{{A`{{l{Ah}}n}}}}{{{f{BNb}}{f{Bd}}{f{Eh}}}{{A`{Abn}}}}5{{{f{BNb}}{f{{l{B`}}}}dd}{{A`{{l{En}}n}}}}{{{f{BNb}}{f{Bd}}}{{A`{{l{En}}n}}}}=<{{{f{{An{{f{{l{B`}}}}}}}}{f{Bd}}d}{{A`{{l{B`}}n}}}}{{{f{BNb}}{f{Bd}}{f{Bd}}}{{A`{{l{B`}}n}}}}0{{{f{BNb}}{f{Bd}}{f{Bd}}Fl}{{A`{{l{B`}}n}}}}1{{{f{BNb}}{f{{l{B`}}}}}{{l{Ah}}}}{{{f{BNb}}{f{{l{B`}}}}Fl}{{A`{{l{j}}n}}}}0{{{f{{l{B`}}}}{f{{l{B`}}}}e}{{l{Ah}}}{{Cn{}{{Ch{{f{Bd}}}}}}}{{Dj{{f{Bd}}{f{Bd}}}{{Ad{c}}}}}}2{{{f{{l{B`}}}}{f{{l{B`}}}}Fled}{{A`{{l{j}}n}}}{{Cn{}{{Ch{{f{Bd}}}}}}}{{Dj{{f{Bd}}{f{Bd}}}{{Ad{c}}}}}}2{{{f{BNb}}{f{Ab}}}{{A`{{l{B`}}n}}}}{{{f{{l{B`}}}}{f{Bd}}d}{{l{B`}}}}{{{f{BNb}}}{{l{En}}}}0{{{f{BNb}}}{{l{B`}}}}{{{f{BNb}}{f{Ab}}{f{Ab}}}{{A`{{l{B`}}n}}}}4{{{f{{l{B`}}}}{f{{l{B`}}}}}{{l{B`}}}}505050{{{f{BNb}}{f{{l{B`}}}}}{{l{B`}}}}10{{{f{BNb}}{f{{l{En}}}}d}{{A`{{l{Kf}}n}}}}444````````{{eFlFl}{{DIh{Gh}}}{{Hl{Bd}}}{{Cn{}{{Ch{c}}}}}}{{eFlFl}{{Jf{Gh}}}{{Hl{{An{Al}}}}}{{Cn{}{{Ch{c}}}}}}``````````````{{{f{c}}h}b{}}0{{{f{Bd}}{Gb{{Cl{Cj}}}}{f{AG`}}}{{A`{Abn}}}}{{{f{Bd}}{Gb{{Cl{Cj}}}}{f{AG`}}{Cf{{f{{DGb{EfEf}}}}}}}{{A`{Abn}}}}{{AbAb}}{{Abc}{}{BhLn}}{{{f{Ab}}c}{}{BhLn}}{{{f{Ab}}{f{Ab}}}}`{{{f{DbAb}}{f{Ab}}}{{A`{{f{DbAb}}n}}}}{{{f{Ab}}}{{Cf{Fl}}}}0{{{f{BLd}}El}{{l{En}}}}{{{f{BLd}}}{{A`{{l{En}}n}}}}`{{{f{Ab}}}{{A`{{f{{l{C`}}}}n}}}}{{{f{Ab}}Fl}{{f{{Cl{Cj}}}}}}{{{f{BLd}}}{{f{AGb}}}}{{{f{DbBLd}}}{{f{DbAGb}}}}{{{f{Ab}}}{{l{Ah}}}}{{{f{DbBLd}}}{{f{Db{l{c}}}}}Dh}{{{f{BLd}}}{{f{{l{c}}}}}Dh}{{{f{Ab}}}{{f{BLd}}}}{{{f{Ab}}}{{f{Ab}}}}0{{{f{DbBLd}}}{{A`{Fln}}}}{{{f{DbAb}}}{{A`{Fln}}}}{{{f{Ab}}}{{A`{{f{{l{Aj}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{F`}}}}n}}}}{{{f{BLd}}{f{Ab}}}{{A`{Abn}}}}00{{{f{Ab}}}{{A`{{f{{l{Bb}}}}n}}}}{{{f{c}}}{{f{e}}}{}{}}000{{{f{Dbc}}}{{f{Dbe}}}{}{}}000{{{f{BLd}}{f{Eh}}Ff}{{A`{Abn}}}}{{{f{Ab}}{f{Eh}}}{{A`{Abn}}}}0{{{f{Ab}}{f{Eh}}Ff}{{A`{Abn}}}}{{{f{Ab}}}{{A`{{f{AMf}}n}}}}7{{{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{{f{Ab}}c}{{A`{Abn}}}Bj}{{{f{BLd}}}{{G`{{Fj{{Cl{Cj}}}}{Fn{{f{{Cl{Cj}}}}}{{Ad{Fl}}}}}}}}{{{f{Ab}}}{{`{{Cn{}{{Ch{Fl}}}}}}}}{{{f{BLd}}}{{f{{Gb{{Cl{Cj}}}}}}}}{{{f{DbBLd}}}{{f{Db{Gb{{Cl{Cj}}}}}}}}{{{f{DbAb}}}{{f{Db{Gb{{Cl{Cj}}}}}}}}{{{f{Ab}}}Ab}{{{f{Lh}}}Lh}1{{{f{BLd}}}{{Mh{BLd}}}}{{{f{c}}{f{Dbe}}}b{}{}}0{{{f{c}}}b{}}00{{{f{DbAb}}}b}{{{f{Ab}}}{{A`{{f{{Kd{KbK`}}}}n}}}}{{{f{Ab}}}{{A`{{f{{Kd{KjKf}}}}n}}}}{{{f{Ab}}}{{A`{{f{{Kd{KnKl}}}}n}}}}{{}Ab}{Fl{{f{c}}}{}}000{{{f{Ab}}}f}{Fl{{f{Dbc}}}{}}000{{AbAb}}{{{f{Ab}}{f{Ab}}}}{{Abc}{}{BhLn}}{{{f{Ab}}c}{}{BhLn}}{Flb}000{{{f{BLd}}}Ab}{{{f{BLd}}}{{f{Eh}}}}{{{f{Ab}}}{{A`{{f{{Kd{L`Kf}}}}n}}}}{{{f{Lh}}{f{Lh}}}d}{{{f{Ab}}{f{Ab}}}d}{{{f{{AHn{}{{Ch{c}}}}}}e}c{}{}}{{{f{Ab}}{f{Ab}}}{{A`{{l{Bb}}n}}}}{{{f{Ab}}c}{{A`{{l{Bb}}n}}}B@b}{{{f{Ab}}{f{Bd}}}{{A`{{l{Bb}}n}}}}32{{{f{Ab}}c}{}B@b}{{{f{Ab}}{f{Bd}}}}66{{{f{c}}{f{e}}}d{}{}}00{{{f{Ab}}}Fl}{{{f{Ab}}}{{A`{Abn}}}}{{{f{DbAb}}{f{Ab}}}{{A`{{f{DbAb}}n}}}}{{{f{Ab}}InFl}{{A`{Abn}}}}{{{f{Ab}}}{{A`{{f{{l{Eb}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Ed}}}}n}}}}{{{f{BLd}}}{{Dn{Od}}}}{{{f{Ab}}AHl}{{A`{Abn}}}}{{{f{BLd}}{f{{l{Bb}}}}}{{A`{Abn}}}}{{{f{Lh}}{f{DbHb}}}{{A`{bHd}}}}{{{f{Ab}}{f{DbHb}}}{{A`{bHd}}}}0{{{f{Ab}}}Ef}{cc{}}00{{{Kd{LdKf}}}Ab}1{{{l{c}}}AbDh}{{{Kd{KbK`}}}Ab}{{{Kd{KjKf}}}Ab}{{{Kd{L`Kf}}}Ab}{{{f{Bd}}{f{{An{In}}}}d}{{A`{Abn}}}}{{{f{Bd}}{f{{An{In}}}}{f{Eh}}d}{{A`{Abn}}}}{{{f{Bd}}{Cl{Cj}}}{{A`{Abn}}}}{{{f{Bd}}{Gb{{Cl{Cj}}}}}{{A`{Abn}}}}{{{f{Bd}}{Gb{{Cl{Cj}}}}{f{Eh}}}Ab}{g{{A`{ic}}}{}{}{{Hj{c}{{Ch{e}}}}}{}}{cAb{{Hh{}{{Ch{{f{Gh}}}}}}}}{cAb{{Hh{}{{Ch{{Cf{d}}}}}}}}{cAb{{Hh{}{{Ch{O`}}}}}}{cAb{{Hh{}{{Ch{{Cf{Jj}}}}}}}}{cAb{{Hh{}{{Ch{Jj}}}}}}{cAb{{Hh{}{{Ch{{f{Jj}}}}}}}}{cAb{{Hh{}{{Ch{{Cf{J`}}}}}}}}{cAb{{Hh{}{{Ch{{Cf{N`}}}}}}}}{cAb{{Hh{}{{Ch{N`}}}}}}{cAb{{Hh{}{{Ch{{f{Nd}}}}}}}}{cAb{{Hh{}{{Ch{{Cf{Al}}}}}}}}{cAb{{Hh{}{{Ch{{f{O`}}}}}}}}{cAb{{Hh{}{{Ch{{Cf{Nl}}}}}}}}{cAb{{Hh{}{{Ch{Nl}}}}}}{cAb{{Hh{}{{Ch{{f{Nl}}}}}}}}{cAb{{Hh{}{{Ch{{Cf{Gh}}}}}}}}{cAb{{Hh{}{{Ch{Gh}}}}}}{cAb{{Hh{}{{Ch{d}}}}}}{cAb{{Hh{}{{Ch{{f{N`}}}}}}}}{cAb{{Hh{}{{Ch{J`}}}}}}{cAb{{Hh{}{{Ch{{f{Al}}}}}}}}{cAb{{Hh{}{{Ch{{Cf{Jh}}}}}}}}{cAb{{Hh{}{{Ch{{Cf{O`}}}}}}}}{cAb{{Hh{}{{Ch{{Cf{Nd}}}}}}}}{cAb{{Hh{}{{Ch{Nd}}}}}}{cAb{{Hh{}{{Ch{Jh}}}}}}{cAb{{Hh{}{{Ch{Ef}}}}}}{cAb{{Hh{}{{Ch{{f{Jh}}}}}}}}{cAb{{Hh{}{{Ch{{Cf{Mb}}}}}}}}{cAb{{Hh{}{{Ch{Mb}}}}}}{cAb{{Hh{}{{Ch{{f{Bd}}}}}}}}{cAb{{Hh{}{{Ch{{f{d}}}}}}}}{cAb{{Hh{}{{Ch{{f{Mb}}}}}}}}{cAb{{Hh{}{{Ch{{f{J`}}}}}}}}{cAb{{Hh{}{{Ch{Al}}}}}}{{{f{Bd}}{Gb{Nd}}}Ab}{{{f{Bd}}{Gb{Jh}}}Ab}{{{f{Bd}}{Gb{Mb}}}Ab}{{{f{Bd}}{Gb{N`}}}Ab}{{{f{Bd}}{Gb{O`}}}Ab}{{{f{Bd}}{Gb{Nl}}}Ab}{{{f{Bd}}{Gb{Al}}}Ab}{{{f{Bd}}{Gb{J`}}}Ab}{{{f{Bd}}{Gb{Nj}}}Ab}{{{f{Bd}}{Gb{Gh}}}Ab}{{{f{Bd}}{Gb{Jj}}}Ab}{{{f{Bd}}Fl{f{Eh}}}Ab}{{{f{Ab}}FlFl}Ab}{{{f{BLd}}Fl}{{A`{Inn}}}}{{{f{Ab}}}Fl}{{{f{Ab}}}Jb}{{{f{Ab}}}Ab}{{{f{BLd}}}{{Cf{{Ml{Mj}}}}}}{{{f{BLd}}Fl}{{Cf{{f{Jd}}}}}}{{{f{BLd}}FlFl}{{Cf{{f{Jd}}}}}}{{{f{BLd}}Fl}In}{{{f{{AHn{}{{Ch{c}}}}}}e}c{}{}}{{{f{Ab}}{f{Bd}}}{{A`{{l{Bb}}n}}}}{{{f{Ab}}{f{Ab}}}{{A`{{l{Bb}}n}}}}{{{f{Ab}}c}{{A`{{l{Bb}}n}}}B@b}3{{{f{Ab}}{f{Bd}}}}12{{{f{BLd}}}d}{{{f{Lh}}{f{Dbc}}}bADh}{{{f{Ab}}{Cf{Fl}}}Ab}{{{f{Ab}}}{{A`{{f{{l{Nn}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{K`}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Kf}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Mn}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{En}}}}n}}}}`{{{f{Ab}}}{{A`{{l{Ah}}n}}}}{{}Fl}000{ce{}{}}000{AbAAh}1{BCfAb}{AbAb}={{{f{Ab}}}{{A`{{l{Bb}}n}}}}000{{{f{BLd}}}{{l{Bb}}}}0{{}d}0{{{f{Ab}}}Lh}{{{f{Ab}}}DIj}{{{f{Ab}}}{{`{{Cn{}{{Ch{Ab}}}}}}}}{{{f{BLd}}}Fl}{{{f{Ab}}}Fl}{{{f{BLd}}Fl}Ab}{{{f{Ab}}}{{A`{{f{{l{Ah}}}}n}}}}{AbBJb}{{{f{{AHn{}{{Ch{c}}}}}}e}c{}{}}{{{f{Ab}}{f{Bd}}}}{{{f{Ab}}c}{{A`{{l{Bb}}n}}}B@b}{{{f{Ab}}{f{Ab}}}{{A`{{l{Bb}}n}}}}3021{{{f{Ab}}}{{A`{{Cf{c}}n}}}Ln}{{{f{BLd}}}{{A`{M`n}}}}{{{f{BLd}}}{{Cf{Mb}}}}{{{f{Ab}}}M`}1232{{Abc}{}{BhLn}}{{AbAb}}{{{f{Ab}}{f{Ab}}}}{{{f{Ab}}c}{}{BhLn}}{{{f{BLd}}}Fl}{{{f{Ab}}}Fl}{{{f{BLd}}}{{A`{Fln}}}}{{{f{BLd}}}{{f{Bd}}}}{{{f{Bd}}c}Ab{{Hl{{An{Gh}}}}}}{{{f{Bd}}c}Ab{{Hl{{An{Nl}}}}}}{{{f{Bd}}{Nh{Gh}}}Ab}{{{f{Bd}}{Nh{Jj}}}Ab}{{{f{Bd}}{Nh{J`}}}Ab}{{{f{Bd}}c}Ab{{Hl{{An{Ab}}}}}}{{{f{Bd}}c}Ab{{Hl{{An{{Cf{Ab}}}}}}}}{{{f{Bd}}c}Ab{{Hl{{An{{f{Bd}}}}}}}}{{{f{Bd}}{f{Ab}}}Ab}{{{f{Bd}}c}Ab{{Hl{{An{{Cf{Mb}}}}}}}}{{{f{Bd}}c}Ab{{Hl{{An{{Cf{Jh}}}}}}}}{{{f{Bd}}c}Ab{{Hl{{An{{Cf{{f{Bd}}}}}}}}}}{{{f{Bd}}c}Ab{{Hl{{An{{Dn{Bd}}}}}}}}{{{f{Bd}}c}Ab{{Hl{{An{{Cf{{Dn{Bd}}}}}}}}}}{{{f{Bd}}c}Ab{{Hl{{An{{f{{An{Al}}}}}}}}}}{{{f{Bd}}c}Ab{{Hl{{An{Ef}}}}}}{{{f{Bd}}c}Ab{{Hl{{An{{Cf{{f{{An{Al}}}}}}}}}}}}{{{f{Bd}}c}Ab{{Hl{{An{{Gb{Al}}}}}}}}{{{f{Bd}}c}Ab{{Hl{{An{{Cf{Nj}}}}}}}}{{{f{Bd}}c}Ab{{Hl{{An{d}}}}}}{{{f{Bd}}c}Ab{{Hl{{An{{Dn{{An{Al}}}}}}}}}}{{{f{Bd}}c}Ab{{Hl{{An{Al}}}}}}{{{f{Bd}}c}Ab{{Hl{{An{{Cf{Gh}}}}}}}}{{{f{Bd}}c}Ab{{Hl{{An{{Cf{{Dn{{An{Al}}}}}}}}}}}}{{{f{Bd}}c}Ab{{Hl{{An{B@n}}}}}}{{{f{Bd}}c}Ab{{Hl{{An{Nd}}}}}}{{{f{Bd}}c}Ab{{Hl{{An{{Cf{B@n}}}}}}}}{{{f{Bd}}c}Ab{{Hl{{An{{Cf{Nl}}}}}}}}{{{f{Bd}}c}Ab{{Hl{{An{AM`}}}}}}{{{f{Bd}}c}Ab{{Hl{{An{{Cf{O`}}}}}}}}{{{f{Bd}}c}Ab{{Hl{{An{{Cf{AM`}}}}}}}}{{{f{Bd}}c}Ab{{Hl{{An{{Cf{N`}}}}}}}}{{{f{Bd}}c}Ab{{Hl{{An{J`}}}}}}{{{f{Bd}}c}Ab{{Hl{{An{B@l}}}}}}{{{f{Bd}}c}Ab{{Hl{{An{{Cf{B@l}}}}}}}}{{{f{Bd}}c}Ab{{Hl{{An{AMd}}}}}}{{{f{Bd}}c}Ab{{Hl{{An{{Cf{Jj}}}}}}}}{{{f{Bd}}c}Ab{{Hl{{An{{Cf{AMd}}}}}}}}{{{f{Bd}}c}Ab{{Hl{{An{{Cf{J`}}}}}}}}{{{f{Bd}}c}AbBCf}{{{f{Bd}}c}Ab{{Hl{{An{In}}}}}}{{{f{Bd}}c}Ab{{Hl{{An{{Cf{Nd}}}}}}}}{{{f{Bd}}c}Ab{{Hl{{An{Jj}}}}}}{{{f{Bd}}c}Ab{{Hl{{An{{Cf{Al}}}}}}}}{{{f{Bd}}c}Ab{{Hl{{An{{Cf{d}}}}}}}}{{{f{Bd}}c}Ab{{Hl{{An{N`}}}}}}{{{f{Bd}}c}Ab{{Hl{{An{{Cf{{Gb{Al}}}}}}}}}}{{{f{Bd}}c}Ab{{Hl{{An{{Cf{Ef}}}}}}}}{{{f{Bd}}c}Ab{{Hl{{An{Mb}}}}}}{{{f{Bd}}c}Ab{{Hl{{An{Jh}}}}}}{{{f{Bd}}c}Ab{{Hl{{An{O`}}}}}}{{{f{Bd}}c}Ab{{Hl{{An{Nj}}}}}}{{{f{Bd}}{Nh{Nl}}}Ab}{{{f{Bd}}{f{Eh}}}Ab}{{{f{BLd}}FlFl}Ab}{{{f{Bd}}Fl}Ab}{{{f{DbDIj}}}Cf}{{{f{{AHn{}{{Ch{c}}}}}}e}c{}{}}{{{f{Ab}}{f{Ab}}}{{A`{{l{Bb}}n}}}}{{{f{Ab}}{f{Bd}}}{{A`{{l{Bb}}n}}}}{{{f{Ab}}c}{{A`{{l{Bb}}n}}}B@b}32{{{f{Ab}}{f{Bd}}}}{{{f{Ab}}c}{}B@b}{{{f{Ab}}}{{A`{{f{ADd}}n}}}}{{{f{BLd}}}Fl}`{{{f{Ab}}}{{Cl{Lb}}}}{{{f{Ab}}}{{A`{M`n}}}}{{{f{BLd}}MbOj}{{A`{M`n}}}}{{{f{BLd}}}Ab}{{Abc}{}{BhLn}}{{{f{Ab}}c}{}{BhLn}}{{{f{Ab}}{f{Ab}}}}{{{f{DbBLd}}{f{Bd}}}b}{{{f{DbAb}}{f{Bd}}}{{f{DbAb}}}}{{{f{Ab}}{f{{An{Gh}}}}}{{A`{Abn}}}}06{LhLh}{{{f{BLd}}{f{Dj}}Ol}{{A`{Abn}}}}{{{f{Ab}}Mbdd{Cf{Jj}}}{{A`{Abn}}}}{{{f{Ab}}Fldd{Cf{Jj}}}{{A`{Abn}}}}{{{f{Ab}}Fl}Ab}{{{f{DbAb}}Lh}b}{{{f{BLd}}Gh}Ab}{{{f{DbBLd}}}b}{{{f{DbAb}}}b}{{{f{Ab}}{Cf{Jj}}}Ab}{{{f{DIj}}}{{Gl{Fl{Cf{Fl}}}}}}{{{f{BLd}}GhFl}Ab}{{{f{Ab}}GhFl}Ab}{{{f{Ab}}El}{{A`{Abn}}}}{{{f{BLd}}El}{{A`{Abn}}}}{{{f{BLd}}Gh}{{Gl{AbAb}}}}{{{f{Ab}}Gh}{{Gl{AbAb}}}}{{{f{BLd}}Al}{{Cf{Mb}}}}{{{f{BLd}}Al}{{A`{M`n}}}}{{{f{Ab}}}{{A`{{f{{l{B`}}}}n}}}}{{{f{Ab}}Fl}{{A`{{Dn{Bd}}n}}}}{{{f{Ab}}{f{Eh}}}{{A`{Abn}}}}{{{f{Ab}}}{{A`{{f{{l{j}}}}n}}}}{{{f{Ab}}c}{}{BhLn}}{{AbAb}}{{{f{Ab}}{f{Ab}}}}{{Abc}{}{BhLn}}{{{f{Ab}}}{{A`{cn}}}Ln}{{{f{BLd}}}{{A`{M`n}}}}{{{f{Ab}}}{{A`{M`n}}}}{{{f{Ab}}{Cf{Fl}}}Ab}{{{f{BLd}}{f{{l{En}}}}}{{A`{Abn}}}}{{{f{Ab}}{f{{An{A@b}}}}Lh}Ab}{{{f{Ab}}{f{{An{A@b}}}}}Ab}{{{f{BLd}}{f{{An{J`}}}}}{{A`{Abn}}}}{{{f{BLd}}{f{{An{J`}}}}}Ab}{{{f{BLd}}{f{{l{En}}}}}Ab}{{{f{Ab}}{f{{An{J`}}}}}Ab}{{{f{Ab}}}{{A`{{f{{Kd{LdKf}}}}n}}}}{{{f{Ab}}FlAOh}{{Cl{Cj}}}}{{{f{Ab}}{Cf{{f{Bd}}}}d}{{A`{AAhn}}}}{{{f{Ab}}}{{A`{Abn}}}}{{{f{c}}}e{}{}}0{{{f{Ab}}}{{Dn{Ab}}}}{{{f{c}}}Ef{}}{{AbAb}{{A`{Abn}}}}{c{{A`{e}}}{}{}}00{{{Gl{{f{B@f}}{Gb{{Cl{Cj}}}}}}}{{A`{Abn}}}}{{{Gl{{f{Bd}}{Gb{{Cl{Cj}}}}}}}{{A`{Abn}}}}2{{{Gl{{f{B@f}}{Cl{Cj}}}}}{{A`{Abn}}}}{{{Gl{{f{Bd}}{Cl{Cj}}}}}{{A`{Abn}}}}44445{{{f{DbAb}}{Jl{c}}}dDh}6{{{f{c}}}AAf{}}000{{{f{Ab}}}{{A`{{f{{l{Nb}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{En}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Ob}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Nf}}}}n}}}}{{{f{BLd}}}{{A`{Abn}}}}{{{f{Ab}}}{{A`{Abn}}}}{{{f{BLd}}}{{A`{{f{{l{c}}}}n}}}Dh}{{{f{BLd}}Al}{{Cf{Mb}}}}{{{f{BLd}}Al}{{A`{M`n}}}}{ce{}{}}000{{Ab{f{Bd}}}Ab}{{{f{Ab}}c}Ab{BhLn}}{{{f{Ab}}{f{{l{Bb}}}}{f{Ab}}}{{A`{Abn}}}}``{{{f{c}}h}b{}}{{{f{E`}}}{{f{Ab}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{{f{E`}}}E`}{{{f{c}}{f{Dbe}}}b{}{}}{{{f{c}}}b{}}{{{f{E`}}}Ab}{Fl{{f{c}}}{}}{Fl{{f{Dbc}}}{}}{Flb}{cc{}}{{}Fl}{ce{}{}}{{{DIl{Ab}}}E`}{{{f{DbE`}}{f{Db{Cl{Cj}}}}}b}{{{f{c}}}e{}{}}{c{{A`{e}}}{}{}}0{{{f{c}}}AAf{}}5{{{f{DbE`}}{f{Db{Cl{Cj}}}}e}c{}{{Dj{{f{E`}}}{{Ad{c}}}}}}````{{{f{Ab}}{f{Ab}}c}{{A`{Abn}}}{{Af{{f{Ab}}{f{Ab}}}{{Ad{{A`{Abn}}}}}}}}{{{BJd{}{{Ad{c}}}}{f{Ab}}}c{}}{{{f{BJh}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Bl}}}}{f{Ab}}}{{A`{Abn}}}}`210210210210``{{{f{C@n}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Fh}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{C@n}}c}{{A`{Abn}}}Bj}{{{f{{l{Fh}}}}c}{{A`{Abn}}}Bj}```{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{{f{CKh}}}CKh}{{{f{c}}{f{Dbe}}}b{}{}}{{{f{c}}}b{}}0{{}CKh}{Fl{{f{c}}}{}}{Fl{{f{Dbc}}}{}}{Flb}{{{f{CKh}}{f{CKh}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{CKh}}{f{DbHb}}}{{A`{bHd}}}}{cc{}}{{{f{CKh}}{f{Dbc}}}bADh}{{}Fl}{ce{}{}}{{{f{c}}}e{}{}}{c{{A`{e}}}{}{}}0{{{f{c}}}AAf{}}3","D":"AEIbB@f","p":[[1,"unit"],[1,"bool"],[1,"reference"],[5,"Private",11396],[5,"StructType",1999,11397],[5,"ChunkedArray",17,11398],[6,"PolarsError",3450,11399],[6,"Result",11400],[5,"Series",10883,11401],[17,"Output"],[10,"FnMut",11402],[5,"ListType",1999,11397],[5,"BinaryType",1999,11397],[1,"u8"],[1,"slice"],[5,"StringType",1999,11397],[5,"BooleanType",1999,11397],[1,"str"],[10,"PolarsNumericType",1999,11397],[10,"Num",11403],[10,"ToPrimitive",11404],[10,"NumOpsDispatchInner",11341,11405],[6,"GroupsProxy",3838,11406],[5,"FixedSizeListType",1999,11397],[5,"ObjectType",1999,11397],[10,"PolarsObject",1552,11407],[6,"Option",11408],[17,"Item"],[10,"Array",11409],[5,"Box",11410],[10,"Iterator",11411],[5,"AmortizedListIter",11412],[0,"mut"],[17,"IsNested"],[5,"FalseT",1999,11397],[10,"PolarsDataType",1999,11397],[10,"Fn",11402],[10,"Copy",11413],[6,"Cow",11414],[5,"AmortSeries",11317,11415],[5,"Float32Type",1999,11397],[5,"Float64Type",1999,11397],[5,"String",11416],[6,"DataType",1999,11417],[5,"View",11418],[5,"SortOptions",1680,11419],[5,"UInt32Type",1999,11397],[5,"BinaryOffsetType",1999,11397],[5,"SortMultipleOptions",1680,11419],[10,"PolarsIntegerType",1999,11397],[6,"CastOptions",1157,11420],[10,"NumOpsDispatchCheckedInner",11362,11421],[5,"Iter",11422],[1,"usize"],[1,"fn"],[5,"Map",11423],[5,"Vec",11424],[5,"MetadataProperties",1264,11425],[10,"DoubleEndedIterator",11426],[1,"i64"],[5,"OffsetsBuffer",11427],[1,"tuple"],[17,"HasViews"],[17,"IsObject"],[5,"Formatter",11428],[5,"Error",11428],[17,"Array"],[10,"IntoIterator",11429],[10,"FallibleIterator",11430],[10,"AsRef",11431],[10,"Borrow",11432],[10,"PolarsAsRef",11433],[5,"Bitmap",11434],[10,"IntoParallelIterator",11435],[10,"Send",11413],[10,"Sync",11413],[10,"NoOption",11436],[10,"TrustedLen",11437],[6,"AnyValue",1999,11438],[1,"u32"],[5,"MetadataFlags",1264,11425],[10,"PolarsObjectSafe",1552,11407],[5,"BinaryArray",11439],[1,"f32"],[1,"u64"],[5,"Metadata",1264,11425],[5,"RwLockWriteGuard",11440],[5,"Int32Type",1999,11397],[5,"DateType",1999,11397],[5,"Logical",1999,11441],[5,"Int64Type",1999,11397],[6,"TimeUnit",1999,11442],[5,"DatetimeType",1999,11397],[5,"Int128Type",1999,11397],[5,"DecimalType",1999,11397],[5,"DurationType",1999,11397],[10,"ExactSizeIterator",11443],[5,"TimeType",1999,11397],[10,"PolarsFloatType",1999,11397],[6,"IsSorted",10883,11444],[10,"PolarsIterator",1207,11445],[6,"ChunkedArrayLayout",17,11398],[10,"NumCast",11404],[5,"Scalar",4209,11446],[1,"f64"],[6,"MetadataReadGuard",1264,11447],[5,"IMMetadata",1264,11448],[5,"Arc",4209,11449],[10,"MetadataTrait",1264,11450],[5,"RwLockReadGuard",11440],[5,"Int8Type",1999,11397],[1,"i8"],[5,"UInt16Type",1999,11397],[1,"u16"],[5,"UInt8Type",1999,11397],[5,"Range",11451],[1,"i128"],[1,"i32"],[5,"Int16Type",1999,11397],[1,"i16"],[5,"UInt64Type",1999,11397],[5,"Field",1999,11452],[10,"ParallelIterator",11435],[10,"IndexedParallelIterator",11435],[6,"QuantileInterpolOptions",4209,11453],[5,"RollingOptionsFixedWindow",4209,11454],[10,"PolarsOpsNumericType",11455],[10,"Sized",11413],[5,"ChunkId",4209,11456],[17,"IsStruct"],[5,"RandomState",11457],[5,"BytesHash",11458],[5,"ViewRepr",11459],[1,"array"],[5,"Dim",11460],[5,"ArrayBase",11459],[5,"OwnedRepr",11461],[6,"Either",11462],[5,"TypeId",11463],[5,"DataFrame",3545,11464],[5,"NullableIdxSize",4209,11456],[10,"FnOnce",11402],[17,"Scalar"],[17,"Out"],[17,"TrueDivOut"],[10,"ArithmeticChunked",851,11465],[5,"AnonymousListBuilder",879,11466],[5,"AnonymousOwnedListBuilder",879,11466],[5,"ListBooleanChunkedBuilder",879,11467],[5,"ListPrimitiveChunkedBuilder",879,11468],[10,"ListBuilderTrait",879,11469],[10,"ChunkedBuilder",879,11470],[5,"ListStringChunkedBuilder",879,11471],[5,"ListBinaryChunkedBuilder",879,11471],[5,"ListNullChunkedBuilder",879,11472],[5,"BinViewChunkedBuilder",879,11473],[10,"ViewType",11474],[5,"BooleanChunkedBuilder",879,11475],[5,"NullChunkedBuilder",879,11476],[5,"PrimitiveChunkedBuilder",879,11477],[10,"Clone",11478],[5,"NullChunked",11479],[10,"NewChunkedArray",879,11470],[10,"Hasher",11480],[10,"ChunkedCollectInferIterExt",1187,11481],[10,"ChunkedCollectIterExt",1187,11481],[10,"Canonical",1201,11482],[10,"ChunkedCollectParIterExt",1203,11483],[10,"FromParIterWithDtype",1203,11483],[5,"BooleanArray",11484],[5,"BoolIterNoNull",1207,11445],[5,"FixedSizeListArray",11485],[5,"FixedSizeListIterNoNull",1207,11445],[5,"SomeIterator",1207,11445],[5,"MetadataEnv",1264,11486],[10,"MetadataCollectable",1264,11487],[5,"Iter",11488],[5,"IterNames",11488],[5,"File",11489],[5,"Mutex",11490],[6,"MetadataMerge",1264,11425],[5,"RwLock",11440],[5,"ObjectArray",1552,11407],[6,"ArrowDataType",1999,11491],[10,"Any",11463],[10,"Debug",11428],[5,"BitmapIter",11492],[6,"ZipValidity",11493],[5,"ObjectChunkedBuilder",1629,11494],[10,"AnonymousObjectBuilder",1652,11495],[5,"ObjectRegistry",1652,11495],[17,"FuncRet"],[10,"ChunkApply",1680,11496],[10,"ChunkApplyKernel",1680,11496],[10,"ChunkSort",1680,11496],[10,"ChunkUnique",1680,11496],[10,"ChunkCast",1680,11496],[6,"FillNullStrategy",1680,11496],[10,"ChunkCompare",10883,11496],[10,"ChunkExplode",1680,11496],[10,"ChunkFillNullValue",1680,11496],[10,"ChunkFilter",1680,11496],[10,"ChunkFull",1680,11496],[10,"ChunkFullNull",1680,11496],[10,"ChunkAnyValue",1680,11496],[10,"IsFirstDistinct",1680,11496],[10,"IsLastDistinct",1680,11496],[10,"ChunkAgg",1680,11496],[10,"ChunkQuantile",1680,11496],[10,"ChunkExpandAtIndex",1680,11496],[10,"Reinterpret",1680,11496],[10,"ChunkReverse",1680,11496],[10,"ChunkRollApply",1680,11496],[10,"ChunkSet",1680,11496],[10,"ChunkShift",1680,11496],[10,"ChunkShiftFill",1680,11496],[10,"SlicedArray",1680,11497],[10,"ChunkVar",1680,11496],[10,"ChunkTake",1680,11496],[10,"ChunkTakeUnchecked",1680,11496],[10,"ChunkBytes",1680,11496],[10,"ChunkZip",1680,11496],[10,"BinaryFnMut",1887,11498],[10,"StaticArray",1999,11499],[10,"TernaryFnMut",1887,11498],[10,"Error",11500],[10,"UnaryFnMut",1887,11498],[5,"PrimitiveArray",11501],[6,"SearchSortedSide",1928,11502],[5,"NoNull",4209,11503],[5,"RowsEncoded",11504],[5,"NaiveDateTime",11505],[6,"Tz",11506],[5,"NaiveTime",11507],[5,"CategoricalChunked",1999,11508],[5,"CategoricalChunkedBuilder",1999,11509],[10,"ArrayFromIter",1999,11510],[10,"ArrayFromIterDtype",1999,11510],[10,"AsRefDataType",1999,11417],[17,"ValueT"],[17,"ZeroableValueT"],[17,"ValueIterT"],[10,"Zeroable",11511],[10,"From",11431],[5,"BinaryViewArrayGeneric",11474],[6,"RevMapping",1999,11512],[10,"CategoricalMergeOperation",1999,11513],[10,"LogicalType",1999,11441],[6,"CategoricalOrdering",1999,11512],[5,"OwnedObject",1999,11438],[6,"UnknownKind",1999,11417],[5,"CompatLevel",1999,11417],[5,"CategoricalType",1999,11397],[6,"ArrowTimeUnit",1999],[10,"ArrayCollectIterExt",1999,11510],[5,"GlobalRevMapMerger",1999,11513],[10,"NumericNative",1999,11397],[10,"Into",11431],[5,"ArrowField",4209],[6,"IntegerType",11514],[6,"PrimitiveType",11515],[5,"TimeDelta",11516],[5,"NaiveDate",11517],[5,"LazyCompact",11518],[5,"SmartString",11519],[10,"GetAnyValue",1999,11438],[10,"IntoScalar",1999,11520],[5,"CatIter",1999,11508],[6,"Ordering",11521],[1,"u128"],[6,"PhysicalType",11514],[5,"StringCacheHolder",3429,11522],[5,"ErrString",3450,11399],[6,"PolarsWarning",3450,11523],[5,"Error",11524],[6,"Error",11525],[6,"ParquetError",11526],[5,"TryReserveError",11527],[5,"Error",11528],[5,"Utf8Error",11529],[10,"Display",11428],[5,"Schema",4209,11530],[10,"IntoSeries",10883,11531],[6,"NullStrategy",3545,11464],[6,"UniqueKeepStrategy",3545,11464],[5,"HashSet",11532],[5,"ArrowSchema",4209,11533],[5,"Row",4097,11534],[5,"GroupBy",3838,11535],[5,"DynamicGroupOptions",4209,11536],[5,"RangeFrom",11451],[5,"RangeInclusive",11451],[5,"RangeTo",11451],[5,"RangeToInclusive",11451],[5,"RangeFull",11451],[5,"RecordBatchIter",3545,11464],[5,"PhysRecordBatchIter",3545,11464],[5,"LazyFrame",4209,11537],[5,"RollingGroupOptions",4209,11536],[10,"RangeBounds",11451],[10,"IntoVec",4209,11503],[6,"IndexOrder",4209,11538],[5,"RecordBatchT",11539],[5,"StructArray",4209,11540],[5,"UnpivotArgs",3808,11541],[5,"Duration",4209,11542],[5,"GroupsIdx",3838,11406],[5,"UnitVec",11543],[6,"GroupByMethod",3838,11535],[5,"SlicedGroups",3838,11406],[5,"GroupsProxyParIter",3838,11406],[10,"UnindexedConsumer",11544],[6,"GroupsIndicator",3838,11406],[6,"IRAggExpr",11545],[10,"IntoGroupsProxy",3838,11546],[5,"Copied",11547],[5,"Zip",11548],[5,"GroupsProxyIter",3838,11406],[10,"IsFloat",11549],[10,"NativeType",11550],[10,"AggList",4081,11551],[10,"TakeExtremum",4081,11552],[10,"PhysicalAggExpr",4094,11553],[6,"AnyValueBuffer",4097,11554],[6,"AnyValueBufferTrusted",4097,11554],[5,"Node",11555],[6,"IR",11556],[5,"Arena",11555],[6,"AExpr",11545],[10,"JoinDispatch",4209,11557],[5,"JoinArgs",4209,11558],[10,"DfTake",4209,11559],[10,"DataFrameOps",4209,11560],[5,"CsvReader",4209,11561],[10,"PhysicalIoExpr",11562],[10,"MmapBytesReader",11563],[6,"Expr",4209,11564],[10,"LhsNumOps",11341,11405],[6,"Selector",4209,11565],[10,"NumOpsDispatch",11341,11405],[5,"LazyGroupBy",4209,11537],[5,"OptState",4209,11566],[10,"Allocator",11567],[5,"JoinBuilder",4209,11537],[10,"AnonymousScan",4209,11568],[5,"ScanArgsAnonymous",4209,11569],[10,"FunctionOutputField",4209,11570],[5,"SpecialEq",4209,11570],[6,"VisitRecursion",11571],[6,"FunctionExpr",4209,11572],[10,"ArgAgg",4209,11573],[5,"ArrayNameSpace",4209,11574],[5,"ListNameSpace",4209,11575],[10,"SeriesTrait",10883,11444],[5,"FieldsMapper",4209,11576],[5,"IpcStreamReader",4209,11577],[10,"Read",11578],[10,"SeriesUdf",4209,11570],[10,"AsBinary",4209,11579],[10,"StringMethods",9822,11580],[5,"BorrowedFd",11581],[10,"AsFd",11581],[10,"AsList",4209,11582],[10,"AsRawFd",11583],[6,"AggExpr",4209,11564],[10,"SeriesSealed",4209,11584],[10,"AsString",4209,11585],[20,"MaybeUninit",11586],[10,"StringNameSpaceImpl",4209,11587],[5,"OwnedBatchedCsvReader",4209,11588],[5,"CsvWriter",4209,11589],[5,"BatchedWriter",11589],[10,"Write",11578],[5,"IpcWriter",4209,11590],[5,"BatchedWriter",11590],[5,"ParquetReader",4209,11591],[5,"BatchedParquetReader",4209,11592],[5,"ParquetWriter",4209,11593],[5,"BatchedWriter",11594],[5,"BatchedCsvReader",4209,11588],[5,"BinaryNameSpace",9727,11595],[6,"Operator",4209,11564],[10,"RenameAliasFn",4209,11570],[5,"UserDefinedFunction",4209,11596],[10,"SeriesBinaryUdf",4209,11570],[5,"InProcessQuery",4209,11597],[5,"HashMap",11598],[5,"CategoricalNameSpace",4209,11599],[10,"RoundSeries",4209,11600],[10,"TemporalMethods",10768,11601],[10,"NumOpsDispatchChecked",11362,11421],[5,"LazyCsvReader",4209,11602],[5,"ScanArgsIpc",4209,11603],[5,"LazyJsonLineReader",4209,11604],[5,"ScanArgsParquet",4209,11605],[5,"RollingOptionsDynamicWindow",4209,11606],[5,"Bounds",4209,11607],[6,"ClosedWindow",4209,11608],[6,"Label",4209,11608],[6,"StartBy",4209,11608],[5,"Window",4209,11609],[5,"CsvReadOptions",4209,11610],[5,"CsvParseOptions",4209,11610],[6,"CsvEncoding",4209,11610],[6,"CommentPrefix",4209,11610],[6,"NullValues",4209,11610],[5,"CsvWriterOptions",4209,11611],[5,"SerializeOptions",4209,11611],[6,"JoinCoalesce",4209,11558],[6,"QuoteStyle",4209,11611],[6,"JoinType",4209,11558],[5,"IpcScanOptions",4209,11612],[6,"JoinValidation",4209,11558],[5,"IpcWriterOptions",4209,11590],[6,"IpcCompression",4209,11590],[5,"AsOfOptions",4209,11613],[5,"JsonWriterOptions",4209,11614],[6,"AsofStrategy",4209,11613],[6,"InterpolationMethod",4209,11615],[5,"ParquetOptions",4209,11616],[6,"ClosedInterval",4209,11617],[6,"ParallelStrategy",4209,11616],[6,"RankMethod",4209,11618],[5,"RankOptions",4209,11618],[5,"ParquetWriteOptions",4209,11619],[6,"ParquetCompression",4209,11619],[5,"GzipLevel",4209,11619],[5,"BrotliLevel",4209,11619],[5,"ZstdLevel",4209,11619],[6,"DslPlan",4209,11620],[5,"When",4209,11621],[5,"Then",4209,11621],[5,"ChainedWhen",4209,11621],[5,"ChainedThen",4209,11621],[6,"Excluded",4209,11564],[6,"BooleanFunction",4209,11622],[6,"CategoricalFunction",4209,11623],[6,"TemporalFunction",4209,11624],[6,"PowFunction",4209,11625],[6,"StringFunction",4209,11626],[6,"StructFunction",4209,11627],[5,"DatetimeArgs",4209,11628],[5,"DurationArgs",4209,11628],[5,"RollingCovOptions",4209,11629],[5,"StrptimeOptions",4209,11629],[5,"JoinOptions",4209,11629],[6,"WindowType",4209,11629],[6,"WindowMapping",4209,11629],[6,"NestedType",4209,11629],[5,"StatisticsOptions",4209,11630],[6,"LiteralValue",4209,11631],[5,"FileMetaData",4209,11632],[5,"AnonymousScanOptions",4209,11633],[5,"UnionArgs",4209,11633],[5,"RollingVarParams",4209,11634],[5,"RollingQuantileParams",4209,11634],[6,"NonExistent",4209,11635],[10,"LazyFileListReader",4209,11636],[5,"CloudOptions",9959,11637],[10,"Ord",11521],[6,"ColumnOrder",11638],[10,"BinaryNameSpaceImpl",4209,11639],[5,"JsonLineReader",4209,11640],[5,"PathBuf",11641],[10,"CrossJoin",4209,11642],[10,"ExprEvalExtension",4209,11643],[10,"DateMethods",9822,11644],[10,"DatetimeMethods",9822,11645],[10,"DurationMethods",9822,11646],[5,"IpcStreamWriterOption",4209,11577],[10,"BinaryUdfOutputField",4209,11570],[5,"CStr",11647],[10,"Default",11648],[5,"RowGroupMetaData",11649],[5,"ParquetStatistics",4209],[6,"NullBehavior",11368,11650],[5,"Weak",11449],[5,"DateLikeNameSpace",10333,11651],[1,"char"],[10,"FromIterator",11429],[10,"SchemaNamesAndDtypes",4209,11530],[10,"SeriesMethods",4209,11652],[10,"Scalar",11653],[10,"PartialEq",11521],[10,"ListNameSpaceExtension",4209,11654],[10,"Command",11655],[5,"Path",11641],[5,"StructNameSpace",4209,11656],[10,"SerReader",4209,11657],[10,"SerWriter",4209,11657],[5,"IpcReader",4209,11612],[5,"IpcStreamWriter",4209,11577],[5,"JsonWriter",4209,11614],[5,"JsonReader",4209,11614],[10,"UdfSchema",4209,11658],[6,"ArrayFunction",11659],[6,"BinaryFunction",11660],[6,"ListFunction",11661],[6,"RangeFunction",11662],[5,"MutableStatistics",11663],[5,"CString",11664],[10,"ToOwned",11414],[5,"OsString",11665],[5,"OsStr",11665],[1,"never"],[5,"GrowableStruct",11666],[5,"MutableStructArray",11667],[10,"FromData",10327,11668],[5,"Buffer",11669],[10,"FromDataUtf8",10327,11668],[10,"FromDataBinary",10327,11668],[5,"ListArray",11670],[6,"Ambiguous",4209,11635],[10,"NamedFromOwned",4209,11671],[10,"DataFrameJoinOps",4209,11672],[5,"FunctionOptions",11633],[10,"PartialOrd",11521],[6,"Context",11620],[10,"IndexOfSchema",4209,11530],[17,"DataType"],[5,"BoundsIter",4209,11609],[6,"ReaderBytes",11563],[10,"PolarsTemporalGroupby",4209,11536],[10,"Hash",11480],[10,"SeriesJoin",4209,11673],[10,"TimeMethods",9822,11674],[5,"NonZero",11675],[10,"IntoListNameSpace",4209,11654],[5,"FileMetaData",11676],[5,"StructValueIter",11677],[10,"AsofJoinBy",4209,11678],[10,"ListNameSpaceImpl",4209,11679],[5,"ExprNameNameSpace",4209,11680],[5,"KeyValue",11676],[10,"IntoLazy",4209,11537],[10,"Literal",4209,11631],[5,"Null",4209,11631],[10,"CloneToUninit",11478],[5,"RowIndex",11681],[10,"ChunkAggSeries",4209,11682],[10,"QuantileAggSeries",4209,11683],[10,"IndexToUsize",4209,11684],[10,"NamedFrom",4209,11671],[6,"RowGroupFetcher",11592],[5,"SplitNChars",4209,11685],[5,"AnonymousScanArgs",4209,11568],[5,"Pin",11686],[5,"Request",11500],[10,"SeriesRank",4209,11618],[5,"BorrowedCursor",11687],[10,"VarInt",11688],[5,"IoSliceMut",11578],[10,"SeriesOpsTime",9822,11689],[10,"PolarsRound",4209,11690],[10,"ChunkedSet",4209,11455],[5,"SchemaDescriptor",11691],[6,"SeekFrom",11578],[10,"VarAggSeries",4209,11692],[5,"StringNameSpace",11693],[10,"TakeChunked",4209,11559],[5,"IRPlan",11556],[10,"ToDummies",4209,11694],[10,"PolarsTruncate",4209,11695],[5,"AllocError",11567],[5,"SchemaInferenceResult",10735,11696],[10,"PolarsUpsample",4209,11697],[10,"VecHash",4209,11698],[6,"JsonFormat",4209,11614],[5,"BTreeMap",11699],[10,"WriteDataFrameToFile",11657],[5,"IoSlice",11578],[10,"ArrayNameSpace",9708,11700],[10,"AsArray",9708,11701],[6,"Buffer",9744,11702],[10,"AsString",9888,11580],[6,"Pattern",9888,11703],[5,"DatetimeInfer",9928,11704],[10,"StrpTimeParser",9928,11704],[17,"Error"],[10,"TryFromWithUnit",9928,11704],[6,"CloudType",9959,11637],[5,"AnonymousBuilder",10388,11705],[6,"RollingFunction",10630,11706],[6,"RollingFunctionBy",10660,11707],[5,"MutableNullArray",10704,11708],[5,"MutableBitmap",11709],[10,"AsSeries",10768,11601],[5,"Utf8Array",11710],[5,"SeriesIter",10883,11711],[5,"Rc",11712],[8,"FillNullLimit",1680],[10,"InitHashMaps",1999],[10,"InitHashMaps2",1999],[5,"TrueT",1999],[8,"PolarsResult",3450],[15,"IO",9639],[15,"Context",9639],[15,"Count",9633],[15,"Slice",9634],[8,"ChunkJoinOptIds",4209],[8,"DynArgs",4209],[10,"ListFromIter",4209],[15,"Quantile",9512],[15,"Min",9512],[15,"Max",9512],[15,"IsBetween",10583],[15,"Any",10583],[15,"All",10583],[15,"GroupBy",9522],[15,"Union",9522],[15,"Sort",9522],[15,"Cache",9522],[15,"ExtContext",9522],[15,"DataFrameScan",9522],[15,"IR",9522],[15,"Select",9522],[15,"HStack",9522],[15,"Scan",9522],[15,"MapFunction",9522],[15,"Filter",9522],[15,"Distinct",9522],[15,"Slice",9522],[15,"Sink",9522],[15,"Join",9522],[15,"HConcat",9522],[15,"SortBy",9576],[15,"Filter",9576],[15,"Cast",9576],[15,"Sort",9576],[15,"Gather",9576],[15,"RenameAlias",9576],[15,"Ternary",9576],[15,"Function",9576],[15,"Window",9576],[15,"AnonymousFunction",9576],[15,"Slice",9576],[15,"BinaryExpr",9576],[15,"Round",10586],[15,"RoundSF",10586],[15,"Clip",10586],[15,"BackwardFill",10586],[15,"ForwardFill",10586],[15,"Random",10586],[15,"GatherEvery",10586],[15,"ValueCounts",10586],[15,"Rank",10586],[15,"ReplaceStrict",10586],[15,"CumCount",10586],[15,"CumSum",10586],[15,"CumProd",10586],[15,"CumMin",10586],[15,"CumMax",10586],[15,"Range",9636],[15,"ConcatHorizontal",10608],[15,"ConcatVertical",10608],[15,"ExtractGroups",10608],[15,"SplitExact",10608],[15,"Contains",10608],[15,"Find",10608],[15,"Replace",10608],[15,"DatetimeFunction",10622],[5,"Utf8Field",9744],[5,"CategoricalField",9744],[5,"DatetimeField",9744],[15,"Datetime",9818],[10,"Utf8FromIter",10879],[10,"BinaryFromIter",10879],[6,"BitRepr",10883]],"r":[[1,11713],[2,11713],[3,11713],[4,11713],[6,11522],[7,11713],[8,11713],[9,11713],[13,11713],[14,11713],[16,11522],[17,11398],[18,11398],[19,11398],[24,11714],[115,11398],[138,11398],[139,11398],[167,11398],[169,11398],[222,11398],[275,11398],[424,11398],[473,11398],[578,11398],[581,11398],[721,11398],[851,11465],[879,11466],[880,11466],[881,11473],[882,11473],[883,11475],[884,11470],[885,11471],[886,11467],[887,11469],[888,11472],[889,11468],[890,11471],[891,11470],[892,11476],[893,11477],[894,11473],[1031,11470],[1047,11469],[1075,11470],[1140,11466],[1141,11466],[1142,11471],[1143,11467],[1144,11469],[1145,11472],[1146,11468],[1147,11471],[1155,11469],[1157,11420],[1187,11481],[1188,11481],[1201,11482],[1203,11483],[1204,11483],[1207,11445],[1208,11445],[1209,11445],[1210,11445],[1246,11445],[1262,11715],[1263,11715],[1269,11448],[1274,11425],[1275,11487],[1276,11486],[1277,11425],[1278,11425],[1279,11425],[1280,11447],[1281,11450],[1552,11407],[1553,11407],[1554,11407],[1555,11407],[1567,11407],[1597,11407],[1598,11716],[1629,11494],[1652,11495],[1653,11495],[1654,11495],[1655,11495],[1667,11495],[1668,11495],[1669,11495],[1672,11495],[1674,11495],[1681,11496],[1682,11496],[1683,11496],[1684,11496],[1685,11496],[1686,11496],[1687,11496],[1688,11496],[1689,11496],[1690,11496],[1691,11496],[1692,11496],[1693,11496],[1694,11496],[1695,11496],[1696,11496],[1697,11496],[1698,11496],[1699,11496],[1700,11496],[1701,11496],[1702,11496],[1703,11496],[1704,11496],[1705,11496],[1706,11496],[1707,11496],[1710,11496],[1711,11496],[1720,11496],[1721,11497],[1723,11419],[1724,11419],[1737,11496],[1784,11496],[1787,11496],[1796,11496],[1799,11496],[1842,11496],[1848,11496],[1885,11496],[1887,11498],[1891,11498],[1892,11498],[1893,11498],[1894,11498],[1895,11498],[1896,11498],[1897,11498],[1898,11498],[1899,11498],[1900,11498],[1901,11498],[1902,11498],[1903,11498],[1904,11498],[1905,11498],[1906,11498],[1907,11498],[1908,11498],[1909,11498],[1910,11498],[1911,11498],[1912,11498],[1913,11498],[1914,11498],[1915,11498],[1916,11498],[1917,11498],[1918,11498],[1919,11498],[1920,11498],[1921,11498],[1922,11498],[1923,11717],[1924,11717],[1925,11718],[1926,11718],[1927,11718],[1931,11502],[1933,11502],[1953,11502],[1959,11497],[1960,11719],[1961,11719],[1962,11719],[1963,11719],[1966,11720],[1967,11721],[1968,11721],[1969,11721],[1970,11721],[1971,11721],[1972,11721],[1973,11721],[1974,11721],[1975,11497],[1976,11419],[1977,11419],[1988,11722],[1989,11723],[1990,11723],[1991,11723],[1992,11722],[1993,11722],[1994,11724],[1995,11722],[1996,11723],[1997,11723],[1998,11723],[2000,11438],[2004,11397],[2005,11510],[2006,11510],[2007,11510],[2008,11491],[2010,11417],[2014,11397],[2016,11397],[2017,11397],[2019,11397],[2024,11397],[2025,11397],[2026,11508],[2029,11508],[2030,11509],[2031,11513],[2032,11512],[2033,11397],[2034,11417],[2035,11417],[2036,11417],[2037,11417],[2042,11725],[2043,11397],[2046,11726],[2047,11397],[2052,11727],[2053,11397],[2058,11728],[2059,11397],[2063,11397],[2064,11452],[2065,11452],[2068,11397],[2074,11397],[2075,11397],[2079,11397],[2080,11397],[2081,11438],[2083,11513],[2087,11729],[2088,11684],[2089,11729],[2090,11729],[2091,11730],[2092,11729],[2094,11397],[2095,11397],[2099,11397],[2100,11397],[2104,11397],[2105,11397],[2109,11397],[2110,11397],[2114,11397],[2115,11397],[2117,11520],[2128,11397],[2129,11397],[2131,11441],[2132,11441],[2144,11397],[2147,11397],[2149,11397],[2150,11438],[2154,11730],[2155,11730],[2156,11729],[2157,11730],[2158,11730],[2159,11397],[2160,11397],[2161,11397],[2162,11397],[2164,11512],[2167,11499],[2171,11397],[2173,11397],[2178,11397],[2183,11731],[2184,11397],[2185,11442],[2186,11417],[2189,11397],[2193,11397],[2194,11397],[2198,11397],[2199,11397],[2203,11397],[2204,11397],[2208,11397],[2209,11397],[2213,11417],[2379,11513],[2392,11441],[2536,11417],[3047,11513],[3048,11513],[3052,11417],[3406,11508],[3407,11508],[3408,11509],[3409,11513],[3410,11512],[3412,11513],[3416,11512],[3417,11513],[3419,11513],[3420,11513],[3421,11508],[3422,11508],[3423,11512],[3428,11512],[3429,11522],[3435,11522],[3438,11522],[3446,11522],[3456,11399],[3463,11399],[3464,11399],[3465,11523],[3481,11399],[3494,11399],[3510,11523],[3517,11399],[3518,11399],[3519,11399],[3520,11399],[3521,11399],[3522,11523],[3523,11399],[3542,11732],[3543,11732],[3544,11732],[3546,11464],[3551,11464],[3552,11464],[3554,11464],[3555,11464],[3630,11464],[3661,11464],[3725,11464],[3808,11541],[3838,11406],[3841,11535],[3842,11535],[3844,11406],[3845,11406],[3846,11406],[3847,11406],[3848,11406],[3849,11406],[3852,11406],[3854,11546],[3866,11406],[3875,11535],[3947,11535],[3957,11535],[4081,11551],[4082,11552],[4083,11552],[4084,11552],[4085,11552],[4086,11552],[4087,11552],[4088,11552],[4089,11552],[4090,11552],[4094,11553],[4099,11554],[4100,11554],[4120,11534],[4154,11534],[4175,11534],[4189,11534],[4190,11534],[4191,11534],[4207,11733],[4208,11734],[4212,11564],[4219,11566],[4221,11635],[4224,11568],[4225,11568],[4226,11633],[4232,11438],[4233,11449],[4234,11573],[4237,11465],[4242,11397],[4243,11510],[4245,11510],[4246,11510],[4247,11574],[4248,11409],[4249,11491],[4251,11533],[4253,11579],[4254,11582],[4256,11613],[4257,11417],[4258,11585],[4260,11613],[4261,11678],[4262,11613],[4265,11735],[4271,11588],[4272,11592],[4277,11397],[4278,11473],[4281,11639],[4283,11397],[4284,11397],[4286,11397],[4287,11570],[4294,11397],[4295,11475],[4296,11622],[4297,11397],[4298,11406],[4301,11607],[4302,11609],[4304,11619],[4310,11508],[4314,11508],[4315,11509],[4316,11623],[4317,11513],[4318,11599],[4319,11512],[4320,11397],[4324,11621],[4325,11621],[4326,11496],[4327,11682],[4328,11496],[4329,11496],[4330,11496],[4331,11496],[4332,11496],[4333,11496],[4334,11496],[4335,11496],[4336,11496],[4337,11496],[4338,11496],[4339,11496],[4340,11456],[4341,11558],[4342,11496],[4343,11496],[4344,11496],[4345,11496],[4346,11496],[4347,11496],[4348,11496],[4349,11496],[4350,11496],[4351,11496],[4352,11496],[4353,11496],[4354,11398],[4355,11470],[4356,11481],[4357,11481],[4358,11455],[4360,11617],[4361,11608],[4369,11610],[4370,11417],[4382,11642],[4383,11610],[4384,11610],[4385,11610],[4386,11561],[4387,11589],[4388,11611],[4395,11417],[4396,11417],[4397,11464],[4398,11672],[4399,11560],[4403,11417],[4411,11725],[4412,11644],[4414,11397],[4418,11628],[4419,11726],[4421,11645],[4422,11397],[4429,11727],[4430,11397],[4432,11559],[4439,11620],[4443,11542],[4449,11628],[4450,11728],[4451,11646],[4452,11397],[4453,11634],[4454,11536],[4464,11564],[4468,11564],[4469,11643],[4470,11680],[4479,11735],[4480,11735],[4481,11397],[4482,11452],[4486,11452],[4487,11576],[4488,11680],[4489,11632],[4490,11736],[4492,11496],[4493,11496],[4503,11397],[4511,11397],[4512,11397],[4517,11397],[4518,11397],[4526,11668],[4527,11668],[4528,11668],[4532,11572],[4533,11570],[4537,11438],[4539,11570],[4541,11513],[4542,11535],[4544,11535],[4546,11406],[4547,11406],[4548,11406],[4549,11406],[4550,11406],[4551,11406],[4556,11619],[4566,11729],[4567,11735],[4573,11684],[4574,11729],[4575,11406],[4576,11456],[4577,11729],[4580,11597],[4582,11530],[4583,11538],[4584,11684],[4585,11730],[4586,11729],[4588,11558],[4591,11397],[4592,11397],[4597,11397],[4598,11397],[4603,11397],[4604,11397],[4609,11397],[4610,11397],[4615,11397],[4616,11397],[4620,11615],[4622,11546],[4623,11537],[4624,11654],[4625,11520],[4626,11531],[4627,11503],[4629,11590],[4630,11612],[4631,11612],[4632,11577],[4633,11577],[4634,11577],[4635,11590],[4636,11590],[4639,11496],[4643,11496],[4657,11558],[4658,11537],[4659,11558],[4660,11557],[4661,11629],[4663,11558],[4664,11558],[4667,11614],[4668,11640],[4670,11614],[4671,11614],[4672,11614],[4676,11608],[4678,11737],[4680,11737],[4681,11737],[4687,11602],[4688,11636],[4689,11537],[4690,11537],[4691,11604],[4698,11558],[4703,11405],[4710,11471],[4711,11467],[4712,11469],[4713,11397],[4715,11738],[4716,11575],[4717,11654],[4718,11679],[4719,11468],[4720,11471],[4721,11397],[4722,11631],[4724,11631],[4726,11441],[4729,11441],[4778,11631],[4783,11671],[4784,11671],[4796,11629],[4798,11470],[4800,11503],[4801,11635],[4813,11631],[4821,11610],[4822,11456],[4823,11456],[4824,11405],[4825,11421],[4826,11397],[4829,11397],[4831,11397],[4836,11564],[4837,11566],[4845,11588],[4846,11438],[4848,11739],[4851,11616],[4852,11619],[4853,11616],[4854,11591],[4856,11619],[4857,11593],[4860,11730],[4861,11730],[4862,11729],[4863,11730],[4864,11730],[4866,11397],[4867,11399],[4868,11397],[4869,11397],[4870,11445],[4871,11397],[4872,11407],[4873,11399],[4874,11690],[4875,11536],[4876,11695],[4878,11697],[4880,11625],[4882,11477],[4885,11683],[4886,11453],[4888,11611],[4897,11618],[4898,11618],[4899,11496],[4901,11570],[4909,11512],[4919,11629],[4922,11536],[4923,11606],[4924,11454],[4925,11634],[4926,11740],[4927,11634],[4932,11600],[4933,11741],[4941,11446],[4944,11569],[4945,11603],[4946,11605],[4947,11530],[4950,11530],[4951,11530],[4952,11502],[4956,11565],[4958,11657],[4959,11657],[4960,11611],[4961,11401],[4963,11570],[4964,11673],[4965,11652],[4966,11689],[4967,11618],[4968,11584],[4969,11444],[4970,11570],[4983,11497],[4984,11406],[4992,11419],[4993,11419],[4994,11570],[4998,11685],[5000,11608],[5002,11499],[5003,11630],[5011,11522],[5013,11397],[5014,11473],[5016,11626],[5017,11580],[5018,11587],[5020,11397],[5027,11629],[5031,11540],[5032,11714],[5035,11627],[5036,11656],[5038,11397],[5048,11559],[5050,11624],[5051,11601],[5053,11621],[5061,11731],[5062,11674],[5064,11397],[5065,11442],[5066,11417],[5070,11694],[5084,11397],[5091,11397],[5092,11397],[5097,11397],[5098,11397],[5103,11397],[5104,11397],[5109,11397],[5110,11397],[5111,11742],[5112,11658],[5116,11633],[5118,11464],[5121,11417],[5122,11541],[5125,11596],[5134,11692],[5135,11698],[5139,11621],[5141,11609],[5144,11629],[5145,11629],[5155,11619],[5249,11743],[5253,11743],[5262,11744],[5273,11535],[5275,11745],[5278,11746],[5289,11746],[5300,11747],[5306,11748],[5309,11749],[5322,11750],[5327,11750],[5330,11496],[5340,11751],[5365,11752],[5369,11753],[5373,11754],[5381,11748],[5383,11621],[5646,11755],[5654,11513],[5659,11753],[5670,11748],[5685,11756],[5688,11757],[5690,11757],[5692,11757],[6016,11758],[6024,11746],[6028,11759],[6029,11745],[6031,11760],[6043,11745],[6052,11742],[6056,11760],[6058,11761],[6061,11760],[6062,11760],[6063,11761],[6064,11761],[6074,11738],[6075,11762],[6081,11763],[6082,11417],[6088,11764],[6090,11746],[6091,11764],[6093,11764],[6095,11764],[6097,11746],[6098,11764],[6105,11713],[6107,11749],[6108,11751],[6109,11628],[6111,11749],[6112,11749],[6113,11723],[6114,11723],[6115,11723],[6181,11738],[6182,11557],[6443,11663],[6445,11713],[6447,11765],[6592,11766],[6593,11748],[6599,11745],[6600,11745],[6602,11628],[6610,11542],[6611,11542],[6612,11530],[6873,11739],[6874,11739],[6875,11739],[6881,11535],[6903,11496],[6941,11748],[6945,11738],[6949,11496],[6954,11767],[7056,11535],[7060,11746],[7064,11761],[7293,11496],[7303,11748],[7305,11496],[7334,11739],[7350,11735],[7362,11608],[7363,11608],[7444,11768],[7455,11769],[7456,11769],[7458,11770],[7469,11745],[7475,11684],[7476,11696],[7612,11749],[7613,11749],[7615,11771],[7616,11615],[7618,11771],[7619,11772],[7771,11617],[7773,11739],[7774,11773],[7783,11774],[7788,11775],[7791,11776],[7799,11753],[7802,11753],[7808,11762],[7844,11748],[7859,11748],[7870,11631],[7917,11513],[7918,11513],[7923,11747],[7934,11748],[7937,11748],[7945,11777],[7946,11735],[7947,11753],[7957,11735],[7958,11753],[7964,11753],[7977,11417],[7988,11753],[8009,11751],[8047,11751],[8058,11778],[8059,11779],[8108,11780],[8130,11753],[8135,11748],[8136,11738],[8168,11735],[8189,11399],[8190,11399],[8191,11399],[8192,11399],[8197,11672],[8206,11753],[8237,11746],[8249,11781],[8250,11782],[8252,11783],[8259,11783],[8260,11783],[8262,11769],[8265,11739],[8355,11755],[8358,11496],[8371,11756],[8426,11496],[8443,11685],[8445,11685],[8463,11768],[8474,11751],[8475,11784],[8477,11784],[8479,11784],[8481,11784],[8483,11784],[8498,11753],[8522,11621],[8526,11749],[9103,11748],[9127,11738],[9288,11621],[9502,11785],[9510,11496],[9659,11551],[9660,11552],[9661,11552],[9662,11552],[9663,11552],[9664,11552],[9665,11552],[9666,11552],[9667,11552],[9668,11552],[9672,11498],[9676,11498],[9677,11498],[9678,11498],[9679,11498],[9680,11498],[9681,11498],[9682,11498],[9683,11498],[9684,11498],[9685,11498],[9686,11498],[9687,11498],[9688,11498],[9689,11498],[9690,11498],[9691,11498],[9692,11498],[9693,11498],[9694,11498],[9695,11498],[9696,11498],[9697,11498],[9698,11498],[9699,11498],[9700,11498],[9701,11498],[9702,11498],[9703,11498],[9704,11498],[9705,11498],[9706,11498],[9707,11498],[9708,11700],[9709,11701],[9727,11595],[9745,11702],[9747,11702],[9750,11702],[9764,11702],[9796,11702],[9821,11599],[9822,11644],[9823,11645],[9824,11646],[9825,11606],[9826,11689],[9827,11580],[9828,11674],[9881,11786],[9888,11580],[9894,11703],[9895,11580],[9919,11580],[9928,11704],[9930,11704],[9931,11704],[9942,11704],[9961,11637],[9962,11637],[9998,11787],[10011,11637],[10012,11637],[10018,11773],[10019,11773],[10020,11788],[10021,11788],[10022,11788],[10023,11788],[10024,11788],[10026,11438],[10030,11397],[10031,11510],[10032,11510],[10033,11510],[10034,11491],[10036,11417],[10040,11397],[10042,11397],[10043,11397],[10045,11397],[10050,11397],[10051,11397],[10052,11508],[10055,11508],[10056,11509],[10057,11513],[10058,11512],[10059,11397],[10060,11417],[10061,11417],[10062,11417],[10063,11417],[10068,11725],[10069,11397],[10072,11726],[10073,11397],[10078,11727],[10079,11397],[10084,11728],[10085,11397],[10089,11397],[10090,11452],[10091,11452],[10094,11397],[10100,11397],[10101,11397],[10105,11397],[10106,11397],[10107,11438],[10109,11513],[10113,11729],[10114,11684],[10115,11729],[10116,11729],[10117,11730],[10118,11729],[10120,11397],[10121,11397],[10125,11397],[10126,11397],[10130,11397],[10131,11397],[10135,11397],[10136,11397],[10140,11397],[10141,11397],[10143,11520],[10154,11397],[10155,11397],[10157,11441],[10158,11441],[10170,11397],[10173,11397],[10175,11397],[10176,11438],[10180,11730],[10181,11730],[10182,11729],[10183,11730],[10184,11730],[10185,11397],[10186,11397],[10187,11397],[10188,11397],[10190,11512],[10193,11499],[10197,11397],[10199,11397],[10204,11397],[10209,11731],[10210,11397],[10211,11442],[10212,11417],[10215,11397],[10219,11397],[10220,11397],[10224,11397],[10225,11397],[10229,11397],[10230,11397],[10234,11397],[10235,11397],[10239,11417],[10252,11513],[10255,11441],[10260,11417],[10277,11513],[10278,11513],[10279,11417],[10297,11508],[10298,11508],[10299,11509],[10300,11513],[10301,11512],[10303,11513],[10307,11512],[10308,11513],[10310,11513],[10311,11513],[10312,11508],[10313,11508],[10314,11512],[10319,11512],[10320,11522],[10321,11522],[10322,11522],[10323,11522],[10324,11769],[10325,11769],[10326,11769],[10327,11668],[10328,11668],[10329,11668],[10333,11651],[10385,11553],[10388,11705],[10408,11717],[10409,11717],[10424,11622],[10427,11623],[10466,11572],[10509,11625],[10541,11626],[10549,11627],[10554,11624],[10579,11572],[10580,11572],[10581,11572],[10582,11572],[10624,11623],[10628,11625],[10634,11706],[10664,11707],[10690,11718],[10691,11718],[10692,11718],[10693,11615],[10696,11615],[10697,11772],[10698,11789],[10699,11790],[10700,11790],[10701,11790],[10702,11790],[10703,11790],[10704,11708],[10735,11696],[10746,11696],[10751,11696],[10752,11696],[10765,11502],[10766,11502],[10767,11502],[10768,11601],[10769,11601],[10790,11497],[10791,11719],[10792,11719],[10793,11719],[10794,11719],[10797,11720],[10798,11721],[10799,11721],[10800,11721],[10801,11721],[10802,11721],[10803,11721],[10804,11721],[10805,11721],[10806,11497],[10807,11419],[10808,11419],[10819,11585],[10820,11685],[10821,11587],[10840,11768],[10848,11685],[10850,11685],[10853,11768],[10859,11784],[10861,11784],[10863,11784],[10865,11784],[10867,11784],[10873,11596],[10879,11791],[10880,11791],[10884,11444],[10885,11496],[10887,11531],[10888,11444],[10892,11401],[10893,11711],[10894,11711],[10895,11444],[10905,11401],[10911,11401],[11100,11401],[11222,11401],[11317,11415],[11318,11415],[11341,11405],[11342,11405],[11343,11405],[11345,11405],[11349,11405],[11362,11421],[11363,11421],[11370,11650]],"b":[[28,"impl-Add%3C%26%5Bu8%5D%3E-for-%26ChunkedArray%3CBinaryType%3E"],[29,"impl-Add-for-ChunkedArray%3CBinaryType%3E"],[30,"impl-Add-for-ChunkedArray%3CStringType%3E"],[31,"impl-Add-for-%26ChunkedArray%3CBooleanType%3E"],[32,"impl-Add%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[33,"impl-Add%3CN%3E-for-%26ChunkedArray%3CT%3E"],[34,"impl-Add-for-%26ChunkedArray%3CT%3E"],[35,"impl-Add-for-%26ChunkedArray%3CBinaryType%3E"],[36,"impl-Add-for-ChunkedArray%3CT%3E"],[37,"impl-Add-for-ChunkedArray%3CBooleanType%3E"],[38,"impl-Add%3CN%3E-for-ChunkedArray%3CT%3E"],[39,"impl-Add-for-%26ChunkedArray%3CStringType%3E"],[41,"impl-AggList-for-ChunkedArray%3CListType%3E"],[42,"impl-AggList-for-ChunkedArray%3CT%3E"],[43,"impl-AggList-for-ChunkedArray%3CBinaryType%3E"],[44,"impl-AggList-for-ChunkedArray%3CStringType%3E"],[45,"impl-AggList-for-ChunkedArray%3CFixedSizeListType%3E"],[46,"impl-AggList-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[47,"impl-AggList-for-ChunkedArray%3CBooleanType%3E"],[48,"impl-AggList-for-ChunkedArray%3CStructType%3E"],[51,"impl-ChunkedArray%3CFixedSizeListType%3E"],[52,"impl-ChunkedArray%3CListType%3E"],[53,"impl-ChunkedArray%3CFixedSizeListType%3E"],[54,"impl-ChunkedArray%3CListType%3E"],[58,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[59,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[60,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[61,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[62,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[63,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[65,"impl-ChunkedArray%3CListType%3E"],[66,"impl-ChunkedArray%3CFixedSizeListType%3E"],[68,"impl-ChunkedArray%3CFloat32Type%3E"],[69,"impl-ChunkedArray%3CFloat64Type%3E"],[72,"impl-ChunkApplyKernel%3CPrimitiveArray%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[73,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3Cstr%3E%3E-for-ChunkedArray%3CStringType%3E"],[74,"impl-ChunkApplyKernel%3CBooleanArray%3E-for-ChunkedArray%3CBooleanType%3E"],[75,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3C%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[76,"impl-ChunkApplyKernel%3CPrimitiveArray%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[77,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3Cstr%3E%3E-for-ChunkedArray%3CStringType%3E"],[78,"impl-ChunkApplyKernel%3CBooleanArray%3E-for-ChunkedArray%3CBooleanType%3E"],[79,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3C%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[80,"impl-ChunkedArray%3CBinaryType%3E"],[81,"impl-ChunkedArray%3CT%3E"],[82,"impl-ChunkedArray%3CStringType%3E"],[84,"impl-ChunkedArray%3CListType%3E"],[85,"impl-ChunkedArray%3CFixedSizeListType%3E"],[86,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[87,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[88,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[89,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[90,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[91,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[92,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[93,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[94,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[95,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[96,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[97,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[99,"impl-ChunkSort%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[100,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[101,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[102,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[103,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[104,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[105,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[106,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[107,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[108,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[109,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[110,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[111,"impl-ChunkUnique-for-ChunkedArray%3CBooleanType%3E"],[112,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[113,"impl-ChunkUnique-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[114,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[117,"impl-AsBinary-for-ChunkedArray%3CBinaryType%3E"],[118,"impl-ChunkedArray%3CStringType%3E"],[122,"impl-AsString-for-ChunkedArray%3CStringType%3E"],[123,"impl-AsString-for-ChunkedArray%3CStringType%3E"],[125,"impl-BitAnd-for-ChunkedArray%3CBooleanType%3E"],[126,"impl-BitAnd-for-%26ChunkedArray%3CT%3E"],[127,"impl-BitAnd-for-%26ChunkedArray%3CBooleanType%3E"],[128,"impl-BitOr-for-ChunkedArray%3CBooleanType%3E"],[129,"impl-BitOr-for-%26ChunkedArray%3CBooleanType%3E"],[130,"impl-BitOr-for-%26ChunkedArray%3CT%3E"],[131,"impl-BitXor-for-%26ChunkedArray%3CBooleanType%3E"],[132,"impl-BitXor-for-ChunkedArray%3CBooleanType%3E"],[133,"impl-BitXor-for-%26ChunkedArray%3CT%3E"],[142,"impl-ChunkCast-for-ChunkedArray%3CListType%3E"],[143,"impl-ChunkCast-for-ChunkedArray%3CT%3E"],[144,"impl-ChunkCast-for-ChunkedArray%3CFixedSizeListType%3E"],[145,"impl-ChunkCast-for-ChunkedArray%3CBooleanType%3E"],[146,"impl-ChunkCast-for-ChunkedArray%3CBinaryOffsetType%3E"],[147,"impl-ChunkCast-for-ChunkedArray%3CBinaryType%3E"],[148,"impl-ChunkCast-for-ChunkedArray%3CStringType%3E"],[149,"impl-ChunkCast-for-ChunkedArray%3CT%3E"],[150,"impl-ChunkCast-for-ChunkedArray%3CListType%3E"],[151,"impl-ChunkCast-for-ChunkedArray%3CFixedSizeListType%3E"],[152,"impl-ChunkCast-for-ChunkedArray%3CStringType%3E"],[153,"impl-ChunkCast-for-ChunkedArray%3CBinaryType%3E"],[154,"impl-ChunkCast-for-ChunkedArray%3CBinaryOffsetType%3E"],[155,"impl-ChunkedArray%3CStructType%3E"],[156,"impl-ChunkCast-for-ChunkedArray%3CBooleanType%3E"],[159,"impl-ChunkedArray%3CT%3E"],[160,"impl-Container-for-ChunkedArray%3CT%3E"],[179,"impl-Div%3CN%3E-for-%26ChunkedArray%3CT%3E"],[180,"impl-Div%3CN%3E-for-ChunkedArray%3CT%3E"],[181,"impl-Div-for-%26ChunkedArray%3CT%3E"],[182,"impl-Div-for-ChunkedArray%3CT%3E"],[189,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[190,"impl-ChunkCompare%3C%26ChunkedArray%3CStructType%3E%3E-for-ChunkedArray%3CStructType%3E"],[191,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[192,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[193,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[194,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[195,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[196,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[197,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[198,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[199,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[200,"impl-ChunkCompare%3C%26ChunkedArray%3CStructType%3E%3E-for-ChunkedArray%3CStructType%3E"],[201,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[202,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[203,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[204,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[205,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[206,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[207,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[208,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[209,"impl-ChunkExplode-for-ChunkedArray%3CFixedSizeListType%3E"],[210,"impl-ChunkExplode-for-ChunkedArray%3CListType%3E"],[214,"impl-ChunkFillNullValue%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[215,"impl-ChunkFillNullValue%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[216,"impl-ChunkFillNullValue%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[217,"impl-ChunkFilter%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[218,"impl-ChunkFilter%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[219,"impl-ChunkFilter%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[220,"impl-ChunkFilter%3CT%3E-for-ChunkedArray%3CT%3E"],[223,"impl-Debug-for-ChunkedArray%3CBooleanType%3E"],[224,"impl-Debug-for-ChunkedArray%3CBinaryType%3E"],[225,"impl-Debug-for-ChunkedArray%3CT%3E"],[226,"impl-Debug-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[227,"impl-Debug-for-ChunkedArray%3CFixedSizeListType%3E"],[228,"impl-Debug-for-ChunkedArray%3CListType%3E"],[229,"impl-Debug-for-ChunkedArray%3CStringType%3E"],[231,"impl-ChunkedArray%3CListType%3E"],[232,"impl-ChunkedArray%3CFixedSizeListType%3E"],[241,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[242,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[243,"impl-FromIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[244,"impl-FromIterator%3COption%3CBox%3Cdyn+Array%3E%3E%3E-for-ChunkedArray%3CListType%3E"],[245,"impl-FromIterator%3COption%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[246,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[247,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[248,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[249,"impl-FromIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[250,"impl-FromIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[251,"impl-FromIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[252,"impl-FromIterator%3C(Vec%3C%3CT+as+PolarsNumericType%3E::Native%3E,+Option%3CBitmap%3E)%3E-for-ChunkedArray%3CT%3E"],[253,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[254,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[255,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[256,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[257,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[258,"impl-FromTrustedLenIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[259,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[260,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[261,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[262,"impl-FromTrustedLenIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[263,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[264,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[265,"impl-FromTrustedLenIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[266,"impl-FromTrustedLenIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[267,"impl-FromTrustedLenIterator%3COption%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[268,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[269,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[270,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[271,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[272,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[273,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[274,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[276,"impl-FromParallelIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[277,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[278,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[279,"impl-FromParallelIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[280,"impl-FromParallelIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[281,"impl-FromParallelIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[282,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[283,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[286,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[287,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[288,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[289,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[290,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[291,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[292,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[293,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[294,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[295,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[296,"impl-FromIteratorReversed%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[297,"impl-FromIteratorReversed%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[300,"impl-ChunkFull%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[301,"impl-ChunkFull%3CT%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[302,"impl-ChunkFull%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[303,"impl-ChunkFull%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[304,"impl-ChunkFull%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[305,"impl-ChunkFull%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[306,"impl-ChunkFull%3C%26Series%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[307,"impl-ChunkFull%3C%26Series%3E-for-ChunkedArray%3CListType%3E"],[308,"impl-ChunkFullNull-for-ChunkedArray%3CBinaryOffsetType%3E"],[309,"impl-ChunkFullNull-for-ChunkedArray%3CBooleanType%3E"],[310,"impl-ChunkFullNull-for-ChunkedArray%3CStringType%3E"],[311,"impl-ChunkFullNull-for-ChunkedArray%3CBinaryType%3E"],[312,"impl-ChunkFullNull-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[313,"impl-ChunkFullNull-for-ChunkedArray%3CListType%3E"],[314,"impl-ChunkFullNull-for-ChunkedArray%3CT%3E"],[315,"impl-ChunkFullNull-for-ChunkedArray%3CFixedSizeListType%3E"],[316,"impl-ChunkFullNull-for-ChunkedArray%3CStructType%3E"],[318,"impl-ChunkedArray%3CFixedSizeListType%3E"],[319,"impl-ChunkedArray%3CListType%3E"],[321,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryOffsetType%3E"],[322,"impl-ChunkAnyValue-for-ChunkedArray%3CListType%3E"],[323,"impl-ChunkAnyValue-for-ChunkedArray%3CBooleanType%3E"],[324,"impl-ChunkAnyValue-for-ChunkedArray%3CStructType%3E"],[325,"impl-ChunkAnyValue-for-ChunkedArray%3CStringType%3E"],[326,"impl-ChunkAnyValue-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[327,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryType%3E"],[328,"impl-ChunkAnyValue-for-ChunkedArray%3CFixedSizeListType%3E"],[329,"impl-ChunkAnyValue-for-ChunkedArray%3CT%3E"],[330,"impl-ChunkAnyValue-for-ChunkedArray%3CListType%3E"],[331,"impl-ChunkAnyValue-for-ChunkedArray%3CT%3E"],[332,"impl-ChunkAnyValue-for-ChunkedArray%3CStringType%3E"],[333,"impl-ChunkAnyValue-for-ChunkedArray%3CFixedSizeListType%3E"],[334,"impl-ChunkAnyValue-for-ChunkedArray%3CBooleanType%3E"],[335,"impl-ChunkAnyValue-for-ChunkedArray%3CStructType%3E"],[336,"impl-ChunkAnyValue-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[337,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryOffsetType%3E"],[338,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryType%3E"],[339,"impl-ChunkedArray%3CListType%3E"],[340,"impl-ChunkedArray%3CFixedSizeListType%3E"],[344,"impl-ChunkedArray%3CFixedSizeListType%3E"],[345,"impl-ChunkedArray%3CListType%3E"],[353,"impl-ValueSize-for-ChunkedArray%3CListType%3E"],[354,"impl-ValueSize-for-ChunkedArray%3CBinaryOffsetType%3E"],[355,"impl-ValueSize-for-ChunkedArray%3CFixedSizeListType%3E"],[356,"impl-ValueSize-for-ChunkedArray%3CStringType%3E"],[357,"impl-IntoGroupsProxy-for-ChunkedArray%3CBinaryType%3E"],[358,"impl-IntoGroupsProxy-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[359,"impl-IntoGroupsProxy-for-ChunkedArray%3CStringType%3E"],[360,"impl-IntoGroupsProxy-for-ChunkedArray%3CFixedSizeListType%3E"],[361,"impl-IntoGroupsProxy-for-ChunkedArray%3CListType%3E"],[362,"impl-IntoGroupsProxy-for-ChunkedArray%3CBooleanType%3E"],[363,"impl-IntoGroupsProxy-for-ChunkedArray%3CT%3E"],[364,"impl-IntoGroupsProxy-for-ChunkedArray%3CBinaryOffsetType%3E"],[366,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[367,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[368,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[369,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[370,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[371,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[372,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[373,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[374,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[375,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[376,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[377,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[378,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[379,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[380,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[381,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[382,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[383,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[389,"impl-ChunkedArray%3CFixedSizeListType%3E"],[390,"impl-ChunkedArray%3CListType%3E"],[399,"impl-IntoIterator-for-%26ChunkedArray%3CFixedSizeListType%3E"],[400,"impl-IntoIterator-for-%26ChunkedArray%3CT%3E"],[401,"impl-IntoIterator-for-%26ChunkedArray%3CBinaryType%3E"],[402,"impl-IntoIterator-for-%26ChunkedArray%3CBooleanType%3E"],[403,"impl-IntoIterator-for-%26ChunkedArray%3CListType%3E"],[404,"impl-IntoIterator-for-%26ChunkedArray%3CStringType%3E"],[405,"impl-IntoIterator-for-%26ChunkedArray%3CObjectType%3CT%3E%3E"],[406,"impl-IntoIterator-for-%26ChunkedArray%3CBinaryOffsetType%3E"],[408,"impl-IntoSeries-for-ChunkedArray%3CT%3E"],[409,"impl-IntoSeries-for-ChunkedArray%3CInt128Type%3E"],[428,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[429,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[430,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[431,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[432,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[433,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[434,"impl-Container-for-ChunkedArray%3CT%3E"],[435,"impl-ChunkedArray%3CT%3E"],[440,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[441,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[442,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[443,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[444,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[445,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[446,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[447,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[448,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[449,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[450,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[451,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[452,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[453,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[454,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[455,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[456,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[457,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[458,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[459,"impl-ChunkedArray%3CBooleanType%3E"],[460,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[461,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[462,"impl-ChunkAggSeries-for-ChunkedArray%3CStringType%3E"],[463,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[464,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[465,"impl-ChunkedArray%3CBooleanType%3E"],[466,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CFloat64Type%3E"],[467,"impl-ChunkQuantile%3Cf32%3E-for-ChunkedArray%3CFloat32Type%3E"],[468,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CT%3E"],[469,"impl-QuantileAggSeries-for-ChunkedArray%3CT%3E"],[470,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[471,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[479,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[480,"impl-ChunkedArray%3CBooleanType%3E"],[482,"impl-ChunkAggSeries-for-ChunkedArray%3CStringType%3E"],[483,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[484,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[485,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[486,"impl-ChunkedArray%3CT%3E"],[487,"impl-ChunkedArray%3CBooleanType%3E"],[488,"impl-Mul%3CN%3E-for-%26ChunkedArray%3CT%3E"],[489,"impl-Mul%3CN%3E-for-ChunkedArray%3CT%3E"],[490,"impl-Mul-for-%26ChunkedArray%3CT%3E"],[491,"impl-Mul-for-ChunkedArray%3CT%3E"],[494,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[495,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[496,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[498,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-ChunkedArray%3CStringType%3E"],[499,"impl-NamedFrom%3CT,+%5BOption%3Ci8%3E%5D%3E-for-ChunkedArray%3CInt8Type%3E"],[500,"impl-NamedFrom%3CT,+%5BOption%3Cu16%3E%5D%3E-for-ChunkedArray%3CUInt16Type%3E"],[501,"impl-NamedFrom%3CT,+%5BOption%3Cu8%3E%5D%3E-for-ChunkedArray%3CUInt8Type%3E"],[502,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[503,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[504,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[505,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[506,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[507,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-ChunkedArray%3CUInt32Type%3E"],[508,"impl-NamedFrom%3CT,+%5Bi128%5D%3E-for-ChunkedArray%3CInt128Type%3E"],[509,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[510,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[511,"impl-NamedFrom%3CT,+%5Bi16%5D%3E-for-ChunkedArray%3CInt16Type%3E"],[512,"impl-NamedFrom%3CT,+%5Bi8%5D%3E-for-ChunkedArray%3CInt8Type%3E"],[513,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[514,"impl-NamedFrom%3CT,+%5BOption%3Ci16%3E%5D%3E-for-ChunkedArray%3CInt16Type%3E"],[515,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[516,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[517,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[518,"impl-NamedFrom%3CT,+%5Bu16%5D%3E-for-ChunkedArray%3CUInt16Type%3E"],[519,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-ChunkedArray%3CUInt64Type%3E"],[520,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[521,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[522,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-ChunkedArray%3CStringType%3E"],[523,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[524,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[525,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[526,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-ChunkedArray%3CInt32Type%3E"],[527,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[528,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[529,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-ChunkedArray%3CInt64Type%3E"],[530,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[531,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[532,"impl-NamedFrom%3C%26%5BT%5D,+%26%5BT%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[533,"impl-NamedFrom%3CS,+%5BOption%3CT%3E%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[534,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[535,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[536,"impl-NamedFrom%3CT,+%5BOption%3Ci128%3E%5D%3E-for-ChunkedArray%3CInt128Type%3E"],[537,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[538,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[539,"impl-NamedFrom%3CT,+%5Bu8%5D%3E-for-ChunkedArray%3CUInt8Type%3E"],[541,"impl-ChunkExpandAtIndex%3CT%3E-for-ChunkedArray%3CT%3E"],[542,"impl-ChunkExpandAtIndex%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[543,"impl-ChunkExpandAtIndex%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[544,"impl-ChunkExpandAtIndex%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[545,"impl-ChunkExpandAtIndex%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[546,"impl-ChunkExpandAtIndex%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[547,"impl-ChunkExpandAtIndex%3CListType%3E-for-ChunkedArray%3CListType%3E"],[548,"impl-ChunkExpandAtIndex%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[549,"impl-ChunkExpandAtIndex%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[555,"impl-Not-for-ChunkedArray%3CBooleanType%3E"],[556,"impl-Not-for-%26ChunkedArray%3CBooleanType%3E"],[557,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[558,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[559,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[560,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[561,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[562,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[563,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[564,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[565,"impl-ChunkCompare%3C%26ChunkedArray%3CStructType%3E%3E-for-ChunkedArray%3CStructType%3E"],[566,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[567,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[568,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[569,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[570,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[571,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[572,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[573,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[574,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[575,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[576,"impl-ChunkCompare%3C%26ChunkedArray%3CStructType%3E%3E-for-ChunkedArray%3CStructType%3E"],[579,"impl-ChunkExplode-for-ChunkedArray%3CListType%3E"],[580,"impl-ChunkExplode-for-ChunkedArray%3CFixedSizeListType%3E"],[582,"impl-ChunkedArray%3CListType%3E"],[583,"impl-ChunkedArray%3CStringType%3E"],[584,"impl-ChunkedArray%3CListType%3E"],[585,"impl-ChunkedArray%3CStringType%3E"],[588,"impl-ChunkQuantile%3Cf32%3E-for-ChunkedArray%3CFloat32Type%3E"],[589,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CT%3E"],[590,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CFloat64Type%3E"],[591,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[592,"impl-QuantileAggSeries-for-ChunkedArray%3CT%3E"],[593,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[600,"impl-Reinterpret-for-ChunkedArray%3CUInt64Type%3E"],[601,"impl-Reinterpret-for-ChunkedArray%3CInt64Type%3E"],[602,"impl-Reinterpret-for-ChunkedArray%3CInt8Type%3E"],[603,"impl-Reinterpret-for-ChunkedArray%3CInt16Type%3E"],[604,"impl-Reinterpret-for-ChunkedArray%3CUInt32Type%3E"],[605,"impl-Reinterpret-for-ChunkedArray%3CInt32Type%3E"],[606,"impl-Reinterpret-for-ChunkedArray%3CFloat32Type%3E"],[607,"impl-Reinterpret-for-ChunkedArray%3CUInt8Type%3E"],[608,"impl-Reinterpret-for-ChunkedArray%3CUInt16Type%3E"],[609,"impl-Reinterpret-for-ChunkedArray%3CListType%3E"],[610,"impl-Reinterpret-for-ChunkedArray%3CFloat64Type%3E"],[611,"impl-Reinterpret-for-ChunkedArray%3CInt32Type%3E"],[612,"impl-Reinterpret-for-ChunkedArray%3CInt64Type%3E"],[613,"impl-Reinterpret-for-ChunkedArray%3CUInt16Type%3E"],[614,"impl-Reinterpret-for-ChunkedArray%3CFloat64Type%3E"],[615,"impl-Reinterpret-for-ChunkedArray%3CInt8Type%3E"],[616,"impl-Reinterpret-for-ChunkedArray%3CListType%3E"],[617,"impl-Reinterpret-for-ChunkedArray%3CUInt8Type%3E"],[618,"impl-Reinterpret-for-ChunkedArray%3CFloat32Type%3E"],[619,"impl-Reinterpret-for-ChunkedArray%3CInt16Type%3E"],[620,"impl-Reinterpret-for-ChunkedArray%3CUInt64Type%3E"],[621,"impl-Reinterpret-for-ChunkedArray%3CUInt32Type%3E"],[622,"impl-Rem%3CN%3E-for-%26ChunkedArray%3CT%3E"],[623,"impl-Rem-for-%26ChunkedArray%3CT%3E"],[624,"impl-Rem%3CN%3E-for-ChunkedArray%3CT%3E"],[625,"impl-Rem-for-ChunkedArray%3CT%3E"],[628,"impl-ChunkReverse-for-ChunkedArray%3CT%3E"],[629,"impl-ChunkReverse-for-ChunkedArray%3CBooleanType%3E"],[630,"impl-ChunkReverse-for-ChunkedArray%3CBinaryType%3E"],[631,"impl-ChunkReverse-for-ChunkedArray%3CStringType%3E"],[632,"impl-ChunkReverse-for-ChunkedArray%3CBinaryOffsetType%3E"],[633,"impl-ChunkReverse-for-ChunkedArray%3CFixedSizeListType%3E"],[634,"impl-ChunkReverse-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[635,"impl-ChunkReverse-for-ChunkedArray%3CListType%3E"],[640,"impl-ChunkedSet%3Cbool%3E-for-%26ChunkedArray%3CBooleanType%3E"],[641,"impl-ChunkedSet%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-%26mut+ChunkedArray%3CT%3E"],[642,"impl-ChunkedSet%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[643,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[644,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[645,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[646,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[647,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[648,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[649,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[650,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[651,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[652,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[653,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[654,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[660,"impl-ChunkShift%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[661,"impl-ChunkShift%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[662,"impl-ChunkShift%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[663,"impl-ChunkShift%3CListType%3E-for-ChunkedArray%3CListType%3E"],[664,"impl-ChunkShift%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[665,"impl-ChunkShift%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[666,"impl-ChunkShift%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[667,"impl-ChunkShift%3CT%3E-for-ChunkedArray%3CT%3E"],[668,"impl-ChunkShiftFill%3CStringType,+Option%3C%26str%3E%3E-for-ChunkedArray%3CStringType%3E"],[669,"impl-ChunkShiftFill%3CBinaryType,+Option%3C%26%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[670,"impl-ChunkShiftFill%3CBooleanType,+Option%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[671,"impl-ChunkShiftFill%3CT,+Option%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[672,"impl-ChunkShiftFill%3CObjectType%3CT%3E,+Option%3CObjectType%3CT%3E%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[673,"impl-ChunkShiftFill%3CFixedSizeListType,+Option%3C%26Series%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[674,"impl-ChunkShiftFill%3CListType,+Option%3C%26Series%3E%3E-for-ChunkedArray%3CListType%3E"],[675,"impl-ChunkShiftFill%3CBinaryOffsetType,+Option%3C%26%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[677,"impl-ChunkedArray%3CT%3E"],[678,"impl-Container-for-ChunkedArray%3CT%3E"],[679,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[680,"impl-ChunkSort%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[681,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[682,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[683,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[684,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[685,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[686,"impl-ChunkSort%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[687,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[688,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[689,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[690,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[691,"impl-Container-for-ChunkedArray%3CT%3E"],[692,"impl-ChunkedArray%3CT%3E"],[694,"impl-VarAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[695,"impl-VarAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[696,"impl-VarAggSeries-for-ChunkedArray%3CT%3E"],[698,"impl-Sub-for-%26ChunkedArray%3CT%3E"],[699,"impl-Sub%3CN%3E-for-%26ChunkedArray%3CT%3E"],[700,"impl-Sub%3CN%3E-for-ChunkedArray%3CT%3E"],[701,"impl-Sub-for-ChunkedArray%3CT%3E"],[703,"impl-ChunkedArray%3CBooleanType%3E"],[704,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[705,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[706,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[707,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[709,"impl-ChunkTake%3CI%3E-for-ChunkedArray%3CT%3E"],[710,"impl-ChunkTake%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[713,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStringType%3E"],[714,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStructType%3E"],[715,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CT%3E"],[716,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CBinaryType%3E"],[717,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStringType%3E"],[718,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[719,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStructType%3E"],[720,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[725,"impl-ChunkedArray%3CListType%3E"],[726,"impl-ChunkedArray%3CFixedSizeListType%3E"],[727,"impl-ChunkedArray%3CT%3E"],[728,"impl-ChunkedArray%3CListType%3E"],[733,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[734,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[735,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[736,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[737,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[738,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[740,"impl-ChunkedArray%3CFixedSizeListType%3E"],[741,"impl-ChunkedArray%3CListType%3E"],[755,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[756,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[757,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[758,"impl-ChunkUnique-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[759,"impl-ChunkUnique-for-ChunkedArray%3CBooleanType%3E"],[765,"impl-VarAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[766,"impl-VarAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[767,"impl-VarAggSeries-for-ChunkedArray%3CT%3E"],[768,"impl-VecHash-for-ChunkedArray%3CInt128Type%3E"],[769,"impl-VecHash-for-ChunkedArray%3CBooleanType%3E"],[770,"impl-VecHash-for-ChunkedArray%3CBinaryOffsetType%3E"],[771,"impl-VecHash-for-ChunkedArray%3CBinaryType%3E"],[772,"impl-VecHash-for-ChunkedArray%3CInt16Type%3E"],[773,"impl-VecHash-for-ChunkedArray%3CUInt32Type%3E"],[774,"impl-VecHash-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[775,"impl-VecHash-for-ChunkedArray%3CInt32Type%3E"],[776,"impl-VecHash-for-ChunkedArray%3CStringType%3E"],[777,"impl-VecHash-for-ChunkedArray%3CInt64Type%3E"],[778,"impl-VecHash-for-ChunkedArray%3CFloat32Type%3E"],[779,"impl-VecHash-for-ChunkedArray%3CUInt64Type%3E"],[780,"impl-VecHash-for-ChunkedArray%3CFloat64Type%3E"],[781,"impl-VecHash-for-ChunkedArray%3CUInt8Type%3E"],[782,"impl-VecHash-for-ChunkedArray%3CUInt16Type%3E"],[783,"impl-VecHash-for-ChunkedArray%3CInt8Type%3E"],[784,"impl-VecHash-for-ChunkedArray%3CInt16Type%3E"],[785,"impl-VecHash-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[786,"impl-VecHash-for-ChunkedArray%3CFloat64Type%3E"],[787,"impl-VecHash-for-ChunkedArray%3CInt64Type%3E"],[788,"impl-VecHash-for-ChunkedArray%3CInt32Type%3E"],[789,"impl-VecHash-for-ChunkedArray%3CStringType%3E"],[790,"impl-VecHash-for-ChunkedArray%3CBinaryType%3E"],[791,"impl-VecHash-for-ChunkedArray%3CInt8Type%3E"],[792,"impl-VecHash-for-ChunkedArray%3CFloat32Type%3E"],[793,"impl-VecHash-for-ChunkedArray%3CInt128Type%3E"],[794,"impl-VecHash-for-ChunkedArray%3CUInt8Type%3E"],[795,"impl-VecHash-for-ChunkedArray%3CUInt16Type%3E"],[796,"impl-VecHash-for-ChunkedArray%3CUInt32Type%3E"],[797,"impl-VecHash-for-ChunkedArray%3CBinaryOffsetType%3E"],[798,"impl-VecHash-for-ChunkedArray%3CBooleanType%3E"],[799,"impl-VecHash-for-ChunkedArray%3CUInt64Type%3E"],[811,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[812,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[813,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[814,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[815,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[816,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[817,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[818,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[819,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[820,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[821,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[822,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[823,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[824,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[825,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[826,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[827,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[828,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[829,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[830,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[831,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[832,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[833,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[834,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[835,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[836,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[837,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[838,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[839,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[840,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[841,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[842,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[843,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[844,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[845,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[846,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[1026,"impl-BinViewChunkedBuilder%3C%5Bu8%5D%3E"],[1027,"impl-BinViewChunkedBuilder%3Cstr%3E"],[1302,"impl-Flags-for-MetadataProperties"],[1303,"impl-MetadataProperties"],[1304,"impl-MetadataFlags"],[1305,"impl-Flags-for-MetadataFlags"],[1370,"impl-Metadata%3CT%3E"],[1371,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1396,"impl-UpperHex-for-MetadataProperties"],[1397,"impl-Binary-for-MetadataProperties"],[1398,"impl-Debug-for-MetadataProperties"],[1399,"impl-Octal-for-MetadataProperties"],[1400,"impl-LowerHex-for-MetadataProperties"],[1401,"impl-UpperHex-for-MetadataFlags"],[1402,"impl-LowerHex-for-MetadataFlags"],[1403,"impl-Binary-for-MetadataFlags"],[1404,"impl-Octal-for-MetadataFlags"],[1405,"impl-Debug-for-MetadataFlags"],[1415,"impl-Flags-for-MetadataProperties"],[1416,"impl-MetadataProperties"],[1417,"impl-MetadataFlags"],[1418,"impl-Flags-for-MetadataFlags"],[1431,"impl-Metadata%3CT%3E"],[1432,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1475,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1476,"impl-Metadata%3CT%3E"],[1480,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1481,"impl-Metadata%3CT%3E"],[1558,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1559,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1593,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1594,"impl-ObjectArray%3CT%3E"],[1609,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1610,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1620,"impl-ObjectArray%3CT%3E"],[1621,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1623,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1624,"impl-ObjectArray%3CT%3E"],[1626,"impl-ObjectArray%3CT%3E"],[1627,"impl-Array-for-ObjectArray%3CT%3E"],[1630,"impl-ObjectChunkedBuilder%3CT%3E"],[1631,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1633,"impl-ObjectChunkedBuilder%3CT%3E"],[1634,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[2383,"impl-Logical%3CDurationType,+Int64Type%3E"],[2384,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[2386,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2387,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2388,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2389,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2390,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2692,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2693,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2694,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2695,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2696,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2703,"impl-PartialEq%3CArrowDataType%3E-for-DataType"],[2704,"impl-PartialEq-for-DataType"],[2711,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2712,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2713,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2714,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2715,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2716,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2749,"impl-Debug-for-AnyValue%3C\'a%3E"],[2750,"impl-Display-for-AnyValue%3C\'_%3E"],[2752,"impl-Debug-for-DataType"],[2753,"impl-Display-for-DataType"],[2756,"impl-Display-for-TimeUnit"],[2757,"impl-Debug-for-TimeUnit"],[2762,"impl-From%3CChunkedArray%3CInt32Type%3E%3E-for-Logical%3CDateType,+Int32Type%3E"],[2763,"impl-From%3CChunkedArray%3CInt64Type%3E%3E-for-Logical%3CTimeType,+Int64Type%3E"],[2778,"impl-From%3CK%3E-for-AnyValue%3C\'static%3E"],[2779,"impl-From%3COption%3CT%3E%3E-for-AnyValue%3C\'a%3E"],[2780,"impl-From%3Cbool%3E-for-AnyValue%3C\'static%3E"],[2781,"impl-From%3C%26str%3E-for-AnyValue%3C\'a%3E"],[2782,"impl-From%3C%26%5Bu8%5D%3E-for-AnyValue%3C\'a%3E"],[2784,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-DataType"],[2785,"impl-From%3CAnyValue%3C\'_%3E%3E-for-DataType"],[2786,"impl-From%3C%26ArrowDataType%3E-for-DataType"],[2789,"impl-From%3C%26ArrowField%3E-for-Field"],[2791,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-Field"],[2814,"impl-From%3CIntegerType%3E-for-ArrowDataType"],[2815,"impl-From%3CPrimitiveType%3E-for-ArrowDataType"],[2838,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2839,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2840,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2841,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2842,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2845,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2846,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2847,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2848,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2849,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2885,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2886,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2887,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2888,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2889,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2890,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2992,"impl-IntoSeries-for-Logical%3CDurationType,+Int64Type%3E"],[2993,"impl-IntoSeries-for-Logical%3CTimeType,+Int64Type%3E"],[2994,"impl-IntoSeries-for-Logical%3CDecimalType,+Int128Type%3E"],[2995,"impl-IntoSeries-for-Logical%3CDateType,+Int32Type%3E"],[2996,"impl-IntoSeries-for-Logical%3CDatetimeType,+Int64Type%3E"],[3041,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3042,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3043,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3044,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3045,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3046,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3081,"impl-NamedFrom%3CT,+%5BOption%3CNaiveTime%3E%5D%3E-for-Logical%3CTimeType,+Int64Type%3E"],[3082,"impl-NamedFrom%3CT,+%5BNaiveDateTime%5D%3E-for-Logical%3CDatetimeType,+Int64Type%3E"],[3083,"impl-NamedFrom%3CT,+%5BNaiveDate%5D%3E-for-Logical%3CDateType,+Int32Type%3E"],[3084,"impl-NamedFrom%3CT,+%5BNaiveTime%5D%3E-for-Logical%3CTimeType,+Int64Type%3E"],[3085,"impl-NamedFrom%3CT,+%5BOption%3CTimeDelta%3E%5D%3E-for-Logical%3CDurationType,+Int64Type%3E"],[3086,"impl-NamedFrom%3CT,+%5BTimeDelta%5D%3E-for-Logical%3CDurationType,+Int64Type%3E"],[3087,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDate%3E%5D%3E-for-Logical%3CDateType,+Int32Type%3E"],[3088,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDateTime%3E%5D%3E-for-Logical%3CDatetimeType,+Int64Type%3E"],[3094,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3095,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3096,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3097,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3098,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3099,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3102,"impl-TimeMethods-for-Logical%3CTimeType,+Int64Type%3E"],[3103,"impl-DateMethods-for-Logical%3CDateType,+Int32Type%3E"],[3122,"impl-PolarsRound-for-Logical%3CDatetimeType,+Int64Type%3E"],[3123,"impl-PolarsRound-for-Logical%3CDateType,+Int32Type%3E"],[3129,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3130,"impl-Logical%3CDurationType,+Int64Type%3E"],[3136,"impl-Logical%3CTimeType,+Int64Type%3E"],[3137,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3138,"impl-Logical%3CDateType,+Int32Type%3E"],[3153,"impl-Logical%3CDurationType,+Int64Type%3E"],[3154,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3202,"impl-Logical%3CTimeType,+Int64Type%3E"],[3203,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3204,"impl-Logical%3CDateType,+Int32Type%3E"],[3209,"impl-PolarsTruncate-for-Logical%3CDateType,+Int32Type%3E"],[3210,"impl-PolarsTruncate-for-Logical%3CDatetimeType,+Int64Type%3E"],[3496,"impl-Display-for-ErrString"],[3497,"impl-Debug-for-ErrString"],[3498,"impl-Display-for-PolarsError"],[3499,"impl-Debug-for-PolarsError"],[3503,"impl-From%3CError%3E-for-PolarsError"],[3504,"impl-From%3CError%3E-for-PolarsError"],[3505,"impl-From%3CParquetError%3E-for-PolarsError"],[3507,"impl-From%3CTryReserveError%3E-for-PolarsError"],[3508,"impl-From%3CError%3E-for-PolarsError"],[3509,"impl-From%3CUtf8Error%3E-for-PolarsError"],[3639,"impl-Debug-for-DataFrame"],[3640,"impl-Display-for-DataFrame"],[3672,"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-DataFrame"],[3673,"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-DataFrame"],[3674,"impl-Index%3CRangeTo%3Cusize%3E%3E-for-DataFrame"],[3675,"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-DataFrame"],[3676,"impl-Index%3CRangeFull%3E-for-DataFrame"],[3677,"impl-Index%3C%26str%3E-for-DataFrame"],[3678,"impl-Index%3CRange%3Cusize%3E%3E-for-DataFrame"],[3679,"impl-Index%3Cusize%3E-for-DataFrame"],[3698,"impl-Container-for-DataFrame"],[3699,"impl-DataFrame"],[3706,"impl-Container-for-DataFrame"],[3707,"impl-DataFrame"],[3745,"impl-Container-for-DataFrame"],[3746,"impl-DataFrame"],[3750,"impl-Container-for-DataFrame"],[3751,"impl-DataFrame"],[3773,"impl-TryFrom%3C(RecordBatchT%3CBox%3Cdyn+Array%3E%3E,+%26%5BArrowField%5D)%3E-for-DataFrame"],[3774,"impl-TryFrom%3CStructArray%3E-for-DataFrame"],[3955,"impl-Debug-for-GroupByMethod"],[3956,"impl-Display-for-GroupByMethod"],[3962,"impl-From%3CVec%3C(Vec%3Cu32%3E,+Vec%3CUnitVec%3Cu32%3E%3E)%3E%3E-for-GroupsIdx"],[3963,"impl-From%3CVec%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E%3E-for-GroupsIdx"],[3965,"impl-From%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E-for-GroupsIdx"],[3999,"impl-IntoIterator-for-%26GroupsIdx"],[4000,"impl-IntoIterator-for-GroupsIdx"],[4002,"impl-IntoParallelIterator-for-GroupsIdx"],[4003,"impl-IntoParallelIterator-for-%26GroupsIdx"],[5333,"impl-ArrayFromIter%3C()%3E-for-StructArray"],[5334,"impl-ArrayFromIter%3COption%3C()%3E%3E-for-StructArray"],[5338,"impl-ArrayFromIterDtype%3COption%3C()%3E%3E-for-StructArray"],[5339,"impl-ArrayFromIterDtype%3C()%3E-for-StructArray"],[5367,"impl-Arc%3C%5BMaybeUninit%3CT%3E%5D,+A%3E"],[5368,"impl-Arc%3CMaybeUninit%3CT%3E,+A%3E"],[5391,"impl-OptState"],[5392,"impl-Flags-for-OptState"],[6158,"impl-Default-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[6159,"impl-Default-for-SpecialEq%3CArc%3Cdyn+BinaryUdfOutputField%3E%3E"],[6160,"impl-Default-for-SpecialEq%3CArc%3Cdyn+SeriesBinaryUdf%3E%3E"],[6169,"impl-Default-for-Arc%3CCStr%3E"],[6170,"impl-Default-for-Arc%3Cstr%3E"],[6171,"impl-Default-for-Arc%3CT%3E"],[6172,"impl-Default-for-Arc%3C%5BT%5D%3E"],[6653,"impl-Expr"],[6654,"impl-PartialEq-for-Expr"],[6657,"impl-PartialEq-for-SpecialEq%3CSeries%3E"],[6658,"impl-PartialEq-for-SpecialEq%3CArc%3CT%3E%3E"],[6676,"impl-PartialEq%3Cdyn+Scalar%3E-for-Arc%3Cdyn+Scalar%3E"],[6677,"impl-PartialEq-for-Arc%3CT,+A%3E"],[6678,"impl-PartialEq%3Cdyn+Array%3E-for-Arc%3Cdyn+Array%3E"],[6683,"impl-PartialEq-for-StructArray"],[6684,"impl-PartialEq%3C%26dyn+Array%3E-for-StructArray"],[6963,"impl-Debug-for-Duration"],[6964,"impl-Display-for-Duration"],[6982,"impl-Debug-for-JoinType"],[6983,"impl-Display-for-JoinType"],[6985,"impl-Debug-for-JoinValidation"],[6986,"impl-Display-for-JoinValidation"],[7003,"impl-Display-for-Expr"],[7004,"impl-Debug-for-Expr"],[7006,"impl-Display-for-Operator"],[7007,"impl-Debug-for-Operator"],[7009,"impl-Display-for-BooleanFunction"],[7010,"impl-Debug-for-BooleanFunction"],[7011,"impl-Display-for-CategoricalFunction"],[7012,"impl-Debug-for-CategoricalFunction"],[7013,"impl-Display-for-TemporalFunction"],[7014,"impl-Debug-for-TemporalFunction"],[7015,"impl-Debug-for-PowFunction"],[7016,"impl-Display-for-PowFunction"],[7017,"impl-Display-for-StringFunction"],[7018,"impl-Debug-for-StringFunction"],[7019,"impl-Debug-for-StructFunction"],[7020,"impl-Display-for-StructFunction"],[7021,"impl-Debug-for-FunctionExpr"],[7022,"impl-Display-for-FunctionExpr"],[7032,"impl-Binary-for-OptState"],[7033,"impl-Debug-for-OptState"],[7034,"impl-UpperHex-for-OptState"],[7035,"impl-LowerHex-for-OptState"],[7036,"impl-Octal-for-OptState"],[7040,"impl-Debug-for-Arc%3CT,+A%3E"],[7041,"impl-Pointer-for-Arc%3CT,+A%3E"],[7042,"impl-Display-for-Arc%3CT,+A%3E"],[7074,"impl-From%3CDslPlan%3E-for-LazyFrame"],[7076,"impl-From%3CLazyGroupBy%3E-for-LazyFrame"],[7153,"impl-From%3Cu16%3E-for-Expr"],[7154,"impl-From%3Ci16%3E-for-Expr"],[7155,"impl-From%3Ci32%3E-for-Expr"],[7156,"impl-From%3Ci64%3E-for-Expr"],[7157,"impl-From%3Cu8%3E-for-Expr"],[7158,"impl-From%3Cf32%3E-for-Expr"],[7159,"impl-From%3CAggExpr%3E-for-Expr"],[7160,"impl-From%3C%26str%3E-for-Expr"],[7161,"impl-From%3Cu32%3E-for-Expr"],[7163,"impl-From%3Cu64%3E-for-Expr"],[7164,"impl-From%3Cbool%3E-for-Expr"],[7165,"impl-From%3Ci8%3E-for-Expr"],[7166,"impl-From%3Cf64%3E-for-Expr"],[7170,"impl-From%3CStringFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7171,"impl-From%3CBooleanFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7172,"impl-From%3CArrayFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7173,"impl-From%3CCategoricalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7174,"impl-From%3CBinaryFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7175,"impl-From%3CFunctionExpr%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7176,"impl-From%3CTemporalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7177,"impl-From%3CListFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7178,"impl-From%3CRangeFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7179,"impl-From%3CStructFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7186,"impl-From%3CStringFunction%3E-for-FunctionExpr"],[7187,"impl-From%3CBooleanFunction%3E-for-FunctionExpr"],[7188,"impl-From%3CBinaryFunction%3E-for-FunctionExpr"],[7190,"impl-From%3CCategoricalFunction%3E-for-FunctionExpr"],[7201,"impl-From%3C%26str%3E-for-Selector"],[7202,"impl-From%3CString%3E-for-Selector"],[7203,"impl-From%3CArc%3Cstr%3E%3E-for-Selector"],[7204,"impl-From%3CExpr%3E-for-Selector"],[7211,"impl-From%3C%5BT;+N%5D%3E-for-Arc%3C%5BT%5D%3E"],[7212,"impl-From%3CCString%3E-for-Arc%3CCStr%3E"],[7214,"impl-From%3CArc%3Cstr%3E%3E-for-Arc%3C%5Bu8%5D%3E"],[7215,"impl-From%3CCow%3C\'a,+B%3E%3E-for-Arc%3CB%3E"],[7216,"impl-From%3CVec%3CT,+A%3E%3E-for-Arc%3C%5BT%5D,+A%3E"],[7217,"impl-From%3CBox%3CT,+A%3E%3E-for-Arc%3CT,+A%3E"],[7218,"impl-From%3CString%3E-for-Arc%3Cstr%3E"],[7219,"impl-From%3C%26str%3E-for-Arc%3Cstr%3E"],[7220,"impl-From%3COsString%3E-for-Arc%3COsStr%3E"],[7221,"impl-From%3C%26OsStr%3E-for-Arc%3COsStr%3E"],[7222,"impl-From%3C%26%5BT%5D%3E-for-Arc%3C%5BT%5D%3E"],[7223,"impl-From%3CPathBuf%3E-for-Arc%3CPath%3E"],[7224,"impl-From%3CT%3E-for-Arc%3CT%3E"],[7225,"impl-From%3C%26Path%3E-for-Arc%3CPath%3E"],[7226,"impl-From%3C%26CStr%3E-for-Arc%3CCStr%3E"],[7234,"impl-From%3CGrowableStruct%3C\'a%3E%3E-for-StructArray"],[7236,"impl-From%3CMutableStructArray%3E-for-StructArray"],[7239,"impl-From%3CArrowSchema%3E-for-Schema"],[7240,"impl-From%3CArc%3CArrowSchema%3E%3E-for-Schema"],[7241,"impl-From%3C%26Row%3C\'_%3E%3E-for-Schema"],[7242,"impl-From%3C%26ArrowSchema%3E-for-Schema"],[7243,"impl-From%3C%26%5BSeries%5D%3E-for-Schema"],[7244,"impl-From%3C%26Arc%3CArrowSchema%3E%3E-for-Schema"],[7253,"impl-OptState"],[7254,"impl-Flags-for-OptState"],[7263,"impl-FromIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[7264,"impl-FromIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[7273,"impl-FromTrustedLenIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[7274,"impl-FromTrustedLenIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[7287,"impl-FromIteratorReversed%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[7288,"impl-FromIteratorReversed%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[8415,"impl-Array-for-StructArray"],[8416,"impl-StructArray"],[8422,"impl-StructArray"],[8423,"impl-Array-for-StructArray"],[8685,"impl-ArrayFromIter%3C()%3E-for-StructArray"],[8686,"impl-ArrayFromIter%3COption%3C()%3E%3E-for-StructArray"],[8690,"impl-ArrayFromIterDtype%3COption%3C()%3E%3E-for-StructArray"],[8691,"impl-ArrayFromIterDtype%3C()%3E-for-StructArray"],[9130,"impl-StructArray"],[9131,"impl-Array-for-StructArray"],[9383,"impl-LazyFileListReader-for-LazyCsvReader"],[9384,"impl-LazyCsvReader"],[9385,"impl-LazyFileListReader-for-LazyJsonLineReader"],[9386,"impl-LazyJsonLineReader"],[9430,"impl-LazyFileListReader-for-LazyCsvReader"],[9431,"impl-LazyCsvReader"],[9432,"impl-LazyFileListReader-for-LazyJsonLineReader"],[9433,"impl-LazyJsonLineReader"],[9474,"impl-Array-for-StructArray"],[9475,"impl-StructArray"],[9948,"impl-StrpTimeParser%3Ci32%3E-for-DatetimeInfer%3CInt32Type%3E"],[9949,"impl-StrpTimeParser%3Ci64%3E-for-DatetimeInfer%3CInt64Type%3E"],[9954,"impl-TryFromWithUnit%3CPattern%3E-for-DatetimeInfer%3CInt64Type%3E"],[9955,"impl-TryFromWithUnit%3CPattern%3E-for-DatetimeInfer%3CInt32Type%3E"],[10648,"impl-Debug-for-RollingFunction"],[10649,"impl-Display-for-RollingFunction"],[10678,"impl-Display-for-RollingFunctionBy"],[10679,"impl-Debug-for-RollingFunctionBy"],[10901,"impl-Add-for-Series"],[10902,"impl-Add%3CT%3E-for-Series"],[10903,"impl-Add%3CT%3E-for-%26Series"],[10904,"impl-Add-for-%26Series"],[10920,"impl-SeriesSealed-for-Series"],[10921,"impl-AsSeries-for-Series"],[10974,"impl-Div-for-Series"],[10975,"impl-Div-for-%26Series"],[10976,"impl-Div%3CT%3E-for-Series"],[10977,"impl-Div%3CT%3E-for-%26Series"],[10988,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10989,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10990,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10992,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10993,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10994,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11010,"impl-Display-for-Series"],[11011,"impl-Debug-for-Series"],[11016,"impl-From%3CLogical%3CTimeType,+Int64Type%3E%3E-for-Series"],[11018,"impl-From%3CChunkedArray%3CT%3E%3E-for-Series"],[11019,"impl-From%3CLogical%3CDateType,+Int32Type%3E%3E-for-Series"],[11020,"impl-From%3CLogical%3CDatetimeType,+Int64Type%3E%3E-for-Series"],[11021,"impl-From%3CLogical%3CDurationType,+Int64Type%3E%3E-for-Series"],[11028,"impl-FromIterator%3C%26i64%3E-for-Series"],[11029,"impl-FromIterator%3COption%3Cbool%3E%3E-for-Series"],[11030,"impl-FromIterator%3Ci16%3E-for-Series"],[11031,"impl-FromIterator%3COption%3Cu64%3E%3E-for-Series"],[11032,"impl-FromIterator%3Cu64%3E-for-Series"],[11033,"impl-FromIterator%3C%26u64%3E-for-Series"],[11034,"impl-FromIterator%3COption%3Cu32%3E%3E-for-Series"],[11035,"impl-FromIterator%3COption%3Ci8%3E%3E-for-Series"],[11036,"impl-FromIterator%3Ci8%3E-for-Series"],[11037,"impl-FromIterator%3C%26u16%3E-for-Series"],[11038,"impl-FromIterator%3COption%3Cu8%3E%3E-for-Series"],[11039,"impl-FromIterator%3C%26i16%3E-for-Series"],[11040,"impl-FromIterator%3COption%3Ci32%3E%3E-for-Series"],[11041,"impl-FromIterator%3Ci32%3E-for-Series"],[11042,"impl-FromIterator%3C%26i32%3E-for-Series"],[11043,"impl-FromIterator%3COption%3Ci64%3E%3E-for-Series"],[11044,"impl-FromIterator%3Ci64%3E-for-Series"],[11045,"impl-FromIterator%3Cbool%3E-for-Series"],[11046,"impl-FromIterator%3C%26i8%3E-for-Series"],[11047,"impl-FromIterator%3Cu32%3E-for-Series"],[11048,"impl-FromIterator%3C%26u8%3E-for-Series"],[11049,"impl-FromIterator%3COption%3Cf32%3E%3E-for-Series"],[11050,"impl-FromIterator%3COption%3Ci16%3E%3E-for-Series"],[11051,"impl-FromIterator%3COption%3Cu16%3E%3E-for-Series"],[11052,"impl-FromIterator%3Cu16%3E-for-Series"],[11053,"impl-FromIterator%3Cf32%3E-for-Series"],[11054,"impl-FromIterator%3CString%3E-for-Series"],[11055,"impl-FromIterator%3C%26f32%3E-for-Series"],[11056,"impl-FromIterator%3COption%3Cf64%3E%3E-for-Series"],[11057,"impl-FromIterator%3Cf64%3E-for-Series"],[11058,"impl-FromIterator%3C%26str%3E-for-Series"],[11059,"impl-FromIterator%3C%26bool%3E-for-Series"],[11060,"impl-FromIterator%3C%26f64%3E-for-Series"],[11061,"impl-FromIterator%3C%26u32%3E-for-Series"],[11062,"impl-FromIterator%3Cu8%3E-for-Series"],[11063,"impl-NamedFromOwned%3CVec%3Cu16%3E%3E-for-Series"],[11064,"impl-NamedFromOwned%3CVec%3Cf32%3E%3E-for-Series"],[11065,"impl-NamedFromOwned%3CVec%3Cf64%3E%3E-for-Series"],[11066,"impl-NamedFromOwned%3CVec%3Ci8%3E%3E-for-Series"],[11067,"impl-NamedFromOwned%3CVec%3Ci16%3E%3E-for-Series"],[11068,"impl-NamedFromOwned%3CVec%3Ci32%3E%3E-for-Series"],[11069,"impl-NamedFromOwned%3CVec%3Cu8%3E%3E-for-Series"],[11070,"impl-NamedFromOwned%3CVec%3Cu32%3E%3E-for-Series"],[11071,"impl-NamedFromOwned%3CVec%3Ci128%3E%3E-for-Series"],[11072,"impl-NamedFromOwned%3CVec%3Ci64%3E%3E-for-Series"],[11073,"impl-NamedFromOwned%3CVec%3Cu64%3E%3E-for-Series"],[11085,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11086,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[11087,"impl-ChunkCompare%3CRhs%3E-for-Series"],[11089,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11090,"impl-ChunkCompare%3CRhs%3E-for-Series"],[11091,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[11132,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11133,"impl-ChunkCompare%3CRhs%3E-for-Series"],[11134,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[11136,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[11137,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11138,"impl-ChunkCompare%3CRhs%3E-for-Series"],[11147,"impl-Mul%3CT%3E-for-Series"],[11148,"impl-Mul-for-Series"],[11149,"impl-Mul-for-%26Series"],[11150,"impl-Mul%3CT%3E-for-%26Series"],[11155,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-Series"],[11156,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-Series"],[11157,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-Series"],[11158,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-Series"],[11159,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-Series"],[11160,"impl-NamedFrom%3CT,+ListType%3E-for-Series"],[11161,"impl-NamedFrom%3CT,+%5BOption%3CSeries%3E%5D%3E-for-Series"],[11162,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-Series"],[11163,"impl-NamedFrom%3C%26Series,+str%3E-for-Series"],[11164,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-Series"],[11165,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-Series"],[11166,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-Series"],[11167,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-Series"],[11168,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-Series"],[11169,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-Series"],[11170,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-Series"],[11171,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-Series"],[11172,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-Series"],[11173,"impl-NamedFrom%3CT,+%5BOption%3Ci128%3E%5D%3E-for-Series"],[11174,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-Series"],[11175,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-Series"],[11176,"impl-NamedFrom%3CT,+%5Bu8%5D%3E-for-Series"],[11177,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-Series"],[11178,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-Series"],[11179,"impl-NamedFrom%3CT,+%5BNaiveDate%5D%3E-for-Series"],[11180,"impl-NamedFrom%3CT,+%5Bu16%5D%3E-for-Series"],[11181,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDate%3E%5D%3E-for-Series"],[11182,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-Series"],[11183,"impl-NamedFrom%3CT,+%5BNaiveDateTime%5D%3E-for-Series"],[11184,"impl-NamedFrom%3CT,+%5BOption%3Ci16%3E%5D%3E-for-Series"],[11185,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDateTime%3E%5D%3E-for-Series"],[11186,"impl-NamedFrom%3CT,+%5BOption%3Ci8%3E%5D%3E-for-Series"],[11187,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-Series"],[11188,"impl-NamedFrom%3CT,+%5BTimeDelta%5D%3E-for-Series"],[11189,"impl-NamedFrom%3CT,+%5BOption%3CTimeDelta%3E%5D%3E-for-Series"],[11190,"impl-NamedFrom%3CT,+%5BNaiveTime%5D%3E-for-Series"],[11191,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-Series"],[11192,"impl-NamedFrom%3CT,+%5BOption%3CNaiveTime%3E%5D%3E-for-Series"],[11193,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-Series"],[11194,"impl-NamedFrom%3CT,+T%3E-for-Series"],[11195,"impl-NamedFrom%3CT,+%5BAnyValue%3C\'a%3E%5D%3E-for-Series"],[11196,"impl-NamedFrom%3CT,+%5BOption%3Cu16%3E%5D%3E-for-Series"],[11197,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-Series"],[11198,"impl-NamedFrom%3CT,+%5BOption%3Cu8%3E%5D%3E-for-Series"],[11199,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-Series"],[11200,"impl-NamedFrom%3CT,+%5Bi8%5D%3E-for-Series"],[11201,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-Series"],[11202,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-Series"],[11203,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-Series"],[11204,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-Series"],[11205,"impl-NamedFrom%3CT,+%5Bi16%5D%3E-for-Series"],[11206,"impl-NamedFrom%3CT,+%5Bi128%5D%3E-for-Series"],[11207,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-Series"],[11213,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[11214,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11215,"impl-ChunkCompare%3CRhs%3E-for-Series"],[11217,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[11218,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11219,"impl-ChunkCompare%3CRhs%3E-for-Series"],[11227,"impl-Rem%3CT%3E-for-Series"],[11228,"impl-Rem%3CT%3E-for-%26Series"],[11229,"impl-Rem-for-%26Series"],[11258,"impl-Sub%3CT%3E-for-%26Series"],[11259,"impl-Sub-for-Series"],[11260,"impl-Sub-for-%26Series"],[11261,"impl-Sub%3CT%3E-for-Series"],[11285,"impl-TryFrom%3C(%26ArrowField,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[11286,"impl-TryFrom%3C(%26str,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[11288,"impl-TryFrom%3C(%26ArrowField,+Box%3Cdyn+Array%3E)%3E-for-Series"],[11289,"impl-TryFrom%3C(%26str,+Box%3Cdyn+Array%3E)%3E-for-Series"]],"c":"OjAAAAEAAAAAAAwAEAAAACMPbw+sD68PsA+xD7IPsw+4D7sPwA/BD+YP","e":"OzAAAAEAALggVgQCAAAABQABAAgAAAALAAIAEAAAABIAAAAUAB0AOwAFAEUAAQBIAAsAVwAKAGQABgBtAAAAbwAEAHUAFgCNAAAAjwAQAKEAAACkAAMAqQABAK8ADQC+ABUA1gAHAN8ACgDrAAAA7QABAPEAHQAVARUALQETAEIBAgBGARIAWwEBAF8BAQBiAR4AgwECAIsBEACdAQMApAECAKkBAQCsAQcAuQEhAOABBgDpAQgA8wE1ACwCFQBDAgIARwIEAE0CBQBXAgAAWQIaAHUCBwCBAhEAlQIPAKcCDQC2Ag4AyAIBAMsCAADOAgAA0AIAANMCAQDaAgAA3gIGAOYCAADoAgIA7AINAPsCAAD9AigAKAMCACwDIwBTAzQAigMIAJcDEQCsA1wAFgQSADQEBwA9BEkAigQPAJsEAQCeBBkAuQQAALwEDgDOBAIA1AQCANkEHAD3BAkAAgUKABcFAAAaBQAAHwUgAEQFEgBZBQAAWwUJAGcFAwBtBQEAcQUNAIgFAACLBQAAjgUBAJQFBwCdBQcAsgUBALYFAAC5BQMAwQUFAMgFBADUBQsA5wUEAO4FDQD+BQYACAYHABEGAQAVBhYALQYHADYGAAA5BgEAPAYBAEEGEABTBgAAVgYAAFgGAgBcBgIAYAYBAGMGCABtBgAAbwYFAHcGAQB6BgAAfAYBAH8GAwCEBgMAiQYCAI0GAwCTBgAAlgYAAJ4GAACjBgAApgYBAKsGAQCuBgAAsQYAALkGAAC/BgIAygYGANQGEgDpBgUA8QYIAPwGBAACBwAABQcAAAcHAQANBwUAFgcBAB8HAQArBwAALQcBADAHAAAzBwAANQcAADkHAAA7BwAAQAcMAE8HAgBeBwAAYAcHAGkHAQBsBwAAcAcAAHIHAwB3BwEAegcFAIYHFwCfBwEAowcEAKkHAwCwBwcAxQcDAMoHCADUBwQA2wcCAN8HBQDnBwAA6QcNAPsHAQD/BwEABQgBAAgIAQALCAMAEAgAABIIAAAVCAEAGQgAABsIAQAeCAAAIAgCACQIDAAyCAAANAgBADcIAAA5CAEAPAgAAD4IAQBBCAAAQwgBAEYIAwBNCAAAUQgBAFUIAABYCAAAWggAAFwIAwBhCAAAZAgIAG4IAQBxCAQAeAgBAHwIAAB+CAIAgggBAIgIAwCNCAEAkAgAAJIIAQCVCAAAlwgBAJoIAACcCAEAnwgAAKEIAQCkCAAApggAAKkIJADPCBcA6AhmAFIJjgDiCQcA7AmXAIUKBQCMCioAuAoQAMsKAQDbCgQA4QoCAOYKAADoCgAA6goAAP8KAQADCwAACwsAAA4LAAAQCwUAFwsEAB0LBQAkCwAAJgsaAEYLDQBWCysAgwsAAK8LBwC5CwAAuwsBAL4LAwDDCwEAyAsAAMoLBQDRCwAA1AsCANkLAwDeCwAA4QsNAPELAAD0Cw4ABAwAAAcMCwAUDAwAIgwBACUMAAAnDA0ANgwAAD4MAABADAAARQwQAFgMAABaDAIAXwwgAIIMAACGDGQA7AwtABsNAQAeDTUAVQ0BAFgNCABiDQAAZA0BAGcNBABtDQEAcg0AAHQNAgB4DQAAew0EAIENBACHDRIAmw0RAK8NAwC0DQYAvg0EAMQNFQDdDQAA4A0KAOwNAgD0DRYADQ4QACcOAQArDgIALw4AADEOAAA2DgMAPw4AAE4OAABQDgAAUg4BAFkODABsDgIAcw4AAHcOAAB7DgAAgA4BAI0OAQCRDgAAlw4AAKAOAgCkDgAApw4AAKkOAQCwDgAAsg4DALkOBgDCDgkAzQ4AANIOAQDWDgQA4g4OAPIOAgD2DgAA+A4JAAMPAQAGDwMACw8DABAPCQAbDwcAJA8BACcPHQBGDygAcA8GAHsPAQB+DwEAgw8EAIoPAACODwcAng8NAK0PAQC0DwMAuQ8BAL0PAgDCDwAAxA8fAOcPDAD2DwUA/Q8HAAYQIwAsEA4APBAPAE4QAABQEAMAVxAGAGEQDgByEAYAexAAAH4QCACIEAEAjBAEAJIQBQCZEAAAnhAJAKkQAQCtEAQAsxABALYQCgDCEAAAxRAAAMcQCQDSEAAA1RAJAOAQBADpEAAA7BAAAPQQAgD7EAAA/hABAAQRCgAQERIAJhEHAC8RAQAyEQUAPBEEAEQRBABOEQMAUxEAAFURCwBjEQQAaREFAHERAgB2EQAAeREAAHsRAgCAEQIAhBEFAIsRBACREQMAmBECAJ4RAACgEQEApBEAAKYRBACtEQ8AvhEAAMERAQDEEQMAyhECANARFgDoEQkA9BEAAPYRAQD6EQAA/BEBAAASAAACEgEABhIAAAgSBQAQEgIAFBIBABgSAAAbEgAAHRICACESAgAlEgoAMhIHADsSAAA9EgAAQRIBAEUSAABHEgAASRIBAEwSAQBPEgEAVBIAAFYSDQBnEgUAbhIHAHgSAgB8EgYAhxIBAIoSAACMEgEAjxIEAJUSAwCaEgIAnhIAAKASBACmEgAAqBIGALASBAC2EgEAuRIBALwSAQC/EgEAwhIAAMQSAADGEgAAyhICAM8SAwDUEgcA3hICAOUSAADnEgUA7hIDAPQSAAD2EgAA+RIAAPsSAwAAEwIABBMCAAgTAAAKEw4AGxMVADITFABKEwEATRMGAFUTBQBdEwAAXxMBAGMTAABlEwUAbBMEAHITAAB0EwIAeRMAAHsTAAB/EwEAhBMHAI0TAwCVEwYAnRMJAKkTAwCuEwgAuBMAALoTAgC/EwIAxhMFAM0TEgDiEwAA5BMBAOgTAADqEwEA7hMAAPATAQD0EwAA9hMEAP0TAwACFAAABBQBAAoUCQAVFAAAGBQGACEUAgAlFF4AhRQCAIwUAACOFAAAkRQGAJoUAACiFAAAphQAAKgUAACsFAUAthQAALoUAADBFAAAxRQAANEUAgDVFAgA3xQAAOEUAQDkFAIA6xQBAO4UBAD0FAEA/BQKAAkVAAALFQAADhUAABEVAQAUFQAAFhX3AA8WAQASFgEAFRYAABcWAgAdFgAAIRYAACUWAAAnFgAAKRYAAC8WAAAyFgEANRYAAD8WTQCOFg0AnRbgAH8XAQCFFwIAixcCAJEXCgCfFwQApRcAAKsXAACtFwAAuBcBALwXAAC+FwAAwxcAAMgXAQDXFwAA3RcAAOIXAgDoFwAA6hcFAPIXJwAeGAQBJRkAACoZAQAtGQMANBkAADYZAwA+GQkASRlhAKwZDwDBGQEAxhkBAMoZAADNGQMA0hkrAP8ZFgAXGgsAJhqtANgaAADfGgAA4RoBAOQaAADmGgAA6hoAAO4aAADwGgAA9RoAAPgaAAD7GgAAAxsAAAYbAgANGwYAFRsBABgbAAAaGwMAIhsAACQbAAAmGwEAKxtnAJQbAACXGwAAoxsAAKUbAADIGwAAzxsAANQbAADyGwgA/BsDAAMcCQATHAIAFxwAAB0cAAAiHAMAKBwAADwcAABDHAAARRwAAEgcBQBPHAAAVxwAAFkcAABcHAUAZBwAAGocAQBvHAIAdRwFAHwcAgCAHAEAhBwCAIgcAACKHAAAjBwAAJEcAACaHAAAnRwBAKAcAgClHAAAqBwBAK0cAQCwHAEAtBwEALwcAQDAHAAAyxwAAM0cQAARHQMAGR0AABsdAAAdHQMAIx0AACUdAAAnHQEAKh0AAC0dAAAyHQIANx1/ALkdAAC/HQIAwx0BAEQeAABGHgcAUR4DAFYeAgBaHgMAYB4AAGIeAABkHgIAaB4BAGseAABtHgAAcB4BAH0eAAB/HgAAgh4BAIUeAwCLHgIAnB4BAJ8eAQCoHgAAqh4BAK0eAACxHgIAtx4BALoeAADBHgIAxh4BAMoeAgDOHgMA1B4OAOgeAADuHgEA9R4AAPgeBQABHwAACR8CABUfAAAgHwAAJh8BACofAAAuHwEAMR8AADQfAAA5HwAAOx8AAD0fAABCHwAARh8AAEgfAgBPHwYAXB8IAGofAABsHwAAcB8AAHYfAAB4HwQAgR8BAIQfAQCHHwAAih8IAJUfAQCYHwAAmx8BAJ8fAACjHwAArR8AALAfAQC7HwEAvh8EAMkfAgDRHwEA2B8CANwfAQDmHwAA6B8EAO4fBQD1HwMA/h8DAAMgAAAFIAIACyAAAA0gAAAZIAAAHCABAB8gAQAiIAMAKCAFAC8gBAA7IAAAQSAAAEcgAABJIAAATiAAAFIgAABUIAAAViABAHkgAAB+IAAAhiADAIsgBQCTIAAAnCAAAKAgAgCkIAMAqyAAAK0gAQCwIAEAsyABALcgAAC8IAMAwyAAAM4gAADQIAAA0iAAANggAwDgIAAA4iAAAOQgAADmIAAA6CAAAOsgAADtIAAA8yADAPggBwABIQAAAyEAAAchAAANIQAAECEAABYhAAAbIQoAKCECAC0hAAAwIQIAOyEAAEshAABNIQAAUCECAFQhAwBaIQEAXSEAAGAhAABkIV4AxSEMANMhAADXIQEA3CEKAOghAADqIQEA7SGOAH4iAACCInsAASMAAAMjAwAOIwAAESMBABQjegCQIwAAniMAAKAjAACmIwQArCMCALEjAAC0IwAAuCMAAL4jAADAIwAAwiN7AEQkAwBNJAAAUCQBAFUkAQBaJAEAXSQAAGUkAABpJAEAbyQAAHUkAAB/JAAAhiQBAJEkAwCYJAEAqCQAAKokAACuJAAAsCQAALMkAAC5JAEAvCQDAMQkAADRJAAA1yQAANkkAADdJAAA5SQAAOokAAD2JAAA+iQAAPwkAQADJQAABSUBAAolFAAgJQEAJiUBACklSAB0JQAAdiUAAHglAQB7JQEAfiUGAIYlNwDAJQUAxyUJANIlAQDVJQAA2SUAANslAwDgJQEA4yUFAO0lEgABJgEABCYCAAkmAAANJhYAJSYXAEEmBABKJhMAXyYGAHYmAACEJgIAmiYAAKEmCACuJgAAsCYNAL8mAgDDJhIA1yYBANomDwDrJhkABycAAAknAgAOJwoAGicBAB0nBQAkJwgALicEADUnAgA5JwUAQScAAEMnDQBVJwEAWScBAF8nAQBiJwEAZScDAGonAABsJwAAbycBAHMnAAB1JwEAeCcAAHonAgB+JwwAjCcAAI4nAQCRJwAAkycBAJYnAACYJwEAmycAAJ0nAQCgJwMApycAAKsnAQCvJwAAsicAALQnAAC2JwMAuycAAL4nCADIJwEAyycEANInAQDWJwAA2CcCANwnAQDiJwMA5ycBAOonAADsJwEA7ycAAPEnAQD0JwAA9icBAPknAAD7JwEA/icAAAAoAAADKBIAFygGACAoAAAjKBEANigIAEAoAQBDKAgATSgAAE8oAQBVKAAAVygEAGAoAQBpKAIAbygAAHEoAAB7KAAAiigDAJIoCgCeKAAAoCgIAKso7wCcKQEAnykZALopAQC9KQ8AzykSAOMpAADlKRcA/ikBAAIqAAAEKgsAESoCABgqAAAoKgMALyoHAEQqBQBMKgAAVSoAAFcqAQBeKgYAZioAAGwqCgCAKgUAhyoAAIkqAwCOKgUAlioEAJwqAQCgKgAApioEAK8qAgCzKgkAwCoCAMQqAADIKgIAzCoEANUqEQDqKgEA7ioBAPIqAQD2KgIAAisDAAkrAAALKwMAESsBABQrLwBHKwAASSsAAE4rAABQKwAAUisBAFYrAABcKwEAXysDAGcrAwByKwIAdisAAHgrAAB7KwAAfSsBAIIrAQCHKwAAjCsDAJErAACUKycAvSsLAMsrAQDPKwEA0ysBANcrAQDcKwIA4SsBAOQrAADnKwIA7SsBAPArAADyKwAA9CsAAPgrAAD7KwMABCwAAAwsAAAOLAEAESwOACEsBAAsLAAALywDADQsAAA3LAsARCwAAEYsAABILAQATiwWAGcsAQBrLBAAfSwBAIAsBAA="}],\
["polars_core",{"t":"EJJJFQQQQCCCQHQQHCCCCCCQQQCCCCCCHCQQQQQQIFGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNCCNNNNNNNNNNNNNCNCNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKRRRMMMMMMMMMMMMMMMMMMMMMMMMFIFKKFFINNNNMNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNMMMMNNNNNNNNCNNNNMNNNNNNNNNNNNNNNNNNNNNNNFFFFKFFFNNNNNNMNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGPPPNNNNNNNNNNNNNNNNNNNNNNNNNNKKNNNNNNNNNNNNKMKKNMFKFNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNCCPTTTTFPPTTFKFFGFGKPTTTPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFIKKNNNNNNMNNNNCNNNNNNNNNMNNNNNNNNNNNNNNNNNNNCHNNNNNNNMNNNNNNNNNMMNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNKIIFMNMNNONNNNNHHHNNHOHMNNNNPKKKKKKKKKKKKKKKKKKKKKKKKKIGPRKKRPPPPPPPPPNMMMMMMNMCNNNMMNNNNNNNNMMNMCMMCNNCMMCMMNNNNNNNNNNNNNNNMMMMNMNMMCMMMCMMNNMMMNNNNMNNCMKRRRKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHPPPGNHNNNNNNNNNNNNNNNNNNNHNNNNNKHCCCMMHHHHHHHHHKFFNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNOOOONNOOMMNNNNNNNNNNNNNNNNNNNNNNCHHHHHHHPGRKKKGGKPPPIPIFPFPPPPIFFPPFFKGFFJJGPPPFPFPPPPIFPPPFPPPFFIPPPPPPPIFPPPIFKPFRRRSIIIKKPIFPPPIFPPPIFPPPIFPPPIFPKRRRPPPPPPPIFPFKPPPPPPPRPPPKPPIPFFRPRIIIIIKKKKRGPIKPPPIPFPPPPFGIPRFPPPIFPPPIFPPPIFPPPIFPPPGPPRRRRNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNMNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNHNNNNNNNNNNNNNNNNOMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNNMNNFFFKGPFPPPGNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNCNNNCNNNNNNNNNNNNNNNNNNNNNNNNGPPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNHNNHNNNNNNNHNGPPPPGFHHHPPPPPPFPPPPPPGIGPPPPPPPPNNNNNCNNNNNNNQNNNNNNHNNNNHQQQQHHNNNNNNNNNOOOOJJJEEEEEEEEGPPNNNNNNNNNNHNHHHHHNNHHHHHNNNNNPFPPPPGFPFGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNONNOONNNNOONIPPFGPFGGFFIPPIPKPPPPPPPPPPPFPPPNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNCNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOKKHHHHHHHHMMMKMMPPGGPPPPPPPPPPPPFPPPPPPNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNHHHNNNNNNNNNNNNNNNHHIFFKSHHHNNNNNNNNNNNNNNNNOONNNNHNNNNNNNNNNNNNNNNNGFEKIFFEEPFFFKGKFEEEEPPPEPIPPPKKKPFPPIIGKEEPIIIPPEPEEEKEEPPPKKPEPGPPPIFEKPPPGEEIEKGPPGFFFPPEPPEEPKPFPEPEEKENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNOMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNOEONNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNQNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONMNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMMNNNNNNNNNNNMNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNONNNNNCNHHNNNMOOONNONMMNNNNNNNNNNNNCNNNNNQQQQONNNNMNNNNNCNCMMNMNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCMNNNNNNNNNNNNNNOONNNNOOOOKKKMMMFNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGPPPPGKMMFHHHKKNNHFNNNNNNNNNNNNNNNNCNNNNNNNHRTKFKINNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNMNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPGEPPKGGPPPFFIKPNNNNNNNNCNNNNNCNMNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNMNMMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNMNNNNNNNCNNNNNNNNNNNMNNNNNNNMMNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNMCNNNNMNNNMNNMNNNNNNNMNNNNNMNNNNMNNNNNNNNNNNNNNNNNMMMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFINNNNNNNNNNNNNNNNNNNNNNKKKRMMNNCMMNNMMNNMMNNMMNNKKMNNMNNPPGNNNNNNNNNNNNNNNNNNNNNNNNNKKKKKKFFFFNNHHHHHHHNHHEHNNNNNNNNMNNNNNNNHHNNHHNNNNNNNNNNNNNNNNNHHNNNNNNNNCNNNNNNNNNMNNNNNHHHHNNONNNNNNNNNNMNNMMHMNNNNENMHHHMHNNNNNNNHNNNNNNNNNNNNHHHHHH","n":["IdBuildHasher","POOL","PROCESS_ID","SINGLE_LOCK","StringCacheHolder","apply_method_all_arrow_series","apply_method_physical_integer","apply_method_physical_numeric","assert_df_eq","chunked_array","config","datatypes","df","disable_string_cache","downcast_as_macro_arg_physical","downcast_as_macro_arg_physical_mut","enable_string_cache","error","export","fmt","frame","functions","hashing","match_arrow_data_type_apply_macro_ca","match_dtype_to_logical_apply_macro","match_dtype_to_physical_apply_macro","prelude","random","scalar","schema","series","testing","using_string_cache","utils","with_match_physical_float_polars_type","with_match_physical_float_type","with_match_physical_integer_polars_type","with_match_physical_integer_type","with_match_physical_numeric_polars_type","with_match_physical_numeric_type","ChunkLenIter","ChunkedArray","ChunkedArrayLayout","Multi","MultiNoNull","Single","SingleNoNull","__clone_box","_can_fast_explode","add","add","add","add","add_to","agg_list","all","all_kleene","amortized_iter","amortized_iter_with_name","any","any_kleene","append","apply","apply_amortized","apply_amortized_generic","apply_as_ints","apply_as_ints","apply_in_place","apply_into_string_amortized","apply_kernel","apply_kernel_cast","apply_mut","apply_mut","apply_mut","apply_nonnull_values_generic","apply_to_inner","apply_to_slice","apply_values","apply_views","arg_sort","arg_sort_multiple","arg_unique","arithmetic","as_binary","as_ref","as_ref_dtype","binary_zip_and_apply_amortized","bitand","bitor","bitxor","borrow","borrow","borrow_mut","borrow_mut","builder","cast","cast_and_apply_in_place","cast_unchecked","cast_with_options","checked_div","checked_div_num","chunk_lengths","chunk_lengths","chunks","chunks_mut","clear","clone","clone_into","clone_to_uninit","collect","collect_cheap_metadata","comparison","cont_slice","copy_metadata","copy_metadata_cast","data_views","default","deref","deref","deref_mut","deref_mut","div","div","div","div","divide","drop","drop","drop","drop_nulls","dtype","equal","equal","equal_missing","equal_missing","extend","fill_null_with_values","filter","first_non_null","float","fmt","fmt","for_each","for_each_amortized","from","from","from","from_chunk_iter","from_chunk_iter_like","from_chunks","from_chunks_and_dtype","from_fallible_iter","from_iter","from_iter","from_iter","from_iter_options","from_iter_trusted_length","from_iter_trusted_length","from_iter_values","from_iterator_par","from_par_iter","from_slice","from_slice_options","from_trusted_len_iter_rev","from_vec","from_vec_validity","full","full_null","full_null_like","full_null_with_dtype","get","get_any_value","get_any_value_unchecked","get_as_series","get_distinct_count","get_fast_explode_list","get_flags","get_inner","get_max_value","get_min_value","get_object","get_object_unchecked","get_unchecked","group_tuples","group_tuples_perfect","gt","gt","gt_eq","gt_eq","has_nulls","head","init","init","init_rand","inner_dtype","interior_mut_metadata","into","into","into_decimal","into_decimal_unchecked","into_iter","into_no_null_iter","into_series","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_optimal_aligned","is_sorted_flag","iter","iter_chunks","iter_offsets","iter_validities","iterator","last","last_non_null","layout","legacy_div","legacy_div","legacy_div_scalar","legacy_div_scalar","legacy_div_scalar_lhs","legacy_div_scalar_lhs","len","len","lhs_div","lhs_rem","lhs_sub","limit","lt","lt","lt_eq","lt_eq","max","max","max_reduce","mean","mean","median","median_reduce","merge_metadata","metadata","metadata","metadata_arc","metadata_dyn","metadata_mut","metadata_owned_arc","min","min","min_max","min_reduce","mmap_slice","mmap_slice","mul","mul","mul","mul","multiply","n_chunks","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_from_vec","new_from_vec_and_validity","new_vec","new_with_dims","none_to_nan","not_equal","not_equal","not_equal_missing","not_equal_missing","null_count","object","ops","par_iter","par_iter","par_iter_indexed","par_iter_indexed","prod_reduce","prune_empty_chunks","quantile","quantile_reduce","rand_bernoulli","rand_normal","rand_standard_normal","rand_uniform","rechunk","ref_field","rem","rem","rem","rem","remainder","rename","reverse","rolling_map","rolling_map_float","sample_frac","sample_n","scatter_single","scatter_with","set","set_fast_explode","set_fast_explode_list","set_inner_dtype","set_null_count","set_sorted_flag","shift","shift_and_fill","shrink_to_fit","slice","slice","sort","sort_with","split_at","split_at","std","std_reduce","sub","sub","sub","sub","subtract","sum","sum","sum_reduce","tail","take","take","take_unchecked","take_unchecked","temporal","to_bytes_hashes","to_canonical","to_decimal","to_logical","to_ndarray","to_ndarray","to_owned","to_string_unchecked","to_vec","to_vec_null_aware","true_div","true_div","true_div_scalar","true_div_scalar","true_div_scalar_lhs","true_div_scalar_lhs","try_apply_amortized","try_apply_amortized_generic","try_apply_into_string_amortized","try_apply_nonnull_values_generic","try_from","try_from","try_from_chunk_iter","try_into","try_into","try_zip_and_apply_amortized","type_id","type_id","unique","unpack_series_matching_type","unset_fast_explode_list","value_unchecked","var","var_reduce","vzip","vzip","with_chunk","with_chunk_like","with_chunks","with_name","with_nullable_idx","with_sorted_flag","wrapping_abs","wrapping_abs","wrapping_add","wrapping_add","wrapping_add_scalar","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul","wrapping_mul_scalar","wrapping_mul_scalar","wrapping_neg","wrapping_neg","wrapping_sub","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","wrapping_trunc_div_scalar_lhs","zip_and_apply_amortized","zip_with","ArithmeticChunked","Out","Scalar","TrueDivOut","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","true_div","true_div_scalar","true_div_scalar_lhs","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","BinViewChunkedBuilder","BinaryChunkedBuilder","BooleanChunkedBuilder","ChunkedBuilder","NewChunkedArray","NullChunkedBuilder","PrimitiveChunkedBuilder","StringChunkedBuilder","__clone_box","__clone_box","__clone_box","__clone_box","append_null","append_null","append_null","append_null","append_null","append_option","append_option","append_value","append_value","append_value","append_value","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","finish","finish","finish","finish","finish","finish","finish","finish","from","from","from","from","from_iter_options","from_iter_values","from_slice","from_slice_options","init","init","init","init","into","into","into","into","list","new","new","new","new","shrink_to_fit","shrink_to_fit","shrink_to_fit","shrink_to_fit","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","AnonymousListBuilder","AnonymousOwnedListBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","append_array","append_empty","append_empty","append_iter","append_iter","append_iter_values","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_opt_array","append_opt_series","append_opt_series","append_opt_slice","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_slice","append_trusted_len_iter","append_trusted_len_iter","append_values_iter","append_values_iter","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","fast_explode","fast_explode","fast_explode","fast_explode","fast_explode","field","field","field","field","field","finish","finish","finish","finish","from","from","from","from","from","from","from","get_list_builder","init","init","init","init","init","init","init","inner_array","inner_array","inner_array","inner_array","inner_array","into","into","into","into","into","into","into","new","new","new","new","new","new","new","new_with_values_type","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","CastOptions","NonStrict","Overflowing","Strict","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","strict","to_owned","try_from","try_into","type_id","vzip","ChunkedCollectInferIterExt","ChunkedCollectIterExt","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","Canonical","canonical","ChunkedCollectParIterExt","FromParIterWithDtype","collect_ca_with_dtype","from_par_iter_with_dtype","BoolIterNoNull","PolarsIterator","SomeIterator","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","from","from","init","init","into","into","into_iter","into_iter","new","next","next","next_back","next_back","par","size_hint","size_hint","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","list","string","Conflict","DEFAULT","DISTINCT_COUNT","FAST_EXPLODE_LIST","FAST_EXPLODE_LIST","IMMetadata","Keep","Locked","MAX_VALUE","MIN_VALUE","Metadata","MetadataCollectable","MetadataEnv","MetadataFlags","MetadataMerge","MetadataProperties","MetadataReadGuard","MetadataTrait","New","SORTED","SORTED_ASC","SORTED_DSC","Unlocked","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","all","all","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","collect_cheap_metadata","collect_cheap_metadata","complement","complement","contains","contains","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","difference","difference","disabled","distinct_count","distinct_count","distinct_count","distinct_count_opt","drop","drop","drop","drop","drop","drop","drop","empty","empty","enabled","eq","eq","experimental_enabled","extend","extend","fast_explode_list","fast_explode_list_opt","filter_props","filter_props_cast","flags","flags_opt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_fallible_iter","from_fallible_iter","from_iter","from_iter","from_name","from_name","get_distinct_count","get_fast_explode_list","get_fast_explode_list","get_flags","get_flags","get_flags","get_max_value","get_min_value","get_mut","get_sorted_flag","init","init","init","init","init","init","init","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","into_iter","into_iter","is_all","is_all","is_empty","is_empty","is_empty","is_sorted","is_sorted_any","is_sorted_ascending","is_sorted_descending","iter","iter","iter_names","iter_names","log","logfile","max_value","max_value","max_value","max_value_opt","merge","min_value","min_value","min_value","min_value_opt","new","not","not","read","remove","remove","set","set","set_distinct_count","set_fast_explode_list","set_fast_explode_list","set_flags","set_max_value","set_min_value","set_sorted_ascending","set_sorted_descending","set_sorted_flag","set_sorted_flag","sorted","sorted_opt","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","take","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_read","try_write","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_cheap_metadata","with_cheap_metadata","write","ObjectArray","ObjectValueIter","PolarsObject","PolarsObjectSafe","__clone_box","_split_at_unchecked","arr_from_iter","arr_from_iter","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any","as_any","as_any_mut","borrow","borrow_mut","builder","check_bound","clone","clone_into","clone_to_uninit","data_type","deref","deref_mut","drop","eq","equal","fmt","from","full_null","get","get_dtype","if_then_else","if_then_else_broadcast_both","if_then_else_broadcast_false","if_then_else_broadcast_true","init","into","into_iter","is_null_unchecked","is_valid_unchecked","is_valid_unchecked","iter","iter","len","null_count","registry","set_polars_allow_extension","set_validity","slice","slice_typed","slice_typed_unchecked","slice_unchecked","split_at_boxed","split_at_boxed_unchecked","to_boxed","to_boxed","to_owned","try_arr_from_iter","try_arr_from_iter","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_from","try_into","type_id","type_name","type_name","validity","value","value_unchecked","value_unchecked","values","values_iter","values_iter","vzip","with_validity","with_validity","with_validity_typed","ObjectChunkedBuilder","append_null","append_null","append_option","append_value","append_value","append_value_from_any","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","new","to_series","try_from","try_into","type_id","vzip","AnonymousObjectBuilder","BuilderConstructor","ObjectConverter","ObjectRegistry","append_null","append_option","append_value","borrow","borrow_mut","builder_constructor","deref","deref_mut","drop","fmt","from","get_object_builder","get_object_converter","get_object_physical_type","init","into","is_object_builder_registered","physical_dtype","register_object_builder","to_series","try_from","try_into","type_id","vzip","Backward","ChunkAgg","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","FillNullLimit","FillNullStrategy","Forward","FuncRet","IsFirstDistinct","IsLastDistinct","Item","Max","MaxBound","Mean","Min","MinBound","None","One","Some","Zero","__clone_box","apply","apply_kernel","apply_kernel_cast","apply_to_slice","apply_values","arg_sort","arg_sort_multiple","arg_unique","arity","borrow","borrow_mut","cast","cast_unchecked","cast_with_options","clone","clone_into","clone_to_uninit","clone_to_uninit","deref","deref_mut","drop","eq","equal","equal_missing","explode","explode_and_offsets","fill_null","fill_null_with_values","filter","float_sorted_arg_max","fmt","from","full","full","full_null","gather","get_any_value","get_any_value_unchecked","gt","gt_eq","hash","init","into","is_first_distinct","is_last_distinct","lt","lt_eq","max","mean","median","min","min_max","n_unique","new_from_index","not_equal","not_equal_missing","offsets","quantile","reverse","rolling_map","scatter_single","scatter_with","search_sorted","set","shift","shift_and_fill","sort","sort","sort_with","std","sum","take","take_unchecked","to_byte_slices","to_owned","try_from","try_into","type_id","unique","var","vzip","zip","zip_with","BinaryFnMut","Ret","Ret","Ret","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_into_string_amortized","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","Any","Left","Right","SearchSortedSide","__clone_box","binary_search_ca","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","lower_bound_chunks","to_owned","try_from","try_into","type_id","vzip","SlicedArray","_broadcast_bools","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_arr","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","__clone_box","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","default","default","deref","deref","deref_mut","deref_mut","descending","descending","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","from","hash","hash","init","init","into","into","maintain_order","maintain_order","multithreaded","multithreaded","new","new","nulls_last","nulls_last","slice_typed","slice_typed_unchecked","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_maintain_order","with_maintain_order","with_multithreaded","with_multithreaded","with_nulls_last","with_nulls_last","with_nulls_last_multi","with_order_descending","with_order_descending","with_order_descending_multi","with_order_reversed","with_order_reversed","conversion","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","force_async","get_file_prefetch_size","get_rg_prefetch_size","verbose","Any","AnyValue","Array","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","Binary","Binary","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","Boolean","Boolean","BooleanChunked","BooleanType","CatIter","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalType","CompatLevel","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","Date32","Date64","DateType","Datetime","DatetimeType","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","Duration","DurationType","Enum","Enum","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","Float","Float16","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","HashMap","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8Chunked","Int8Type","Interval","IntoScalar","IsNested","IsObject","IsStruct","LargeBinary","LargeList","LargeUtf8","Lexical","List","List","List","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","Null","Null","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Second","SmartString","StaticArray","Str","String","String","StringChunked","StringOwned","StringType","Struct","Time","Time32","Time64","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","Union","Unknown","Unknown","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_can_fast_explode","add","add","add","add","add","add","add","add","add","add","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","agg_list","agg_list","agg_list","agg_list","agg_list","all","all_kleene","amortized_iter","amortized_iter_with_name","any","any_kleene","apply","apply","apply","apply","apply","apply_amortized","apply_amortized_generic","apply_as_ints","apply_as_ints","apply_kernel","apply_kernel","apply_kernel","apply_kernel_cast","apply_kernel_cast","apply_kernel_cast","apply_mut","apply_mut","apply_to_inner","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_values","apply_values","apply_values","apply_values","apply_values","apply_views","arg_sort","arg_sort","arg_sort","arg_sort","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_unique","arg_unique","arg_unique","arg_unique","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_binary","as_borrowed","as_ref","as_ref","as_ref_dtype","as_slice","binary_zip_and_apply_amortized","bitand","bitand","bitor","bitor","bitxor","bitxor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxed","call_categorical_merge_operation","cast","cast","cast","cast_leaf","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","categorical","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","coerce","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","contains_categoricals","contains_objects","contains_views","create_enum_data_type","data_type","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","divide","divide","divide","divide","divide","divide","divide","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dtype","dtype","dtype","dtype","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equal","equal","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","explode_and_offsets","field","fill_null_with_values","fill_null_with_values","filter","filter","filter","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each_amortized","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arrow","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter_options","from_iter_options","from_iter_options","from_iter_options","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_values","from_iter_values","from_iter_values","from_iter_values","from_owned","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter_with_dtype","from_slice","from_slice","from_slice","from_slice","from_slice_options","from_slice_options","from_slice_options","from_slice_options","from_trusted_len_iter_rev","from_vec","from_zeroable_vec","full","full","full","full","full","full","full","full_null","full_null","full_null","full_null","full_null","full_null","full_null","full_null_with_dtype","get","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_as_series","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_inner","get_object","get_object_unchecked","get_str","get_unchecked","get_unchecked","get_values_size","get_values_size","get_values_size","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","gt","gt","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","hash","hash","hash","hash","hash","hash","hash","hash_impl","implode","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner_dtype","inner_dtype","inner_dtype","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_decimal","into_decimal_unchecked","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_scalar","into_series","into_series","into_static","is_array","is_binary","is_bool","is_boolean","is_categorical","is_decimal","is_enum","is_float","is_float","is_integer","is_integer","is_known","is_list","is_logical","is_nested","is_nested_null","is_nested_null","is_null","is_null","is_numeric","is_numeric","is_object","is_ord","is_primitive","is_signed_integer","is_signed_integer","is_string","is_struct","is_temporal","is_unsigned_integer","is_unsigned_integer","is_view","iter","iter_offsets","last","leaf_dtype","lt","lt","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","make_categoricals_compatible","make_list_categoricals_compatible","matches_schema_type","materialize","max","max_reduce","max_reduce","max_reduce","mean","median","median","median_reduce","median_reduce","merge_dtypes","min","min_reduce","min_reduce","min_reduce","mmap_slice","mul","multiply","multiply","multiply","multiply","multiply","multiply","multiply","n_unique","n_unique","name","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_vec","new_from_vec_and_validity","new_logical","newest","not","not","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","offsets","oldest","par_iter","par_iter","par_iter_indexed","par_iter_indexed","partial_cmp","partial_cmp","physical","precision","precision","quantile","quantile","quantile_reduce","quantile_reduce","rand_bernoulli","remainder","remainder","remainder","remainder","remainder","remainder","remainder","reverse","reverse","reverse","reverse","reverse","reverse","revmap","scale","scale","scatter_single","scatter_single","scatter_single","scatter_with","scatter_with","scatter_with","set","set","set","set_fast_explode","set_inner_dtype","set_name","shift","shift","shift","shift","shift","shift","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","sort","sort","sort","sort","sort_with","sort_with","sort_with","sort_with","std_reduce","std_reduce","strict_cast","string_cache","sub","subtract","subtract","subtract","subtract","subtract","subtract","subtract","sum","sum_reduce","sum_reduce","take_unchecked","take_unchecked","take_unchecked","take_unchecked","to_arrow","to_arrow","to_arrow","to_arrow_field","to_ascii","to_decimal","to_logical","to_logical_type","to_ndarray","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_scale","to_scale","to_string","to_string","to_string","to_string_unchecked","tot_eq","try_apply_amortized","try_apply_amortized_generic","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_extract","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_strict_cast","try_to_arrow","try_zip_and_apply_amortized","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","underlying_physical_type","unique","unique","unique","unique","value","value_unchecked","value_within_range","values_iter","var_reduce","var_reduce","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_capacity","with_capacity","with_capacity","with_nullable_idx","with_validity_typed","zero","zip_and_apply_amortized","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","__clone_box","_can_fast_unique","_with_fast_unique","append","append","append_null","append_value","arg_sort","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_categorical_merge_operation","cast_with_options","clone","clone_into","clone_to_uninit","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drain_iter_and_finish","drop","drop","drop","drop","dtype","equal","equal","equal","equal_missing","equal_missing","equal_missing","finish","finish","finish","from","from","from","from","from_cats_and_rev_map_unchecked","from_global_indices_unchecked","from_string_to_enum","full_null","get_any_value","get_any_value_unchecked","get_rev_map","gt","gt","gt","gt_eq","gt_eq","gt_eq","init","init","init","init","into","into","into","into","into_iter","into_series","is_empty","is_enum","iter_str","len","lt","lt","lt","lt_eq","lt_eq","lt_eq","make_categoricals_compatible","make_list_categoricals_compatible","max_reduce","merge_map","min_reduce","n_unique","name","new","new","next","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","null_count","physical","register_value","revmap","size_hint","sort","sort_with","string_cache","to_arrow","to_enum","to_global","to_local","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unique","uses_lexical_ordering","value_counts","vzip","vzip","vzip","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","__clone_box","__clone_box","borrow","borrow","borrow_mut","borrow_mut","build_local","clone","clone","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","default","default","deref","deref","deref_mut","deref_mut","drop","drop","eq","find","fmt","fmt","from","from","get","get_categories","get_optional","init","init","into","into","is_global","is_local","len","same_src","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","StringCacheHolder","borrow","borrow_mut","default","deref","deref_mut","disable_string_cache","drop","drop","enable_string_cache","from","hold","init","into","try_from","try_into","type_id","using_string_cache","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","CategoricalRemappingWarning","ColumnNotFound","ComputeError","Context","Duplicate","Err","ErrString","IO","InvalidOperation","MapWithoutReturnDtypeWarning","NoData","Ok","OutOfBounds","PolarsError","PolarsResult","PolarsWarning","SQLInterface","SQLSyntax","SchemaFieldNotFound","SchemaMismatch","ShapeMismatch","StringCacheMismatch","StructFieldNotFound","UserWarning","as_ref","borrow","borrow","borrow_mut","borrow_mut","constants","deref","deref","deref","deref_mut","deref_mut","drop","drop","feature_gated","fmt","fmt","fmt","from","from","from","get_warning_function","init","init","into","into","map_err","polars_bail","polars_ensure","polars_err","polars_warn","set_warning_function","to_compute_err","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","error","error","msg","msg","FALSE","LENGTH_LIMIT_MSG","TRUE","_boost_hash_combine","ahash","arrow","chrono","num","once_cell","rayon","regex","FloatFmt","Full","Mixed","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","deref","deref_mut","drop","fmt_decimal","from","get_decimal_separator","get_float_fmt","get_float_precision","get_thousands_separator","get_trim_decimal_zeros","init","into","set_decimal_separator","set_float_fmt","set_float_precision","set_thousands_separator","set_trim_decimal_zeros","to_owned","try_from","try_into","type_id","vzip","Any","DataFrame","First","Ignore","Last","None","NullStrategy","PhysRecordBatchIter","Propagate","RecordBatchIter","UniqueKeepStrategy","__clone_box","__clone_box","__clone_box","_add_columns","_apply_columns","_apply_columns_par","_filter_seq","_select_impl","_select_impl_unchecked","_slice_and_realloc","add","add","add","align_chunks","apply","apply_at_idx","as_single_chunk","as_single_chunk_par","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chunk_lengths","clear","clone","clone","clone","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","column","columns","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","drop","drop","drop","drop","drop","drop","drop_in_place","drop_many","drop_many_amortized","drop_nulls","dtypes","empty","empty_with_arrow_schema","empty_with_schema","eq","eq","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","explode","explode_impl","extend","fields","fill_null","filter","fmt","fmt","fmt","fmt","from","from","from","from","from","from_fallible_iter","from_iter","from_rows","from_rows_and_schema","from_rows_iter_and_schema","get","get_column_index","get_column_names","get_column_names_owned","get_columns","get_columns_mut","get_row","get_row_amortized","get_row_amortized_unchecked","get_supertype","group_by","group_by","group_by_stable","group_by_with_series","hash","hash_rows","head","height","hstack","hstack_mut","hstack_mut_unchecked","index","index","index","index","index","index","index","index","init","init","init","init","init","insert_column","into","into","into","into","into","into_iter","into_iter","is_duplicated","is_empty","is_unique","iter","iter_chunks","iter_chunks","iter_chunks_physical","len","max_horizontal","mean_horizontal","min_horizontal","mul","mul","mul","n_chunks","n_chunks","new","new_no_checks","new_no_length_checks","next","next","null_count","partition_by","partition_by_stable","pipe","pipe_mut","pipe_with_args","pop","ptr_equal","rem","rem","rem","rename","replace","replace_column","replace_or_add","reverse","row","sample_frac","sample_n","sample_n_literal","schema","schema_equal","select","select_at_idx","select_by_range","select_physical","select_series","select_with_schema","select_with_schema_unchecked","set_column_names","shape","shift","should_rechunk","shrink_to_fit","size_hint","size_hint","slice","slice","slice_par","sort","sort_in_place","split_at","split_at","split_chunks","split_chunks_by_n","sub","sub","sub","sum_horizontal","tail","take","take_unchecked","take_unchecked_impl","to_ndarray","to_owned","to_owned","to_owned","to_string","transpose","try_apply","try_apply_at_idx","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_rows_iter_and_schema","try_get_column_index","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unique","unique_impl","unique_stable","unpivot","unpivot2","vstack","vstack_mut","vzip","vzip","vzip","vzip","vzip","width","with_column","with_column_and_schema","with_column_unchecked","with_row_index","with_row_index_mut","UnpivotArgs","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","index","init","into","on","streamable","to_owned","try_from","try_into","type_id","value_name","variable_name","vzip","BorrowIdxItem","Count","First","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","Idx","Idx","IdxItem","Implode","IntoGroupsProxy","Last","Max","Mean","Median","Min","NUnique","NanMax","NanMin","Quantile","Slice","Slice","SlicedGroups","Std","Sum","Var","__clone_box","__clone_box","__clone_box","__clone_box","agg_list","aggregations","all","apply","as_list_chunked","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","count","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","df","drive_unindexed","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expr","first","first","first","first_mut","fmt","fmt","fmt","fmt","fmt","fmt_group_by_column","from","from","from","from","from","from","from","from","from","from","from","from","from_fallible_iter","from_iter","from_par_iter","get","get_groups","get_groups_mut","group_count","group_tuples","group_tuples","groups","idx_mut","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_idx","into_iter","into_iter","into_iter","into_par_iter","into_par_iter","into_par_iter","is_empty","is_empty","is_sorted_flag","iter","iter","keys","keys_sliced","last","len","len","max","mean","median","min","n_unique","new","new","next","nth","par_apply","par_iter","par_iter","quantile","select","slice","sort","sort","std","sum","take_group_firsts","take_group_lasts","take_groups","take_groups_mut","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unroll","unwrap_idx","unwrap_slice","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","include_nulls","groups","rolling","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","PhysicalAggExpr","evaluate","root_name","All","All","AnyValueBuffer","AnyValueBufferTrusted","Boolean","Boolean","Float32","Float32","Float64","Float64","Int32","Int32","Int64","Int64","Null","Null","Row","String","String","UInt32","UInt32","UInt64","UInt64","__clone_box","__clone_box","__clone_box","add","add_unchecked_borrowed_physical","add_unchecked_owned_physical","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","coerce_data_type","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","from","from","infer_schema","init","init","init","into","into","into","into_series","into_series","new","new","new","reset","reset","rows_to_schema_first_non_null","rows_to_schema_supertypes","rows_to_supertypes","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","concat_df_diagonal","concat_df_horizontal","IdBuildHasher","IdHasher","IdxHash","VecHash","_HASHMAP_INIT_SIZE","_boost_hash_combine","_df_rows_to_hashes_threaded_vertical","_hash_binary_array","borrow","borrow","borrow_mut","borrow_mut","default","deref","deref","deref_mut","deref_mut","drop","drop","finish","fmt","from","from","hash","hash","idx","init","init","into","into","populate_multiple_key_hashmap","try_from","try_from","try_into","try_into","type_id","type_id","vec_hash","vec_hash","vec_hash_combine","vec_hash_combine","vzip","vzip","write","write_i32","write_i64","write_u32","write_u64","Ambiguous","Arc","ArithmeticChunked","ArrayCollectIterExt","ArrayRef","ArrowField","ArrowSchema","BinaryChunkedBuilder","BooleanChunkedBuilder","C","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","ChunkAggSeries","ChunkId","ChunkedArray","ChunkedBuilder","ChunkedCollectInferIterExt","ChunkedCollectIterExt","ColumnNotFound","ComputeError","Context","DataFrame","Duplicate","DynArgs","Earliest","Err","Fortran","FromData","FromDataBinary","FromDataUtf8","Global","GlobalRevMapMerger","Higher","IO","IdxArr","IdxSize","IndexOrder","IndexToUsize","IntoSeries","IntoVec","InvalidOperation","LargeBinaryArray","LargeListArray","LargeStringArray","Latest","Lexical","LhsNumOps","Linear","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListFromIter","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","Local","Lower","Midpoint","NamedFrom","NamedFromOwned","Nearest","NewChunkedArray","NoData","NonExistent","None","Null","Null","NullableChunkId","NullableIdxSize","NumOpsDispatch","NumOpsDispatchChecked","Ok","OutOfBounds","Physical","PolarsError","PolarsIterator","PolarsObject","PolarsResult","PrimitiveChunkedBuilder","QuantileAggSeries","QuantileInterpolOptions","Raise","Raise","RevMapping","RollingOptionsFixedWindow","RollingQuantileParams","RollingVarParams","SQLInterface","SQLSyntax","Scalar","SchemaFieldNotFound","SchemaMismatch","Series","SeriesTrait","ShapeMismatch","SlicedArray","Some","StringCacheHolder","StringCacheMismatch","StringChunkedBuilder","StructFieldNotFound","UniqueKeepStrategy","UnpivotArgs","VarAggSeries","VecHash","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","allocator","as_fd","as_ptr","as_raw_fd","as_ref","assume_init","assume_init","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_categorical_merge_operation","cause","center","checked_div","checked_div_num","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","cmp","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","compare","context","context_trace","convert_inner_type","data_type","data_type","datatypes","ddof","decrement_strong_count","decrement_strong_count_in","default","default","default","default","default","default","default","default","default","default_arrays","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","df","downcast","downcast_unchecked","downgrade","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extract","fields","filter","finish","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fn_params","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_data_default","from_data_unchecked_default","from_data_unchecked_default","from_fallible_iter","from_iter","from_iter_binary_trusted_len","from_iter_binview_trusted_len","from_iter_bool_trusted_len","from_iter_primitive_trusted_len","from_iter_utf8_trusted_len","from_par_iter","from_raw","from_raw_in","from_str","from_vec","ge","get_mut","get_mut_unchecked","get_names","get_names_and_dtypes","get_unchecked","gt","hash","hash","hash","hash","hash","idx","increment_strong_count","increment_strong_count_in","index_of","indexes_to_usizes","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","inner_mut","interpol","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_raw","into_raw_with_allocator","into_series","is_empty","is_null","is_null_idx","is_nullable","is_read_vectored","is_valid_bit_pattern","is_write_vectored","le","len","list","lt","make_categoricals_compatible","make_list_categoricals_compatible","make_mut","max_reduce","max_reduce","median_reduce","metadata","metadata","min_periods","min_reduce","min_reduce","name","ne","negative_to_usize","new","new","new","new_cyclic","new_in","new_uninit","new_uninit_in","new_uninit_slice","new_uninit_slice_in","new_zeroed","new_zeroed_in","new_zeroed_slice","new_zeroed_slice_in","null","null","null","partial_cmp","pin","pin_in","polars_bail","polars_ensure","polars_err","polars_warn","prob","prod_reduce","prod_reduce","provide","ptr_eq","quantile_reduce","read","read_buf","read_to_end","read_to_string","read_vectored","revmap","seek","slice","slice_typed","slice_typed_unchecked","source","std_reduce","store","string_cache","strong_count","sum_reduce","sum_reduce","to_opt","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_negative_to_usize","try_new","try_new_in","try_new_uninit","try_new_uninit_in","try_new_zeroed","try_new_zeroed_in","try_pin","try_pin_in","try_project","try_unwrap","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrap_or_clone","utf8","var_reduce","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weak_count","weights","window_size","with_metadata","with_metadata","write","write_vectored","error","error","msg","msg","FromData","FromDataBinary","FromDataUtf8","from_data_default","from_data_unchecked_default","from_data_unchecked_default","AnonymousBuilder","borrow","borrow_mut","deref","deref_mut","drop","finish","from","init","into","is_empty","new","offsets","push","push_empty","push_multiple","push_null","push_opt","take_offsets","try_from","try_into","type_id","vzip","MutableNullArray","__clone_box","as_any","as_box","as_mut_any","borrow","borrow_mut","clone","clone_into","clone_to_uninit","data_type","default","deref","deref_mut","drop","extend_nulls","fmt","from","init","into","len","new","push_null","reserve","shrink_to_fit","to_owned","try_from","try_into","type_id","validity","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","SlicedArray","slice_typed","slice_typed_unchecked","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","BinaryFromIter","Utf8FromIter","from_values_iter","from_values_iter","set_global_random_seed","Scalar","__clone_box","as_any_value","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","dtype","from","init","into","into_series","new","reduce","to_owned","try_from","try_into","type_id","update","value","vzip","mean_reduce","DataType","IS_ARROW","IndexOfSchema","Schema","SchemaNamesAndDtypes","SchemaRef","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","contains","default","deref","deref_mut","drop","ensure_matching_schema","eq","equivalent","equivalent","equivalent","fmt","from","from","from","from","from","from","from","from_fallible_iter","from_iter","get","get_at_index","get_at_index_mut","get_field","get_full","get_names","get_names","get_names_and_dtypes","get_names_and_dtypes","hash","index_of","index_of","init","insert_at_index","into","into_iter","is_empty","iter","iter_dtypes","iter_dtypes_mut","iter_fields","iter_names","len","merge","merge_from_ref","new","new_inserting_at_index","remove","rename","reserve","set_dtype","set_dtype_at_index","shift_remove","shift_remove_index","to_arrow","to_owned","to_supertype","try_from","try_get","try_get_at_index","try_get_field","try_get_full","try_get_mut","try_index_of","try_into","type_id","vzip","with_capacity","with_column","Ascending","Ascending","BitRepr","ChunkCompare","Descending","Descending","IntoSeries","IsSorted","IsSorted","Large","Not","Not","Series","SeriesIter","SeriesPhysIter","SeriesTrait","Small","__clone_box","__clone_box","_try_from_arrow_unchecked","_try_from_arrow_unchecked_with_md","add","add","add","add","amortized_iter","append","arg_sort","arg_sort","arg_unique","arg_unique","arithmetic","array_ref","as_any","as_any_mut","as_any_mut","as_list","as_mut","as_ref","as_ref","as_single_ptr","as_single_ptr","as_single_ptr","binary","binary_offset","bitand","bitand","bitor","bitor","bitxor","bitxor","bool","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast","cast","cast_unchecked","cast_with_options","categorical","checked_div","checked_div","checked_div","checked_div_num","chunk_lengths","chunk_lengths","chunks","chunks_mut","chunks_mut","clear","clone","clone","clone_inner","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","compute_len","decimal","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","div","dot","drop","drop","drop","drop","drop_nulls","drop_nulls","dtype","dtype","eq","eq","equal","equal","equal","equal_missing","equal_missing","equal_missing","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","extend","extend_constant","f32","f64","field","field","fill_null","filter","fmt","fmt","fmt","fmt_list","from","from","from","from","from","from_any_values","from_any_values_and_dtype","from_arrow","from_arrow_chunks","from_chunks_and_dtype_unchecked","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","full_null","gather_every","get","get_data_ptr","get_flags","get_leaf_array","get_metadata","get_metadata","get_object","get_object","get_object_chunked_unchecked","get_object_chunked_unchecked","get_unchecked","get_unchecked","gt","gt","gt","gt_eq","gt_eq","gt_eq","has_nulls","hash","head","i16","i32","i64","i8","idx","implementations","implode","init","init","init","init","into","into","into","into","into_frame","into_iter","into_series","into_series","is_empty","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_series","is_series","is_series","is_sorted_flag","iter","iter_chunks","len","len","limit","limit","list","lt","lt","lt","lt_eq","lt_eq","lt_eq","max","max_reduce","max_reduce","mean","mean","mean_reduce","median","median","median_reduce","median_reduce","min","min_reduce","min_reduce","mul","mul","mul","mul","n_chunks","n_chunks","n_chunks","n_unique","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_null","next","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","null","null_count","ops","phys_iter","product","quantile_reduce","quantile_reduce","rechunk","rem","rem","rem","rename","rename","reshape_list","reverse","reverse","rolling_map","rolling_map","sample_frac","sample_n","select_chunk","set_sorted_flag","shift","shrink_to_fit","shrink_to_fit","shrink_to_fit","shuffle","size_hint","slice","slice","sort","sort_with","sort_with","split_at","split_at","std","std","std_reduce","std_reduce","str","str_value","strict_cast","sub","sub","sub","sub","sum","sum_reduce","sum_reduce","sum_reduce","tail","take","take_slice","take_slice_unchecked","take_unchecked","take_unchecked_from_slice","to_arrow","to_float","to_owned","to_owned","to_physical_repr","to_string","try_add_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_mul_owned","try_set_metadata","try_sub_owned","type_id","type_id","type_id","type_id","u16","u32","u64","u8","unique","unique","unique_stable","unpack","var","var","var_reduce","var_reduce","vzip","vzip","vzip","vzip","with_name","wrapping_trunc_div_scalar","zip_with","AmortSeries","ArrayBox","__clone_box","as_ref","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deep_clone","deref","deref_mut","drop","from","init","into","new","swap","to_owned","try_from","try_into","type_id","vzip","with_array","LhsNumOps","NumOpsDispatch","NumOpsDispatchInner","Output","add","add_to","add_to","add_to","checked","div","divide","divide","divide","mul","multiply","multiply","multiply","rem","remainder","remainder","remainder","sub","subtract","subtract","subtract","NumOpsDispatchChecked","NumOpsDispatchCheckedInner","checked_div","checked_div","checked_div","checked_div_num","checked_div_num","checked_div_num","Drop","Ignore","NullBehavior","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","to_owned","try_from","try_into","type_id","vzip","Arg","Container","CustomIterTools","CustomIterToolsSized","FromTrustedLenIterator","IntoVec","NoNull","SuperTypeOptions","TrustMyLength","Wrap","__clone_box","__clone_box","_set_partition_size","accumulate_dataframes_horizontal","accumulate_dataframes_vertical","accumulate_dataframes_vertical_unchecked","accumulate_dataframes_vertical_unchecked_optional","align_chunks_binary","align_chunks_ternary","all_equal","any_values_to_supertype","any_values_to_supertype_and_n_dtypes","arrow","binary_concatenate_validities","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chunk_lengths","clone","clone","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","coalesce_nulls","coalesce_nulls_series","collect_reversed","collect_trusted","concat_df","concat_df_unchecked","contains","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","dtypes_to_schema","dtypes_to_supertype","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","flatten","fmt","fold_options","from","from","from","from","from_fallible_iter","from_iter","from_iter","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_par_iter","from_trusted_len_iter_rev","from_trusted_len_iter_rev","get_supertype","get_supertype_with_options","get_time_units","handle_casting_failures","hash","hash","implode_list","init","init","init","init","into","into","into","into","into_inner","into_iter","into_vec","into_vec","into_vec","iter_chunks","len","materialize_dyn_int","n_chunks","new","new","next","next_back","rayon","size_hint","slice","slice_slice","split","split_and_flatten","split_at","split_df_as_ref","to_owned","to_owned","trust_my_length","try_from","try_from","try_from","try_from","try_get_supertype","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","with_unstable_series","cap_and_offsets","flatten_df_iter","flatten_nullable","flatten_par","flatten_series"],"q":[[0,"polars_core"],[40,"polars_core::chunked_array"],[440,"polars_core::chunked_array::arithmetic"],[468,"polars_core::chunked_array::builder"],[576,"polars_core::chunked_array::builder::list"],[730,"polars_core::chunked_array::cast"],[760,"polars_core::chunked_array::collect"],[774,"polars_core::chunked_array::float"],[776,"polars_core::chunked_array::from_iterator_par"],[780,"polars_core::chunked_array::iterator"],[817,"polars_core::chunked_array::iterator::par"],[819,"polars_core::chunked_array::metadata"],[1109,"polars_core::chunked_array::object"],[1186,"polars_core::chunked_array::object::builder"],[1209,"polars_core::chunked_array::object::registry"],[1237,"polars_core::chunked_array::ops"],[1363,"polars_core::chunked_array::ops::arity"],[1399,"polars_core::chunked_array::ops::float_sorted_arg_max"],[1401,"polars_core::chunked_array::ops::gather"],[1404,"polars_core::chunked_array::ops::search_sorted"],[1435,"polars_core::chunked_array::ops::sort"],[1442,"polars_core::chunked_array::ops::sort::arg_bottom_k"],[1443,"polars_core::chunked_array::ops::sort::arg_sort_multiple"],[1451,"polars_core::chunked_array::ops::sort::options"],[1529,"polars_core::chunked_array::temporal"],[1530,"polars_core::chunked_array::temporal::conversion"],[1533,"polars_core::config"],[1537,"polars_core::datatypes"],[3005,"polars_core::datatypes::categorical"],[3146,"polars_core::datatypes::categorical::revmap"],[3201,"polars_core::datatypes::categorical::string_cache"],[3220,"polars_core::datatypes::revmap"],[3226,"polars_core::datatypes::string_cache"],[3230,"polars_core::error"],[3295,"polars_core::error::PolarsError"],[3299,"polars_core::error::constants"],[3302,"polars_core::export"],[3310,"polars_core::fmt"],[3342,"polars_core::frame"],[3615,"polars_core::frame::explode"],[3645,"polars_core::frame::group_by"],[3885,"polars_core::frame::group_by::GroupByMethod"],[3886,"polars_core::frame::group_by::GroupsProxy"],[3888,"polars_core::frame::group_by::aggregations"],[3901,"polars_core::frame::group_by::expr"],[3904,"polars_core::frame::row"],[4001,"polars_core::functions"],[4003,"polars_core::hashing"],[4051,"polars_core::prelude"],[4634,"polars_core::prelude::PolarsError"],[4638,"polars_core::prelude::default_arrays"],[4644,"polars_core::prelude::list"],[4667,"polars_core::prelude::null"],[4698,"polars_core::prelude::revmap"],[4704,"polars_core::prelude::slice"],[4707,"polars_core::prelude::string_cache"],[4711,"polars_core::prelude::utf8"],[4715,"polars_core::random"],[4716,"polars_core::scalar"],[4741,"polars_core::scalar::reduce"],[4742,"polars_core::schema"],[4823,"polars_core::series"],[5237,"polars_core::series::amortized_iter"],[5261,"polars_core::series::arithmetic"],[5286,"polars_core::series::arithmetic::checked"],[5294,"polars_core::series::ops"],[5322,"polars_core::utils"],[5468,"polars_core::utils::flatten"],[5473,"dyn_clone::sealed"],[5474,"num_traits"],[5475,"num_traits::cast"],[5476,"polars_error"],[5477,"polars_core::series::arithmetic::borrowed"],[5478,"polars_core::frame::group_by::proxy"],[5479,"core::option"],[5480,"core::iter::traits::iterator"],[5481,"core::ops::function"],[5482,"core::marker"],[5483,"alloc::string"],[5484,"polars_core::datatypes::dtype"],[5485,"polars_arrow::array::binview::view"],[5486,"polars_core::datatypes::aliases"],[5487,"polars_core::series::arithmetic::borrowed::checked"],[5488,"polars_arrow::array"],[5489,"alloc::vec"],[5490,"core::iter::traits::double_ended"],[5491,"core::fmt"],[5492,"core::iter::traits::collect"],[5493,"core::result"],[5494,"polars_utils::iter::fallible"],[5495,"polars_arrow::bitmap::immutable"],[5496,"rayon::iter"],[5497,"polars_arrow::trusted_len"],[5498,"polars_core::datatypes::any_value"],[5499,"polars_utils::index"],[5500,"std::sync::rwlock"],[5501,"polars_core::chunked_array::logical::decimal"],[5502,"core::iter::traits::exact_size"],[5503,"polars_core::series::series_trait"],[5504,"core::slice::iter"],[5505,"core::iter::adapters::map"],[5506,"polars_core::chunked_array::metadata::guard"],[5507,"polars_core::chunked_array::metadata::interior_mutable"],[5508,"alloc::sync"],[5509,"polars_core::chunked_array::metadata::md_trait"],[5510,"core::convert"],[5511,"core::ops::range"],[5512,"polars_core::datatypes::field"],[5513,"polars_arrow::legacy::kernels::rolling::no_nulls"],[5514,"polars_core::chunked_array::ops::rolling_window"],[5515,"ahash::random_state"],[5516,"polars_utils::hashing"],[5517,"ndarray::aliases"],[5518,"either"],[5519,"core::any"],[5520,"polars_core::chunked_array::arithmetic::numeric"],[5521,"polars_core::chunked_array::builder::string"],[5522,"polars_arrow::array::binview"],[5523,"polars_core::chunked_array::builder::boolean"],[5524,"polars_core::chunked_array::builder::null"],[5525,"polars_core::chunked_array::builder::primitive"],[5526,"core::clone"],[5527,"polars_core::chunked_array::builder::list::anonymous"],[5528,"polars_core::chunked_array::builder::list::boolean"],[5529,"polars_core::chunked_array::builder::list::primitive"],[5530,"polars_core::chunked_array::builder::list::binary"],[5531,"polars_core::chunked_array::builder::list::null"],[5532,"alloc::boxed"],[5533,"core::hash"],[5534,"polars_arrow::array::boolean"],[5535,"polars_core::chunked_array::metadata::env"],[5536,"polars_core::chunked_array::metadata::collect"],[5537,"bitflags::iter"],[5538,"std::fs"],[5539,"std::sync::mutex"],[5540,"polars_arrow::datatypes"],[5541,"polars_arrow::bitmap::utils::iterator"],[5542,"polars_arrow::bitmap::utils::zip_validity"],[5543,"polars_arrow::offset"],[5544,"polars_arrow::array::static_array"],[5545,"core::error"],[5546,"polars_arrow::array::primitive"],[5547,"polars_arrow::legacy::array::slice"],[5548,"polars_row::row"],[5549,"polars_arrow::array::binary"],[5550,"chrono::naive::datetime"],[5551,"alloc::borrow"],[5552,"polars_arrow::array::static_array_collect"],[5553,"bytemuck::zeroable"],[5554,"polars_core::chunked_array::logical::categorical"],[5555,"polars_core::chunked_array::logical::categorical::merge"],[5556,"polars_core::chunked_array::logical"],[5557,"polars_core::datatypes::time_unit"],[5558,"polars_arrow::types"],[5559,"polars_arrow::datatypes::physical_type"],[5560,"core::borrow"],[5561,"polars_arrow::pushable"],[5562,"polars_core::datatypes::into_scalar"],[5563,"core::cmp"],[5564,"polars_core::chunked_array::logical::categorical::builder"],[5565,"polars_core::chunked_array::logical::categorical::revmap"],[5566,"polars_core::chunked_array::logical::categorical::string_cache"],[5567,"polars_error::warning"],[5568,"polars_core::series::from"],[5569,"polars_utils::aliases"],[5570,"polars_arrow::datatypes::schema"],[5571,"polars_core::chunked_array::ndarray"],[5572,"polars_arrow::array::struct_"],[5573,"polars_arrow::record_batch"],[5574,"polars_utils::idx_vec"],[5575,"rayon::iter::plumbing"],[5576,"polars_core::frame::group_by::into_groups"],[5577,"core::iter::adapters::copied"],[5578,"core::iter::adapters::zip"],[5579,"polars_arrow::legacy::kernels::rolling"],[5580,"polars_utils::float"],[5581,"polars_arrow::types::native"],[5582,"polars_core::frame::group_by::aggregations::agg_list"],[5583,"polars_core::frame::row::av_buffer"],[5584,"polars_core::hashing::identity"],[5585,"hashbrown::map"],[5586,"polars_core::hashing::vector_hasher"],[5587,"core::alloc"],[5588,"std::os::fd::owned"],[5589,"std::os::fd::raw"],[5590,"core::mem::maybe_uninit"],[5591,"polars_arrow::legacy::kernels::time"],[5592,"core::ffi::c_str"],[5593,"core::default"],[5594,"polars_arrow::scalar"],[5595,"std::io::error"],[5596,"simdutf8::basic"],[5597,"alloc::collections"],[5598,"regex::error"],[5599,"std::path"],[5600,"std::ffi::os_str"],[5601,"alloc::ffi::c_str"],[5602,"polars_arrow::legacy::array::default_arrays"],[5603,"polars_arrow::buffer::immutable"],[5604,"polars_arrow::array::list"],[5605,"polars_core::named_from"],[5606,"polars_core::chunked_array::ops::aggregate"],[5607,"polars_core::chunked_array::ops::aggregate::quantile"],[5608,"polars_arrow::legacy::index"],[5609,"core::pin"],[5610,"core::io::borrowed_buf"],[5611,"std::io"],[5612,"polars_core::chunked_array::ops::aggregate::var"],[5613,"alloc::collections::btree::map"],[5614,"polars_arrow::legacy::array::list"],[5615,"polars_arrow::legacy::array::null"],[5616,"polars_arrow::bitmap::mutable"],[5617,"polars_arrow::array::utf8"],[5618,"polars_core::series::iterator"],[5619,"alloc::rc"],[5620,"polars_arrow::legacy::utils"],[5621,"polars_core::utils::supertype"],[5622,"polars_arrow::legacy::trusted_len::rev"],[5623,"smartstring::config"],[5624,"smartstring"],[5625,"polars_core::chunked_array::object::extension"],[5626,"polars_error::constants"],[5627,"polars_core::frame::horizontal"],[5628,"polars_arrow::legacy::prelude"],[5629,"polars_arrow::legacy::array"],[5630,"polars_arrow::legacy::array::utf8"],[5631,"polars_core::utils::any_value"],[5632,"polars_core::utils::schema"],[5633,"polars_core::utils::series"]],"if":"`````````````{{}b}``0```````````````{{}d}``````````````{{{f{c}}h}b{}}{{{f{{l{j}}}}}d}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{{l{c}}}}{f{Aj}}}Adn}{{{f{{l{Al}}}}}d}{{{f{{l{Al}}}}}{{An{d}}}}{{{f{{l{j}}}}}{{`{{`{{Bd{}{{B`{{An{Bb}}}}}}}}}}}}{{{f{{l{j}}}}{f{Bf}}}{{`{{`{{Bd{}{{B`{{An{Bb}}}}}}}}}}}}32{{{f{Bh{l{c}}}}{f{{l{c}}}}}b{{Bn{}{{Bj{Bl}}}}}}{{{f{{l{c}}}}e}{{l{c}}}n{{Cb{An}{{C`{An}}}}Cd}}{{{f{{l{j}}}}c}{{l{j}}}{{Ch{Cf}{{C`{Ad}}}}}}{{{f{{l{j}}}}e}{{l{g}}}{}{{Ch{{An{Cf}}}{{C`{{An{c}}}}}}Cd}Bn}{{{f{{l{Cj}}}}c}Ad{{Cb{{f{Ad}}}{{C`{Ad}}}}}}{{{f{{l{Cl}}}}c}Ad{{Cb{{f{Ad}}}{{C`{Ad}}}}}}{{{l{c}}e}{{l{c}}}n{{Cb{}{{C`{}}}}Cd}}{{{f{{l{c}}}}e}CnBn{{Ch{{f{BhD`}}}}}}{{{f{{l{c}}}}{f{Cb}}}{{l{c}}}n}{{{f{{l{c}}}}{f{Cb}}}{{l{e}}}nBn}{{{f{Bh{l{c}}}}e}bn{{Cb{}{{C`{}}}}Cd}}{{{f{{l{Db}}}}c}{{l{Db}}}{{Ch{{f{Bf}}}{{C`{{f{Bf}}}}}}}}{{{f{{l{Dd}}}}c}{{l{Dd}}}{{Ch{{f{{Dh{Df}}}}}{{C`{{f{{Dh{Df}}}}}}}}}}{{{f{{l{c}}}}Djg}{{l{i}}}Bn{}{{Ch{}{{C`{e}}}}}Bn}{{{f{{l{j}}}}{f{Cb}}}{{Af{Dl}}}}{{{f{{l{c}}}}g{f{Bh{Dh{e}}}}}bn{}{{Cb{An{f{e}}}{{C`{e}}}}}}{{{f{{l{c}}}}e}{{l{c}}}n{{Cb{}{{C`{}}}}Cd}}{{{f{{l{Db}}}}c}{{l{Db}}}{{Ch{Dn{f{Bf}}}{{C`{Dn}}}}Cd}}{{{f{{l{c}}}}E`}Ebn}{{{f{{l{c}}}}{f{{Dh{Ad}}}}{f{Ed}}}{{Af{Eb}}}n}{{{f{{l{c}}}}}{{Af{Eb}}}n}`{{{f{{l{Db}}}}}Ef}{{{f{{l{c}}}}}{{f{{l{c}}}}}Bn}{{{f{{l{c}}}}}{{f{Dj}}}Bn}{{{f{{l{j}}}}{f{{l{c}}}}{f{{l{e}}}}g}{{l{j}}}BnBn{{Ch{{An{Cf}}AnAn}{{C`{{An{Ad}}}}}}}}{{{f{{l{c}}}}{f{{l{c}}}}}eEh{}}00{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bhc}}}{{f{Bhe}}}{}{}}0``{{{f{{l{c}}}}e}{{l{g}}}n{{Cb{}{{C`{}}}}Cd}n}{{{f{{l{c}}}}{f{Dj}}}{{Af{Ad}}}n}{{{f{{l{c}}}}{f{Dj}}Ej}{{Af{Ad}}}n}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}El}{{{f{{l{c}}}}e}{{Af{Ad}}}ElAb}{{{f{{l{c}}}}}{{`{{Bd{}{{B`{En}}}}}}}Bn}{{{f{{l{c}}}}}F`Bn}{{{f{{l{c}}}}}{{f{{Fd{Fb}}}}}Bn}{{{f{Bh{l{c}}}}}{{f{Bh{Fd{Fb}}}}}Bn}{{{f{{l{c}}}}}{{l{c}}}Bn}0{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}`{{{f{Bh{l{c}}}}}b{Bnn}}`{{{f{{l{c}}}}}{{Af{{f{Dh}}}}}n}{{{f{Bh{l{c}}}}{f{{l{c}}}}Ff}bBn}{{{f{Bh{l{c}}}}{f{{l{e}}}}Ff}bBnBn}{{{f{{l{c}}}}}{{`{{Fh{}{{B`{{f{Dh}}}}}}}}}n}{{}{{l{c}}}Bn}{En{{f{c}}}{}}0{En{{f{Bhc}}}{}}0{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{l{c}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{Bh{l{c}}}}}bBn}{Enb}0{{{f{{l{c}}}}}{{l{c}}}Bn}{{{f{{l{c}}}}}{{f{Dj}}}Bn}{{{f{{l{c}}}}e}FjnAb}{{{f{{l{c}}}}{f{{l{c}}}}}Fjn}10{{{f{Bh{l{c}}}}{f{{l{c}}}}}bn}{{{f{{l{c}}}}}{{Af{{l{c}}}}}n}{{{f{{l{c}}}}{f{Fj}}}{{Af{{l{c}}}}}{{Bn{}{{Fl{Bl}}{Fn{Bl}}}}}}{{{f{{l{c}}}}}{{An{En}}}Bn}`{{{f{{l{c}}}}{f{BhG`}}}Gbn}{{{f{{l{Al}}}}{f{BhG`}}}Gb}{{{f{{l{c}}}}e}bBn{{Ch{An}}}}{{{f{{l{j}}}}c}b{{Ch{{An{Cf}}}}}}{c{{l{e}}}Gd{{Bn{}{{Gf{c}}}}}}{cc{}}0{{{f{Bf}}c}{{l{e}}}Gh{{Bn{}{{Gf{}}}}Bn}}{{{f{{l{c}}}}e}{{l{c}}}{{Bn{}{{Gf{}}}}Bn}Gh}{{{f{Bf}}{Fd{Fb}}}{{l{c}}}Bn}{{{f{Bf}}{Fd{Fb}}Dj}{{l{c}}}Bn}{g{{Gj{ic}}}{}{}{{Gl{c}{{B`{e}}}}}{}}{c{{l{e}}}{{Gh{}{{B`{An}}}}}n}{c{{l{e}}}{{Gh{}{{B`{{H`{Fd{An{Gn}}}}}}}}}n}{c{{l{Al}}}{{Gh{}{{B`{{An{d}}}}}}}}{{{f{Bf}}c}{{l{e}}}{{Bd{}{{B`{An}}}}}n}13{{{f{Bf}}c}{{l{e}}}{{Bd{}{{B`{}}}}}n}`{c{{l{e}}}{{Hb{}{{B`{An}}}}}n}{{{f{Bf}}{f{Dh}}}{{l{c}}}n}{{{f{Bf}}{f{{Dh{An}}}}}{{l{c}}}n}{c{{l{e}}}{{Hd{}{{B`{An}}}}}n}{{{f{Bf}}Fd}{{l{c}}}n}{{{f{Bf}}Fd{An{Gn}}}{{l{c}}}n}{{{f{Bf}}En}{{l{c}}}n}0{{{f{{l{c}}}}En}{{l{c}}}Bn}{{{f{Bf}}En{f{Dj}}}Dl}{{{f{{l{c}}}}En}AnBn}{{{f{{l{c}}}}En}{{Af{Hf}}}n}{{{f{{l{c}}}}En}Hfn}{{{f{{l{j}}}}En}{{An{Ad}}}}{{{f{{l{c}}}}}{{An{Hh}}}Bn}{{{f{{l{c}}}}}dBn}{{{f{{l{c}}}}}HjBn}{{{f{{l{j}}}}}Ad}{{{f{{l{c}}}}}AnBn}0{{{f{{l{{Hl{c}}}}}}En}{{An{{f{Hn}}}}}I`}09{{{f{{l{c}}}}dd}{{Af{Aj}}}n}{{{f{{l{c}}}}EndEn}AjEh}{{{f{{l{c}}}}e}FjnAb}{{{f{{l{c}}}}{f{{l{c}}}}}Fjn}018{{{f{{l{c}}}}{An{En}}}{{l{c}}}Bn}{{}En}0{{EnIb{An{Id}}}{{l{c}}}n}{{{f{{l{j}}}}}{{f{Dj}}}}{{{f{{l{c}}}}}{{Ih{{If{c}}}}}Bn}{ce{}{}}0{{{l{Ij}}{An{En}}En}{{Af{Il}}}}{{{l{Ij}}{An{En}}En}Il}{{{f{{l{c}}}}}en{}}{{{f{{l{c}}}}}{{`{InJ`{Jb{}{{B`{}}}}FhHd}}}n}{{{l{c}}}AdBn}{{{f{{l{c}}}}}dBn}{{{f{{l{c}}}}}FjJd}000{{{f{{l{c}}}}}FjBn}02{{{f{{l{c}}}}}JfBn}{{{f{{l{c}}}}}{{`{{Jh{}{{B`{An}}}}}}}Bn}{{{f{{l{c}}}}}{{`{{Bd{}{{B`{{l{c}}}}}}}}}Bn}{{{f{{l{j}}}}}{{`{{Bd{}{{B`{Jj}}}}}}}}{{{f{{l{c}}}}}{{K`{{Jl{Fb}}{Jn{{f{Fb}}}{{C`{{An{{f{Gn}}}}}}}}}}}Bn}`{{{f{{l{c}}}}}AnBn}{{{f{{l{c}}}}}{{An{En}}}Bn}{{{f{{l{c}}}}}{{Kb{c}}}Bn}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}e}gn{}{}}{{{l{c}}e}gn{}{}}{{c{f{{l{e}}}}}g{}n{}}{{c{l{e}}}g{}n{}}{{{f{{l{c}}}}}EnBn}0{{{f{{l{c}}}}e}{{l{c}}}n{A`Kd}}00{{{f{{l{c}}}}En}{{l{c}}}Bn}{{{f{{l{c}}}}e}FjnAb}{{{f{{l{c}}}}{f{{l{c}}}}}Fjn}10{{{f{{l{Al}}}}}{{An{d}}}}{{{f{{l{c}}}}}Ann}{{{f{{l{c}}}}}Kfn}{{{f{{l{Al}}}}}{{An{Kh}}}}{{{f{{l{c}}}}}{{An{Kh}}}n}{{{f{{l{c}}}}}{{An{Kh}}}Eh}{{{f{{l{c}}}}}KfEh}{{{f{Bh{l{c}}}}{If{c}}}bBn}`{{{f{{l{c}}}}}{{Kj{c}}}Bn}{{{f{{l{c}}}}}{{f{{Kn{{Kl{c}}}}}}}Bn}{{{f{{l{c}}}}}{{An{{Lb{L`}}}}}Bn}{{{f{Bh{l{c}}}}}{{f{Bh{Kn{{Kl{c}}}}}}}Bn}{{{f{{l{c}}}}}{{Kn{{Kl{c}}}}}Bn}<;{{{f{{l{c}}}}}{{An{H`}}}n};{{{f{Bf}}{f{Dh}}}{{l{c}}}n}{{{f{Bf}}{f{{Dh{Df}}}}EnEn}{{l{Al}}}}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{l{c}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{{l{c}}}}}EnBn}{{{f{{l{c}}}}}{{Af{En}}}n}{{{f{{l{c}}}}}{{f{Bf}}}Bn}{{{f{Bf}}c}{{l{Ld}}}{{Lh{{Dh{{An{Lf}}}}}}}}{{{f{Bf}}{Lj{Id}}}{{l{Ll}}}}{{{f{Bf}}c}{{l{Db}}}{{Lh{{Dh{D`}}}}}}{{{f{Bf}}c}{{l{Dd}}}{{Lh{{Dh{{Fd{Df}}}}}}}}{{{f{Bf}}c}{{l{Al}}}{{Lh{{Dh{d}}}}}}{{{f{Bf}}c}{{l{Ln}}}{{Lh{{Dh{M`}}}}}}{{{f{Bf}}c}{{l{Ll}}}{{Lh{{Dh{Id}}}}}}{{{f{Bf}}c}{{l{Ld}}}{{Lh{{Dh{Lf}}}}}}{{{f{Bf}}c}{{l{Mb}}}{{Lh{{Dh{Jj}}}}}}{{{f{Bf}}c}{{l{Ij}}}{{Lh{{Dh{Md}}}}}}{{{f{Bf}}c}{{l{Cj}}}{{Lh{{Dh{Ib}}}}}}{{{f{Bf}}c}{{l{Cl}}}{{Lh{{Dh{Kh}}}}}}{{{f{Bf}}c}{{l{Db}}}{{Lh{{Dh{{An{D`}}}}}}}}{{{f{Bf}}c}{{l{Dd}}}{{Lh{{Dh{{An{{Fd{Df}}}}}}}}}}{{{f{Bf}}c}{{l{Al}}}{{Lh{{Dh{{An{d}}}}}}}}{{{f{Bf}}c}{{l{Ln}}}{{Lh{{Dh{{An{M`}}}}}}}}{{{f{Bf}}c}{{l{Ll}}}{{Lh{{Dh{{An{Id}}}}}}}}{{{f{Bf}}c}{{l{Mb}}}{{Lh{{Dh{{An{Jj}}}}}}}}{{{f{Bf}}c}{{l{Ij}}}{{Lh{{Dh{{An{Md}}}}}}}}{{{f{Bf}}c}{{l{Cj}}}{{Lh{{Dh{{An{Ib}}}}}}}}{{{f{Bf}}c}{{l{Cl}}}{{Lh{{Dh{{An{Kh}}}}}}}}{{{f{Bf}}{Lj{Jj}}}{{l{Mb}}}}{{{f{Bf}}{Lj{Lf}}}{{l{Ld}}}}{{{f{Bf}}{Lj{M`}}}{{l{Ln}}}}{{{f{Bf}}}{{l{{Hl{c}}}}}I`}{{{f{{l{c}}}}EnEn}{{l{c}}}n}{{{f{Bf}}{Fd{c}}}{{l{{Hl{c}}}}}I`}{{{f{Bf}}{Fd{c}}Gn}{{l{{Hl{c}}}}}I`}{{{f{Bf}}Fd}{{l{c}}}n}{{{Kn{Mf}}{Fd{Fb}}HhHh}{{l{c}}}Bn}{{{f{{l{c}}}}}{{l{c}}}Jd}{{{f{{l{c}}}}{f{{l{c}}}}}Fjn}{{{f{{l{c}}}}e}FjnAb}01{{{f{{l{c}}}}}EnBn}``{{{f{{l{j}}}}}{{`{{Mh{}{{B`{{An{Ad}}}}}}}}}}{{{f{{l{Db}}}}}{{`{{Mh{}{{B`{{An{{f{Bf}}}}}}}}}}}}{{{f{Bh{l{j}}}}}{{`{{Mj{}{{B`{{An{Ad}}}}}}}}}}{{{f{{l{Db}}}}}{{`{{Mj{}{{B`{{An{{f{Bf}}}}}}}}}}}}{{{f{{l{c}}}}}Kfn}{{{f{Bh{l{c}}}}}bBn}{{{f{{l{c}}}}KhMl}{{Af{{An{Kh}}}}}Eh}{{{f{{l{c}}}}KhMl}{{Af{Kf}}}Eh}{{{f{Bf}}EnKh}{{Af{{l{Al}}}}}}{{{f{Bf}}EnKhKh}{{Af{{l{c}}}}}n}{{{f{Bf}}En}{{l{c}}}n}{{{f{Bf}}EnKhKh}{{l{c}}}n}{{{f{{l{c}}}}}{{l{c}}}Bn}{{{f{{l{c}}}}}{{f{Mf}}}Bn}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{l{c}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{Bh{l{c}}}}{f{Bf}}}bBn}{{{f{{l{c}}}}}{{l{c}}}n}{{{f{{l{c}}}}{f{Cb}}Mn}{{Af{Ad}}}n}{{{f{{l{c}}}}Ene}{{Af{{l{c}}}}}Jd{{Ch{{f{Bh{l{c}}}}}{{C`{An}}}}}}{{{f{{l{c}}}}Khdd{An{Id}}}{{Af{{l{c}}}}}Bn}{{{f{{l{c}}}}Endd{An{Id}}}{{Af{{l{c}}}}}Bn}{{{f{{l{c}}}}eAn}{{Af{{l{c}}}}}n{{Gh{}{{B`{Hh}}}}}}{{{f{{l{c}}}}eg}{{Af{{l{c}}}}}n{{Gh{}{{B`{Hh}}}}}{{Cb{An}{{C`{An}}}}}}{{{f{{l{c}}}}{f{Fj}}An}{{Af{{l{c}}}}}n}{{{f{Bh{l{j}}}}}b}{{{f{Bh{l{c}}}}d}bBn}{{{f{Bh{l{j}}}}Dj}b}{{{f{Bh{l{c}}}}Hh}bBn}{{{f{Bh{l{c}}}}Jf}bBn}{{{f{{l{c}}}}Jj}{{l{c}}}n}{{{f{{l{c}}}}JjAn}{{l{c}}}n}{{{f{Bh{l{c}}}}}bBn}{{{f{{l{c}}}}JjEn}{{l{c}}}Bn}0{{{f{{l{c}}}}d}{{l{c}}}n}{{{f{{l{c}}}}E`}{{l{c}}}n}{{{f{{l{c}}}}Jj}{{H`{{l{c}}{l{c}}}}}Bn}0{{{f{{l{c}}}}Df}{{An{Kh}}}n}{{{f{{l{c}}}}Df}KfEh}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{l{c}}e}gn{A`Ab}{}}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{{l{Al}}}}}{{An{Hh}}}}{{{f{{l{c}}}}}Ann}{{{f{{l{c}}}}}Kfn}{{{f{{l{c}}}}{An{En}}}{{l{c}}}Bn}{{{f{{l{c}}}}{f{Eb}}}{{Af{{l{c}}}}}Bn}{{{f{{l{c}}}}{f{e}}}{{Af{{l{c}}}}}Bn{{Lh{{Dh{Hh}}}}N`}}{{{f{{l{c}}}}{f{Eb}}}{{l{c}}}{{Bn{}{{Fl{Bl}}{Nb{Bl}}}}Bn}}{{{f{{l{c}}}}{f{e}}}{{l{c}}}{{Bn{}{{Fl{Bl}}{Nb{Bl}}}}Bn}{{Lh{{Dh{Hh}}}}N`}}`{{{f{{l{c}}}}dNd}{{Fd{{Fd{Nf}}}}}Bn}{{{f{{l{c}}}}}{{l{c}}}Jd}{{{f{{l{Db}}}}En}{{Af{Ad}}}}{{{f{Bh{l{j}}}}Dj}b}{{{f{{l{j}}}}}{{Af{Nh}}}}{{{f{{l{c}}}}}{{Af{Nj}}}n}{{{f{c}}}e{}{}}{{{f{{l{Dd}}}}}Cn}{{{f{{l{c}}}}}{{Fd{An}}}n}{{{f{{l{c}}}}}{{Nl{Fd{Fd{An}}}}}n}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}e}gn{}{}}{{{f{{l{c}}}}e}gn{}{}}{{c{l{e}}}g{}n{}}{{c{f{{l{e}}}}}g{}n{}}{{{f{{l{j}}}}c}{{Af{{l{j}}}}}{{Ch{Cf}{{C`{{Af{Ad}}}}}}}}{{{f{{l{j}}}}e}{{Af{{l{g}}}}}{}{{Ch{{An{Cf}}}{{C`{{Af{{An{c}}}}}}}}Cd}Bn}{{{f{{l{c}}}}g}{{Gj{Cne}}}Bn{}{{Ch{{f{BhD`}}}{{C`{{Gj{be}}}}}}}}{{{f{{l{c}}}}i}{{Gj{{l{k}}g}}}Bn{}{}{{Ch{}{{C`{{Gj{eg}}}}}}}Bn}{c{{Gj{e}}}{}{}}0{{{f{Bf}}g}{{Gj{{l{i}}e}}}Gd{}{{Gh{}{{B`{{Gj{ce}}}}}}}{{Bn{}{{Gf{c}}}}Bn}}11{{{f{{l{j}}}}{f{{l{c}}}}e}{{Af{{l{j}}}}}Bn{{Ch{{An{Cf}}An}{{C`{{Af{{An{Ad}}}}}}}}}}{{{f{c}}}Nn{}}0{{{f{{l{c}}}}}{{Af{{l{c}}}}}n}{{{f{{l{c}}}}{f{Ad}}}{{Af{{f{{l{c}}}}}}}Bn}{{{f{Bh{l{c}}}}}bBn}{{{f{{l{c}}}}En}{}Bn}{{{f{{l{c}}}}Df}{{An{Kh}}}n}{{{f{{l{c}}}}Df}KfEh}{ce{}{}}0{{{f{Bf}}c}{{l{e}}}Gd{{Bn{}{{Gf{c}}}}Bn}}{{{f{{l{e}}}}c}{{l{e}}}Gd{{Bn{}{{Gf{c}}}}Bn}}{{{f{{l{c}}}}{Fd{Fb}}}{{l{c}}}Bn}{{{l{c}}{f{Bf}}}{{l{c}}}Bn}{{{f{{Dh{O`}}}}e}c{}{{Ob{{f{Eb}}}{{C`{c}}}}}}{{{f{{l{c}}}}Jf}{{l{c}}}Bn}{{{l{c}}}en{}}{{{f{{l{c}}}}}en{}}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{f{{l{c}}}}e}gn{}{}}{{{l{c}}e}gn{}{}}2301{{c{l{e}}}g{}n{}}{{c{f{{l{e}}}}}g{}n{}}543201543267542310453201{{{f{{l{j}}}}{f{{l{c}}}}e}{{l{j}}}Bn{{Ch{{An{Cf}}An}{{C`{{An{Ad}}}}}}}}{{{f{{l{c}}}}{f{Fj}}{f{{l{c}}}}}{{Af{{l{c}}}}}Bn}````{{{Oj{}{{Od{c}}{Of{e}}{Oh{g}}}}{Oj{}{{Od{c}}{Of{e}}{Oh{g}}}}}e{}{}{}}{{{Oj{}{{Od{c}}{Of{e}}{Oh{g}}}}c}e{}{}{}}{{c{Oj{}{{Od{c}}{Of{e}}{Oh{g}}}}}e{}{}{}}{{{Oj{}{{Od{c}}{Of{e}}{Oh{g}}}}{Oj{}{{Od{c}}{Of{e}}{Oh{g}}}}}g{}{}{}}{{{Oj{}{{Od{c}}{Of{e}}{Oh{g}}}}c}g{}{}{}}{{c{Oj{}{{Od{c}}{Of{e}}{Oh{g}}}}}g{}{}{}}{{{Oj{}{{Od{c}}{Of{e}}{Oh{g}}}}}e{}{}{}}65654654650654654````````{{{f{c}}h}b{}}000{{{f{BhOl}}}b}{{{f{Bh{On{c}}}}}b{A@`N`}}{{{f{BhA@b}}}b}{{{f{BhA@d}}}b}{{{f{Bh{A@f{c}}}}}bn}{{{f{Bh{On{c}}}}{An{e}}}b{A@`N`}{{Lh{c}}}}{{{f{BhOl}}{An{c}}}b{}}{{{f{BhOl}}c}b{}}{{{f{Bh{On{c}}}}e}b{A@`N`}{{Lh{c}}}}{{{f{BhA@b}}d}b}5{{{f{c}}}{{f{e}}}{}{}}000{{{f{Bhc}}}{{f{Bhe}}}{}{}}000{{{f{{On{c}}}}}{{On{c}}}{A@`N`}}{{{f{A@b}}}A@b}{{{f{A@d}}}A@d}{{{f{{A@f{c}}}}}{{A@f{c}}}{nA@h}}{{{f{c}}{f{Bhe}}}b{}{}}000{{{f{c}}}b{}}000{En{{f{c}}}{}}000{En{{f{Bhc}}}{}}000{Enb}000{Ol{{l{c}}}Bn}{{{On{{Dh{Df}}}}}Ef}{{{On{Bf}}}Cn}{A@jCn}{A@lEf}{A@bFj}`{{{A@f{c}}}{{l{c}}}n}{cc{}}000{{{f{Bf}}e}A@n{}{{Bd{}{{B`{{An{c}}}}}}}}{{{f{Bf}}e}A@n{}{{Bd{}{{B`{c}}}}}}{{{f{Bf}}{f{{Dh{c}}}}}A@n{}}{{{f{Bf}}{f{{Dh{{An{c}}}}}}}A@n{}}{{}En}000{ce{}{}}000`{{{f{Bf}}En}{{On{c}}}{A@`N`}}{{{f{Bf}}En}A@b}{{{f{Bf}}En}A@d}{{{f{Bf}}En}{{A@f{c}}}n}{{{f{BhOl}}}b}{{{f{BhA@b}}}b}{{{f{BhA@d}}}b}{{{f{Bh{A@f{c}}}}}bn}{{{f{c}}}e{}{}}000{c{{Gj{e}}}{}{}}0000000{{{f{c}}}Nn{}}000;;;;````````{{{f{BhAA`}}{f{Gd}}}b}{{{f{BhAA`}}}b}{{{f{BhAAb}}}b}{{{f{BhAAd}}c}b{{Bd{}{{B`{{An{d}}}}}}Hd}}{{{f{Bh{AAf{c}}}}e}bn{{Bd{}{{B`{An}}}}Hd}}{{{f{Bh{AAf{c}}}}e}bn{{Bd{}{{B`{}}}}Hd}}{{{f{BhAAh}}}b}54{{{f{BhAAj}}}b}{{{f{BhAAl}}}b}{{{f{BhAAd}}}b}{{{f{BhAAn}}}b}{{{f{Bh{AAf{c}}}}}bn}{{{f{BhAA`}}{An{{f{Gd}}}}}b}{{{f{BhAA`}}{An{{f{Ad}}}}}{{Af{b}}}}{{{f{BhAAh}}{An{{f{Ad}}}}}{{Af{b}}}}{{{f{Bh{AAf{c}}}}{An{{f{Dh}}}}}bn}{{{f{BhAAh}}{f{Ad}}}{{Af{b}}}}{{{f{BhAA`}}{f{Ad}}}{{Af{b}}}}{{{f{BhAAb}}{f{Ad}}}{{Af{b}}}}{{{f{BhAAj}}{f{Ad}}}{{Af{b}}}}{{{f{BhAAl}}{f{Ad}}}{{Af{b}}}}{{{f{BhAAd}}{f{Ad}}}{{Af{b}}}}{{{f{BhAAn}}{f{Ad}}}{{Af{b}}}}{{{f{Bh{AAf{c}}}}{f{Ad}}}{{Af{b}}}n}{{{f{Bh{AAf{c}}}}{f{Dh}}}bn}{{{f{BhAAj}}c}b{{Bd{}{{B`{{An{{f{Bf}}}}}}}}Hd}}{{{f{BhAAl}}c}b{{Bd{}{{B`{{An{{f{{Dh{Df}}}}}}}}}}Hd}}{{{f{BhAAj}}c}b{{Bd{}{{B`{{f{Bf}}}}}}}}{{{f{BhAAl}}c}b{{Bd{}{{B`{{f{{Dh{Df}}}}}}}}}}{{{f{c}}}{{f{e}}}{}{}}000000{{{f{Bhc}}}{{f{Bhe}}}{}{}}000000`{{}AA`}{{}AAb}{En{{f{c}}}{}}000000{En{{f{Bhc}}}{}}000000{Enb}000000{{{f{AAj}}}d}{{{f{AAl}}}d}{{{f{AAd}}}d}{{{f{{AAf{c}}}}}dn}{{{f{AAh}}}d}{{{f{AAj}}}{{f{Mf}}}}{{{f{AAl}}}{{f{Mf}}}}{{{f{AAd}}}{{f{Mf}}}}{{{f{{AAf{c}}}}}{{f{Mf}}}n}{{{f{AAh}}}{{f{Mf}}}}{{{f{BhAA`}}}Dl}{{{f{BhAAb}}}Dl}{{{f{BhAAn}}}Dl}{{{f{BhAAh}}}Dl}{cc{}}000000{{{f{Dj}}EnEn{f{Bf}}}{{Af{{AB`{AAh}}}}}}{{}En}000000{{{f{BhAAj}}}Fb}{{{f{BhAAl}}}Fb}{{{f{BhAAd}}}Fb}{{{f{Bh{AAf{c}}}}}Fbn}{{{f{BhAAh}}}Fb}{ce{}{}}000000{{{f{Bf}}En{An{Dj}}}AA`}{{{f{Bf}}En{An{Dj}}}AAb}{{{f{Bf}}EnEn}AAj}{{{f{Bf}}EnEn}AAl}{{{f{Bf}}EnEn}AAd}{{{f{Bf}}En}AAn}{{{f{Bf}}EnEnDj}{{AAf{c}}}n}{{{f{Bf}}EnEnDjDj}{{AAf{c}}}n}{c{{Gj{e}}}{}{}}0000000000000{{{f{c}}}Nn{}}000000:::::::````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{Ej}}}Ej}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}0{{}Ej}{En{{f{c}}}{}}{En{{f{Bhc}}}{}}{Enb}{{{f{Ej}}{f{Ej}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{Ej}}{f{BhG`}}}Gb}{cc{}}{{{f{Ej}}{f{Bhc}}}bABb}{{}En}{ce{}{}}{{{f{Ej}}}d}{{{f{c}}}e{}{}}{c{{Gj{e}}}{}{}}0{{{f{c}}}Nn{}}4``{{ABd{f{Bf}}}{{l{c}}}Bn}{{ABf{f{{l{c}}}}}{{l{c}}}Bn}10{{ABf{f{Bf}}Dj}{{l{c}}}Bn}0{{ABd{f{Bf}}}{{Gj{{l{c}}e}}}Bn{}}{{ABf{f{{l{c}}}}}{{Gj{{l{c}}e}}}Bn{}}10{{ABf{f{Bf}}Dj}{{Gj{{l{c}}e}}}Bn{}}0`{ABhABh}``{{ABj{f{Bf}}Dj}e{}{{ABl{c}}}}{{e{f{Bf}}Dj}ABl{}{{Hb{}{{B`{c}}}}}}```{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bhc}}}{{f{Bhe}}}{}{}}0{En{{f{c}}}{}}0{En{{f{Bhc}}}{}}0{Enb}0{cc{}}0{{}En}0{ce{}{}}000{{{f{ABn}}}AC`}{{{f{BhAC`}}}{{An{c}}}{}}{{{f{Bh{ACb{c}}}}}{{An{e}}}Bd{}}1{{{f{Bh{ACb{c}}}}}{{An{e}}}Fh{}}`{{{f{AC`}}}{{H`{En{An{En}}}}}}{{{f{{ACb{c}}}}}{{H`{En{An{En}}}}}Bd}{c{{Gj{e}}}{}{}}000{{{f{c}}}Nn{}}088`````````````````````````{{{f{c}}h}b{}}0000{{}Ff}{{}Hj}{{FfFf}Ff}{{HjHj}Hj}{{{f{BhFf}}Ff}b}{{{f{BhHj}}Hj}b}3210{{{f{Ff}}}M`}0{{{f{Hj}}}Df}05432{{{f{c}}}{{f{e}}}{}{}}000000{{{f{Bhc}}}{{f{Bhe}}}{}{}}000000{{{f{{Kl{c}}}}}{{Kl{c}}}Bn}{{{f{{If{c}}}}}{{If{c}}}Bn}{{{f{ACd}}}ACd}{{{f{Ff}}}Ff}{{{f{Hj}}}Hj}{{{f{c}}{f{Bhe}}}b{}{}}0000{{{f{c}}}b{}}0000000{{{f{BhACf}}}b}0{FfFf}{HjHj}{{{f{Ff}}Ff}d}{{{f{Hj}}Hj}d}{{}{{Kl{c}}}Bn}{{}{{If{c}}}Bn}{{}Ff}{{}Hj}{En{{f{c}}}{}}{{{f{{Kj{c}}}}}{{f{e}}}Bn{}}111111{En{{f{Bhc}}}{}}000000{{FfFf}Ff}{{HjHj}Hj}{{}d}{{{f{L`}}}{{An{Hh}}}}{{{If{c}}Hh}{{If{c}}}Bn}{{{f{{If{c}}}}}{{An{Hh}}}Bn}{{{If{c}}{An{Hh}}}{{If{c}}}Bn}{Enb}000000<;5{{{f{Ff}}{f{Ff}}}d}{{{f{Hj}}{f{Hj}}}d}7{{{f{BhFf}}c}b{{Gh{}{{B`{Ff}}}}}}{{{f{BhHj}}c}b{{Gh{}{{B`{Hj}}}}}}{{{If{c}}d}{{If{c}}}Bn}{{{If{c}}{An{d}}}{{If{c}}}Bn}{{{f{{If{c}}}}Ff}{{If{c}}}Bn}{{{f{{If{c}}}}Ff}{{If{e}}}BnBn}{{{If{c}}Hj}{{If{c}}}Bn}{{{If{c}}{An{Hj}}}{{If{c}}}Bn}{{{f{{If{c}}}}{f{BhG`}}}GbBn}{{{f{ACd}}{f{BhG`}}}Gb}{{{f{Ff}}{f{BhG`}}}Gb}0000{{{f{Hj}}{f{BhG`}}}Gb}0000{cc{}}000000{M`{{An{Ff}}}}{Df{{An{Hj}}}}{M`Ff}0{DfHj}010{g{{Gj{ic}}}{}{}{{Gl{c}{{B`{e}}}}}{}}0{cFf{{Gh{}{{B`{Ff}}}}}}{cHj{{Gh{}{{B`{Hj}}}}}}{{{f{Bf}}}{{An{Ff}}}}{{{f{Bf}}}{{An{Hj}}}}{{{f{{If{c}}}}}{{An{Hh}}}Bn}{{{f{{If{c}}}}}dBn}{{{f{Hj}}}d}{{{f{L`}}}Hj}{{{f{{If{c}}}}}HjBn}0{{{f{{If{c}}}}}{{An{f}}}Bn}0{{{f{Bh{Kl{c}}}}}{{f{Bh{If{c}}}}}Bn}{{{f{Hj}}}Jf}{{}En}000000{{{f{BhFf}}Ff}b}{{{f{BhHj}}Hj}b}{{FfFf}Ff}{{HjHj}Hj}{{{f{Ff}}Ff}d}{{{f{Hj}}Hj}d}{ce{}{}}000000{Ffc{}}{Hjc{}}{{{f{Ff}}}d}{{{f{Hj}}}d}{{{f{{If{c}}}}}dBn}21{{{f{{If{c}}}}}JfBn}111{{{f{Ff}}}{{ACh{Ff}}}}{{{f{Hj}}}{{ACh{Hj}}}}{{{f{Ff}}}{{ACj{Ff}}}}{{{f{Hj}}}{{ACj{Hj}}}}{{}d}{{}{{f{{ACn{ACl}}}}}}{{{f{L`}}}{{An{Kf}}}}{{{f{{If{c}}}}}{{An{Kf}}}Bn}{{{If{c}}}{{If{c}}}Bn}{{{If{c}}An}{{If{c}}}Bn}{{{f{{If{c}}}}{If{c}}}{{AD`{c}}}Bn}4321{{{If{c}}}{{Kl{c}}}Bn}{FfFf}{HjHj}{{{f{{Kl{c}}}}}{{Lb{{If{c}}}}}Bn}{{{f{BhFf}}Ff}b}{{{f{BhHj}}Hj}b}{{{f{BhFf}}Ffd}b}{{{f{BhHj}}Hjd}b}{{{f{Bh{If{c}}}}{An{Hh}}}bBn}{{{f{Bh{If{c}}}}d}bBn}{{{f{BhHj}}d}b}{{{f{Bh{If{c}}}}Hj}bBn}{{{f{Bh{If{c}}}}An}bBn}033{{{f{Bh{If{c}}}}Jf}bBn}{{{f{BhHj}}Jf}b}{{{If{c}}Jf}{{If{c}}}Bn}{{{If{c}}{An{Jf}}}{{If{c}}}Bn}{{FfFf}Ff}{{HjHj}Hj}>=10{{{Kl{c}}}{{If{c}}}Bn}{{{f{c}}}e{}{}}0000{{{f{BhFf}}Ff}b}{{{f{BhHj}}Hj}b}{c{{Gj{e}}}{}{}}0000000000000{{{f{{Kl{c}}}}}{{An{{Lb{{If{c}}}}}}}Bn}{{{f{{Kl{c}}}}}{{An{{Ih{{If{c}}}}}}}Bn}{{{f{c}}}Nn{}}00000098{{{f{{Kl{c}}}}}{{f{{ADb{L`}}}}}Bn}{ce{}{}}000000{ACfACf}0{{{f{{Kl{c}}}}}{{Ih{{If{c}}}}}Bn}````{{{f{c}}h}b{}}{{{f{{ADd{c}}}}En}{{H`{{ADd{c}}{ADd{c}}}}}I`}{e{{ADd{c}}}I`{{Gh{}{{B`{{An{{f{c}}}}}}}}}}{e{{ADd{c}}}I`{{Gh{}{{B`{{f{c}}}}}}}}{{ADfe}g{}{{Gh{}{{B`{c}}}}}{}}0{{{f{Hn}}}{{f{ADh}}}}{{{f{{ADd{c}}}}}{{f{ADh}}}I`}{{{f{Bh{ADd{c}}}}}{{f{BhADh}}}I`}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}`{{{f{{ADd{c}}}}En}dI`}{{{f{{ADd{c}}}}}{{ADd{c}}}{I`A@h}}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}{{{f{{ADd{c}}}}}{{f{ADf}}}I`}{En{{f{c}}}{}}{En{{f{Bhc}}}{}}{Enb}{{{f{{f{Hn}}}}{f{{f{Hn}}}}}d}{{{f{Hn}}{f{Hn}}}d}{{{f{{ADd{c}}}}{f{BhG`}}}Gb{I`ADj}}{cc{}}{{EnADf}{{ADd{c}}}I`}{{{f{{ADd{c}}}}En}{{An{{f{c}}}}}I`}{{}ADf}{{{f{Gn}}{f{{ADd{c}}}}{f{{ADd{c}}}}}{{ADd{c}}}I`}{{ADf{f{Gn}}cc}{{ADd{e}}}{}I`}{{{f{Gn}}{f{{ADd{c}}}}e}{{ADd{c}}}I`{}}{{{f{Gn}}c{f{{ADd{e}}}}}{{ADd{e}}}{}I`}{{}En}{ce{}{}}{{{f{{ADd{c}}}}}eI`{}}{{{f{{ADd{c}}}}En}dI`}{{{f{c}}En}d{}}1{{{f{{ADd{c}}}}}{{ADn{egADl}}}I`{}{}}{{{f{{ADd{c}}}}}{{ADn{{f{c}}{AE`{c}}ADl}}}I`}{{{f{{ADd{c}}}}}EnI`}0`{db}{{{f{Bh{ADd{c}}}}{An{Gn}}}bI`}{{{f{Bh{ADd{c}}}}EnEn}bI`}{{{f{c}}EnEn}e{}{}}01{{{f{{ADd{c}}}}En}{{H`{{AB`{Gd}}{AB`{Gd}}}}}I`}0{{{f{Hn}}}{{AB`{Hn}}}}{{{f{{ADd{c}}}}}{{AB`{Gd}}}I`}{{{f{c}}}e{}{}}{g{{Gj{{ADd{c}}e}}}I`{}{{Gh{}{{B`{{Gj{{An{{f{c}}}}e}}}}}}}}{g{{Gj{{ADd{c}}e}}}I`{}{{Gh{}{{B`{{Gj{{f{c}}e}}}}}}}}{{ADfg}{{Gj{ie}}}{}{}{{Gh{}{{B`{{Gj{ce}}}}}}}{}}0{c{{Gj{e}}}{}{}}0{{{f{c}}}Nn{}}{{{f{Hn}}}{{f{Bf}}}}{{}{{f{Bf}}}}{{{f{{ADd{c}}}}}{{An{{f{Gn}}}}}I`}{{{f{{ADd{c}}}}En}{{f{c}}}I`}{{{f{{ADd{c}}}}En}eI`{}}1{{{f{{ADd{c}}}}}{{f{{Kn{{Fd{c}}}}}}}I`}{{{f{{ADd{c}}}}}{{AE`{c}}}I`}{{{f{{ADd{c}}}}}eI`{}}{ce{}{}}{{{ADd{c}}{An{Gn}}}{{ADd{c}}}I`}{{{f{{ADd{c}}}}{An{Gn}}}{{AB`{Gd}}}I`}1`{{{f{Bh{AEb{c}}}}}bI`}0{{{f{Bh{AEb{c}}}}{An{c}}}bI`}{{{f{Bh{AEb{c}}}}{f{ADh}}}bI`}{{{f{Bh{AEb{c}}}}c}bI`}{{{f{Bh{AEb{c}}}}{f{ADh}}}{{Af{b}}}I`}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{}{{AEb{c}}}I`}{En{{f{c}}}{}}{En{{f{Bhc}}}{}}{Enb}{{{AEb{c}}}{{AEd{c}}}I`}{cc{}}{{}En}{ce{}{}}{{{f{Bf}}En}{{AEb{c}}}I`}{{{f{Bh{AEb{c}}}}}AdI`}{c{{Gj{e}}}{}{}}0{{{f{c}}}Nn{}}4````{{{f{BhAEf}}}b}{{{f{BhAEf}}{An{{f{ADh}}}}}b}{{{f{BhAEf}}{f{ADh}}}b}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}`?>={{{f{AEh}}{f{BhG`}}}Gb}<{{{f{Bf}}En}{{AB`{AEf}}}}{{}AEj}{{}ADf}>={{}d}`{{AElAEjADf}b}{{{f{BhAEf}}}Ad}==<{ce{}{}}``````````````````````````````````````````{{{f{c}}h}b{}}{{{f{{AF`{}{{AEn{c}}}}}}g}{{AF`{}{{AEn{c}}}}}{}{}{{Cb{{An{e}}}{{C`{{An{c}}}}}}Cd}}{{{f{AFb}}{f{Cb}}}AFb}{{{f{AFb}}{f{Cb}}}{{l{c}}}Bn}{{{f{{AF`{}{{AEn{c}}}}}}i{f{Bh{Dh{g}}}}}b{}{}{}{{Cb{{An{e}}{f{g}}}{{C`{g}}}}}}{{{f{{AF`{}{{AEn{c}}}}}}g}{{AF`{}{{AEn{c}}}}}{}{}{{Cb{e}{{C`{c}}}}Cd}}{{{f{AFd}}E`}Eb}{{{f{AFd}}{f{{Dh{Ad}}}}{f{Ed}}}{{Af{Eb}}}}{{{f{AFf}}}{{Af{Eb}}}}`{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{AFh}}{f{Dj}}}{{Af{Ad}}}}0{{{f{AFh}}{f{Dj}}Ej}{{Af{Ad}}}}{{{f{AFj}}}AFj}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}0{En{{f{c}}}{}}{En{{f{Bhc}}}{}}{Enb}{{{f{AFj}}{f{AFj}}}d}{{{f{{AFl{}{{B`{c}}}}}}e}c{}{}}0{{{f{AFn}}}{{Af{Ad}}}}{{{f{AFn}}}{{Af{{H`{Ad{AG`{Jj}}}}}}}}`{{{f{AGb}}c}{{Af{AGb}}}{}}{{{f{AGd}}{f{Fj}}}{{Af{{l{c}}}}}Bn}`{{{f{AFj}}{f{BhG`}}}Gb}{cc{}}`{{{f{Bf}}cEn}AGf{}}{{{f{Bf}}En}AGh}`{{{f{AGj}}En}{{Af{Hf}}}}{{{f{AGj}}En}Hf}::{{{f{AFj}}{f{Bhc}}}bABb}{{}En}{ce{}{}}{{{f{AGl}}}{{Af{Fj}}}}{{{f{AGn}}}{{Af{Fj}}}}??{{{f{AH`}}}{{An{c}}}{}}{{{f{AH`}}}{{An{Kh}}}}{{{f{AHb}}}{{An{c}}}{}}2{{{f{AH`}}}{{An{{H`{cc}}}}}{}}{{{f{AFf}}}{{Af{En}}}}{{{f{AHd}}EnEn}{{l{c}}}Bn}{{{f{{AFl{}{{B`{c}}}}}}e}c{}{}}0{{{f{AFn}}}{{Af{{AG`{Jj}}}}}}{{{f{AHb}}KhMl}{{Af{{An{c}}}}}{}}{{{f{AHf}}}AHf}{{{f{AHh}}{f{Cb}}Mn}{{Af{Ad}}}}{{{f{AHj}}c{An{e}}}{{Af{AHj}}}{{Gh{}{{B`{Hh}}}}}{}}{{{f{AHj}}ci}{{Af{AHj}}}{{Gh{}{{B`{Hh}}}}}{}{}{{Cb{{An{e}}}{{C`{{An{g}}}}}}}}`{{{f{AHj}}{f{Fj}}{An{c}}}{{Af{AHj}}}{}}{{{f{AHl}}Jj}{{l{c}}}Bn}{{{f{AHn}}Jjc}{{l{e}}}{}Bn}`{{{f{AFd}}d}{{l{c}}}Bn}{{{f{AFd}}E`}{{l{c}}}Bn}{{{f{AI`}}Df}{{An{Kh}}}}{{{f{AH`}}}{{An{c}}}{}}{{{f{AIb}}{f{c}}}{{Af{AIb}}}N`}{{{f{AId}}{f{c}}}AIdN`}{{{f{AIf}}}{{Fd{{f{{Dh{Df}}}}}}}}{{{f{c}}}e{}{}}{c{{Gj{e}}}{}{}}0{{{f{c}}}Nn{}}{{{f{AFf}}}{{Af{AFf}}}}8{ce{}{}}`{{{f{AIh}}{f{Fj}}{f{{l{c}}}}}{{Af{{l{c}}}}}Bn}``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}BnBn{{Cb{ff}{{C`{}}}}}{{Cb{f}{{C`{}}}}}{{Cb{f}{{C`{}}}}}Bn}{{{l{c}}{l{e}}gik}{{l{m}}}BnBn{{Cb{}{{C`{}}}}}{{Cb{}{{C`{}}}}}{{Cb{}{{C`{}}}}}Bn}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}BnBnGd{{Ch{ff}{{C`{g}}}}}{{Bn{}{{Gf{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}BnBn{{AIj{AnAn}}}Bn}{{{f{{l{c}}}}{f{{l{e}}}}g}bBnBn{{Ch{AnAn}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}CnBnBn{{Ch{{f{BhD`}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}BnBn{}{{Ch{}{{C`{g}}}}}Bn}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Bf}}}{{l{k}}}BnBn{GdAIl}{{Ch{ff}{{C`{g}}}}}{{Bn{}{{Gf{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Bf}}}{{l{k}}}BnBnGd{{Ch{ff}{{C`{g}}}}}{{Bn{}{{Gf{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}BnBnGd{{Ch{}{{C`{g}}}}}{{Bn{}{{Gf{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{Af{Ad}}}BnBn{{Ch{ff}{{C`{{AB`{Gd}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}BnBn{{Ch{ff}{{C`{{AB`{Gd}}}}}}}}85{{{f{{l{c}}}}{f{{l{e}}}}k}{{Gj{{l{m}}i}}}BnBn{}{}{{Ch{AnAn}{{C`{{Gj{{An{g}}i}}}}}}}Bn}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}BnBnBn{{AIn{AnAnAn}}}Bn}{{{f{{l{c}}}}{f{{l{e}}}}k}{{Gj{{l{m}}i}}}BnBnGdAJ`{{Ch{ff}{{C`{{Gj{gi}}}}}}}{{Bn{}{{Gf{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}k{f{Bf}}}{{Gj{{l{m}}i}}}BnBnGdAJ`{{Ch{ff}{{C`{{Gj{gi}}}}}}}{{Bn{}{{Gf{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{Gj{{l{c}}g}}}BnBnAJ`{{Ch{ff}{{C`{{Gj{{AB`{Gd}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{Gj{{l{o}}k}}}BnBnBn{}{}{{Ch{AnAnAn}{{C`{{Gj{{An{i}}k}}}}}}}Bn}{{{f{{l{c}}}}i}{{Gj{{l{k}}g}}}Bn{}{}{{Ch{An}{{C`{{Gj{{An{e}}g}}}}}}}Bn}{{{f{{l{c}}}}i}{{Gj{{l{k}}g}}}Bn{}{}{{Ch{}{{C`{{Gj{eg}}}}}}}Bn}{{{f{{l{c}}}}i}{{Gj{{l{k}}g}}}Bn{GdAIl}AJ`{{Ch{f}{{C`{{Gj{eg}}}}}}}{{Bn{}{{Gf{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Bn{{AJb{An}}}Bn}{{{f{{l{c}}}}e}{{l{g}}}BnAJbBn}{{{f{{l{c}}}}g}{{l{i}}}BnGd{{Ch{f}{{C`{e}}}}}{{Bn{}{{Gf{e}}}}}}{{{l{c}}g}{{l{i}}}BnGd{{Ch{}{{C`{e}}}}}{{Bn{}{{Gf{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Bn{GdAIl}{{Ch{f}{{C`{e}}}}}{{Bn{}{{Gf{e}}}}}}0{{{f{{l{c}}}}}Enn}0{{JfJf}Jf}{{{f{Eb}}Hh}{{Af{b}}}}{{{f{{AJd{Hh}}}}Hh}{{Af{b}}}}````{{{f{c}}h}b{}}{{{f{{l{c}}}}eAJfd}{{Fd{Hh}}}Bn{{Bd{}{{B`{An}}}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{AJf}}}AJf}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}0{{}AJf}{En{{f{c}}}{}}{En{{f{Bhc}}}{}}{Enb}{{{f{AJf}}{f{AJf}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{AJf}}{f{BhG`}}}Gb}{cc{}}{{{f{AJf}}{f{Bhc}}}bABb}{{}En}{ce{}{}}{{{f{{Dh{f}}}}cHhe}{{Fd{Hh}}}{{Bd{}{{B`{An}}}}}{{Cb{fEnf}{{C`{d}}}}}}{{{f{c}}}e{}{}}{c{{Gj{e}}}{}{}}0{{{f{c}}}Nn{}}4`{{En{f{Bh{Fd{d}}}}}b}```{{{f{AJh}}EnEn}AJh}0{{En{f{{Dh{Ad}}}}{f{BhEd}}}{{Af{{AJj{Eb}}}}}}{{{f{{Dh{Ad}}}}{f{{Dh{d}}}}{f{{Dh{d}}}}}{{Af{AJl}}}}{{{f{{Dh{Ad}}}}{f{{Dh{d}}}}{f{{Dh{d}}}}}{{Af{{AJn{Jj}}}}}}{{{f{Bf}}{f{{Dh{Ad}}}}{f{{Dh{d}}}}{f{{Dh{d}}}}}{{Af{AK`}}}}{{{f{Bf}}{f{{Dh{Ad}}}}}{{Af{AK`}}}}{{{f{Ad}}}{{Af{Fb}}}}{{{f{{Dh{Ad}}}}}{{Af{AJl}}}}{{{f{{Dh{Ad}}}}}{{Af{AK`}}}}0```{{{f{c}}h}b{}}0{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bhc}}}{{f{Bhe}}}{}{}}0{{{f{E`}}}E`}{{{f{Ed}}}Ed}{{{f{c}}{f{Bhe}}}b{}{}}0{{{f{c}}}b{}}00{{}E`}{{}Ed}{En{{f{c}}}{}}0{En{{f{Bhc}}}{}}0``{Enb}0{{{f{E`}}{f{E`}}}d}{{{f{Ed}}{f{Ed}}}d}{{{f{c}}{f{e}}}d{}{}}00000{{{f{E`}}{f{BhG`}}}Gb}{{{f{Ed}}{f{BhG`}}}Gb}{cc{}}{{{f{Ed}}}E`}1{{{f{E`}}}Ed}{{{f{E`}}{f{Bhc}}}bABb}{{{f{Ed}}{f{Bhc}}}bABb}{{}En}0{ce{}{}}0````{{}E`}{{}Ed}``{{{f{AJh}}EnEn}AJh}0{{{f{c}}}e{}{}}0{c{{Gj{e}}}{}{}}000{{{f{c}}}Nn{}}066{{E`d}E`}{{Edd}Ed}1010{{Edc}Ed{{Gh{}{{B`{d}}}}}}210{E`E`}{EdEd}`{AKbJj}00{{}d}>>0`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}00000000000000000000000000000{{{f{Dl}}}d}{{{f{Il}}{f{Il}}}c{}}{{FjFj}c{}}{{{f{Fj}}{f{Fj}}}c{}}{{{f{Cn}}{f{Cn}}}c{}}{{CnCn}c{}}{{{f{Cn}}{f{Bf}}}c{}}{{EfEf}c{}}{{{f{Ef}}{f{Ef}}}c{}}{{{f{Ef}}{f{{Dh{Df}}}}}c{}}{{{f{Hf}}{f{Hf}}}Hf}{{{f{{l{c}}}}{f{Ad}}}{{Gj{AdAKd}}}{}}000000{{{f{Cn}}{f{Ad}}}{{Af{Ad}}}}{{{f{Ef}}{f{Ad}}}{{Af{Ad}}}}{{{f{Fj}}{f{Ad}}}{{Af{Ad}}}}{{{f{Dl}}{f{Aj}}}Ad}{{{f{Fj}}{f{Aj}}}Ad}{{{f{Cn}}{f{Aj}}}Ad}{{{f{Ef}}{f{Aj}}}Ad}{{{f{{AEd{c}}}}{f{Aj}}}AdI`}{{{f{Fj}}}d}{{{f{Fj}}}{{An{d}}}}{{{f{Dl}}}{{`{{`{{Bd{}{{B`{{An{Bb}}}}}}}}}}}}{{{f{Dl}}{f{Bf}}}{{`{{`{{Bd{}{{B`{{An{Bb}}}}}}}}}}}}32{{{f{Dl}}c}Dl{{Cb{{An{Ad}}}{{C`{{An{Ad}}}}}}Cd}}{{{f{Fj}}c}Fj{{Cb{{An{d}}}{{C`{{An{d}}}}}}Cd}}{{{f{Cn}}c}Cn{{Cb{{An{{f{Bf}}}}}{{C`{{An{{AKf{Bf}}}}}}}}Cd}}{{{f{Ef}}c}Ef{{Cb{{An{{f{{Dh{Df}}}}}}}{{C`{{An{{AKf{{Dh{Df}}}}}}}}}}Cd}}{{{f{{AEd{c}}}}e}{{AEd{c}}}I`{{Cb{{An{{f{c}}}}}{{C`{{An{c}}}}}}Cd}}{{{f{Dl}}c}Dl{{Ch{Cf}{{C`{Ad}}}}}}{{{f{Dl}}e}{{l{g}}}{}{{Ch{{An{Cf}}}{{C`{{An{c}}}}}}Cd}Bn}{{{f{AKh}}c}Ad{{Cb{{f{Ad}}}{{C`{Ad}}}}}}{{{f{AKj}}c}Ad{{Cb{{f{Ad}}}{{C`{Ad}}}}}}{{{f{Fj}}{f{Cb}}}Fj}{{{f{Cn}}{f{Cb}}}Cn}{{{f{Ef}}{f{Cb}}}Ef}{{{f{Fj}}{f{Cb}}}{{l{c}}}Bn}{{{f{Cn}}{f{Cb}}}{{l{c}}}Bn}{{{f{Ef}}{f{Cb}}}{{l{c}}}Bn}{{{f{Cn}}c}Cn{{Ch{{f{Bf}}}{{C`{{f{Bf}}}}}}}}{{{f{Ef}}c}Ef{{Ch{{f{{Dh{Df}}}}}{{C`{{f{{Dh{Df}}}}}}}}}}{{{f{Dl}}{f{Cb}}}{{Af{Dl}}}}{{{f{Dl}}e{f{Bh{Dh{c}}}}}b{}{{Cb{{An{Ad}}{f{c}}}{{C`{c}}}}}}{{{f{Fj}}e{f{Bh{Dh{c}}}}}b{}{{Cb{{An{d}}{f{c}}}{{C`{c}}}}}}{{{f{Cn}}e{f{Bh{Dh{c}}}}}b{}{{Cb{{An{{f{Bf}}}}{f{c}}}{{C`{c}}}}}}{{{f{Ef}}e{f{Bh{Dh{c}}}}}b{}{{Cb{{An{{f{{Dh{Df}}}}}}{f{c}}}{{C`{c}}}}}}{{{f{{AEd{c}}}}g{f{Bh{Dh{e}}}}}bI`{}{{Cb{{An{{f{c}}}}{f{e}}}{{C`{e}}}}}}{{{f{Dl}}c}Dl{{Cb{Ad}{{C`{Ad}}}}Cd}}{{{f{Fj}}c}Fj{{Cb{d}{{C`{d}}}}Cd}}{{{f{Cn}}c}Cn{{Cb{{f{Bf}}}{{C`{{AKf{Bf}}}}}}Cd}}{{{f{Ef}}c}Ef{{Cb{{f{{Dh{Df}}}}}{{C`{{AKf{{Dh{Df}}}}}}}}Cd}}{{{f{{AEd{c}}}}e}{{AEd{c}}}I`{{Cb{{f{c}}}{{C`{c}}}}Cd}}{{{f{Cn}}c}Cn{{Ch{Dn{f{Bf}}}{{C`{Dn}}}}Cd}}{{{f{Fj}}E`}Eb}{{{f{Cn}}E`}Eb}{{{f{Ef}}E`}Eb}{{{f{AK`}}E`}Eb}{{{f{Fj}}{f{{Dh{Ad}}}}{f{Ed}}}{{Af{Eb}}}}{{{f{Cn}}{f{{Dh{Ad}}}}{f{Ed}}}{{Af{Eb}}}}{{{f{Ef}}{f{{Dh{Ad}}}}{f{Ed}}}{{Af{Eb}}}}{{{f{AK`}}{f{{Dh{Ad}}}}{f{Ed}}}{{Af{Eb}}}}{{{f{Fj}}}{{Af{Eb}}}}{{{f{Cn}}}{{Af{Eb}}}}{{{f{Ef}}}{{Af{Eb}}}}{{{f{{AEd{c}}}}}{{Af{Eb}}}I`}{eAKl{}{{Gh{}{{B`{c}}}}}}0{{ADfe}AKn{}{{Gh{}{{B`{c}}}}}}0{{{f{Cn}}}Ef}{{{f{Hf}}}Hf}{{{f{Dj}}}{{f{Dj}}}}{{{f{Mf}}}{{f{Dj}}}}{{{f{AL`}}}{{f{Dj}}}}{{{f{{AIl{}{{ALb{c}}{ALd{e}}{ALf{g}}}}}}}{{An{{f{{Dh{c}}}}}}}A@h{ALh{ALj{c}}}{{Fh{}{{B`{c}}}}HdInJ`}}{{{f{Dl}}{f{{l{c}}}}{f{{l{e}}}}g}DlBnBn{{Ch{{An{Cf}}AnAn}{{C`{{An{Ad}}}}}}}}{{FjFj}c{}}{{{f{Fj}}{f{Fj}}}c{}}1010{{{f{c}}}{{f{e}}}{}{}}0000000000000000000000000000000000{{{f{Bhc}}}{{f{Bhe}}}{}{}}0000000000000000000000000000000000{Dj{{AB`{Dj}}}}{{{f{ALl}}{f{ALl}}c}{{Af{ALl}}}ALn}{{{f{AM`}}{f{Dj}}}{{Af{Ad}}}}0{{{f{Hf}}{f{Dj}}}Hf}{{{f{Dj}}Dj}Dj}{{{f{Dl}}{f{Dj}}}{{Af{Ad}}}}{{{f{Fj}}{f{Dj}}}{{Af{Ad}}}}{{{f{Cn}}{f{Dj}}}{{Af{Ad}}}}{{{f{Ef}}{f{Dj}}}{{Af{Ad}}}}{{{f{AK`}}{f{Dj}}}{{Af{Ad}}}}{{{f{AM`}}{f{Dj}}Ej}{{Af{Ad}}}}{{{f{Il}}{f{Dj}}Ej}{{Af{Ad}}}}{{{f{Dl}}{f{Dj}}Ej}{{Af{Ad}}}}{{{f{Fj}}{f{Dj}}Ej}{{Af{Ad}}}}{{{f{Cn}}{f{Dj}}Ej}{{Af{Ad}}}}{{{f{Ef}}{f{Dj}}Ej}{{Af{Ad}}}}{{{f{AK`}}{f{Dj}}Ej}{{Af{Ad}}}}`{{{f{{l{c}}}}{f{Ad}}}{{Gj{AdAKd}}}{}}0000{{{f{AKh}}{f{Ad}}}{{Af{Ad}}}}{{{f{AKj}}{f{Ad}}}{{Af{Ad}}}}{{{f{{AMb{ce}}}}}{{AMb{ce}}}BnBn}{{{f{AMd}}}AMd}{{{f{Hf}}}Hf}{{{f{AMf}}}AMf}{{{f{Dj}}}Dj}{{{f{AMh}}}AMh}{{{f{Mf}}}Mf}{{{f{AMj}}}AMj}{{{f{AMl}}}AMl}{{{f{AMn}}}AMn}{{{f{Ln}}}Ln}{{{f{Ll}}}Ll}{{{f{AN`}}}AN`}{{{f{ANb}}}ANb}{{{f{Ld}}}Ld}{{{f{Mb}}}Mb}{{{f{Cj}}}Cj}{{{f{Cl}}}Cl}{{{f{ANd}}}ANd}{{{f{ANf}}}ANf}{{{f{Db}}}Db}{{{f{Dd}}}Dd}{{{f{ANh}}}ANh}{{{f{Al}}}Al}{{{f{ANj}}}ANj}{{{f{ANl}}}ANl}{{{f{ANn}}}ANn}{{{f{AO`}}}AO`}{{{f{ADf}}}ADf}{{{f{AOb}}}AOb}{{{f{c}}{f{Bhe}}}b{}{}}00000000000000000000000000000{{{f{c}}}b{}}00000000000000000000000000000000000000000000000000000{{{f{BhMf}}Dj}b}{AOde{}{{AKl{c}}AIl}}0{{AOdADf}e{}{{AKn{c}}AIl}}0{{{f{Dj}}}d}00{AOfDj}{{{f{Mf}}}{{f{Dj}}}}{{}Hf}{{}AMf}{{}Dj}{{}ADf}{{{f{{AMb{ce}}}}}{{f{g}}}BnBn{}}{En{{f{c}}}{}}0000000000000000000000000000000000{En{{f{Bhc}}}{}}{{{f{Bh{AMb{ce}}}}}{{f{Bhg}}}BnBn{}}1111111111111111111111111111111111{{{f{Il}}{f{Il}}}c{}}{{{f{{l{c}}}}{f{Ad}}}{{Gj{AdAKd}}}{}}000000{Enb}0000000000000000000000000000000000{{{f{AM`}}}{{f{Dj}}}}{{{f{Il}}}{{f{Dj}}}}{{{f{Hf}}}Dj}`{{{f{Hf}}{f{Hf}}}d}{{{f{AMf}}{f{AMf}}}d}{{{f{Dj}}{f{Dj}}}d}{{{f{Dj}}{f{ADf}}}d}{{{f{AMh}}{f{AMh}}}d}{{{f{Mf}}{f{Mf}}}d}{{{f{AMj}}{f{AMj}}}d}{{{f{ADf}}{f{ADf}}}d}{{{f{AOb}}{f{AOb}}}d}{{{f{Hf}}{f{Hf}}d}d}{{{f{Dl}}{f{Dl}}}Fj}{{{f{Fj}}{f{Fj}}}Fj}{{{f{Cn}}{f{Bf}}}Fj}{{{f{Cn}}{f{Cn}}}Fj}{{{f{Ef}}{f{{Dh{Df}}}}}Fj}{{{f{Ef}}{f{Ef}}}Fj}543210{{{f{c}}{f{e}}}d{}{}}00000000000000000000000{{{f{Dl}}}{{Af{{H`{Ad{AG`{Jj}}}}}}}}{{{f{{AMb{ce}}}}}MfBnBn}{{{f{Fj}}d}{{Af{Fj}}}}{{{f{Ef}}{f{{Dh{Df}}}}}{{Af{Ef}}}}{{{f{Cn}}{f{Fj}}}{{Af{{l{Db}}}}}}{{{f{Ef}}{f{Fj}}}{{Af{{l{Dd}}}}}}{{{f{{AEd{c}}}}{f{Fj}}}{{Af{{l{{Hl{c}}}}}}}I`}{{ALn{f{AOh}}{f{AOh}}}{{Af{AOh}}}}{{{f{Dl}}{f{BhG`}}}Gb}{{{f{Cn}}{f{BhG`}}}Gb}{{{f{Ef}}{f{BhG`}}}Gb}{{{f{{AEd{c}}}}{f{BhG`}}}GbI`}{{{f{AMd}}{f{BhG`}}}Gb}{{{f{Hf}}{f{BhG`}}}Gb}0{{{f{AMf}}{f{BhG`}}}Gb}{{{f{Dj}}{f{BhG`}}}Gb}0{{{f{AMh}}{f{BhG`}}}Gb}{{{f{Mf}}{f{BhG`}}}Gb}{{{f{AMj}}{f{BhG`}}}Gb}0{{{f{ADf}}{f{BhG`}}}{{Gj{bAOj}}}}{{{f{AOb}}{f{BhG`}}}{{Gj{bAOj}}}}{{{f{Dl}}c}b{{Ch{{An{Cf}}}}}}{cc{}}0000000{{{f{Bf}}}Hf}{{{f{{Dh{Df}}}}}Hf}{dHf}{cHfAOl}{{{An{c}}}Hf{{AOn{Hf}}}}55{HfDj}{{{f{Hf}}}Dj}{{{f{ADf}}}Dj}88{{{f{B@`}}}Mf}{{{f{Hf}}}Mf}{{{f{AOb}}}AMj};;;;;;;;;;;;;;;;;;;;;;{B@bADf}{B@dADf}={{{f{ADf}}d}Dj}{eDl{{B@f{Ad}}}{{Gh{}{{B`{c}}}}}}{cDl{{Gh{}{{B`{{An{Ad}}}}}}}}{cDl{{Gh{}{{B`{{An{{AB`{Gd}}}}}}}}}}{cFj{{Gh{}{{B`{d}}}}}}{eCn{{`{Bf}}}{{Gh{}{{B`{c}}}}}}{eCn{{Lh{Bf}}}{{Gh{}{{B`{{An{c}}}}}}}}{eEf{{Lh{{Dh{Df}}}}}{{Gh{}{{B`{{An{c}}}}}}}}{eEf{{`{{Dh{Df}}}}}{{Gh{}{{B`{c}}}}}}{e{{AEd{c}}}I`{{Gh{}{{B`{{An{c}}}}}}}}{{{f{Bf}}c}{{l{Al}}}{{Bd{}{{B`{{An{d}}}}}}}}{{{f{Bf}}e}Cn{{Lh{Bf}}}{{Bd{}{{B`{{An{c}}}}}}}}{{{f{Bf}}e}Ef{{Lh{{Dh{Df}}}}}{{Bd{}{{B`{{An{c}}}}}}}}{{{f{Bf}}e}{{AEd{c}}}I`{{Bd{}{{B`{{An{c}}}}}}}}<;97865{eAK`{{`{{Dh{Df}}}}}{{Gh{}{{B`{c}}}}}}{eAK`{{Lh{{Dh{Df}}}}}{{Gh{}{{B`{{An{c}}}}}}}}6{{{f{Bf}}c}{{l{Al}}}{{Bd{}{{B`{d}}}}}}{{{f{Bf}}e}Cn{{Lh{Bf}}}{{Bd{}{{B`{c}}}}}}{{{f{Bf}}e}Ef{{Lh{{Dh{Df}}}}}{{Bd{}{{B`{c}}}}}}{{{f{Bf}}e}{{AEd{c}}}I`{{Bd{}{{B`{c}}}}}}{{B@hDj}Mf}{cDl{{Hb{}{{B`{{An{Ad}}}}}}}}{cFj{{Hb{}{{B`{d}}}}}}{cFj{{Hb{}{{B`{{An{d}}}}}}}}{eCn{{`{Bf}}InJ`B@j}{{Hb{}{{B`{c}}}}}}{eCn{{Lh{Bf}}InJ`}{{Hb{}{{B`{{An{c}}}}}}}}{eEf{{`{{Dh{Df}}}}InJ`B@j}{{Hb{}{{B`{c}}}}}}{eEf{{Lh{{Dh{Df}}}}InJ`}{{Hb{}{{B`{{An{c}}}}}}}}{{c{f{Bf}}Dj}Dl{{Hb{}{{B`{{An{Ad}}}}}}}}{{{f{Bf}}{f{{Dh{d}}}}}Fj}{{{f{Bf}}{f{{Dh{c}}}}}Cn{{Lh{Bf}}}}{{{f{Bf}}{f{{Dh{c}}}}}Ef{{Lh{{Dh{Df}}}}}}{{{f{Bf}}{f{{Dh{c}}}}}{{AEd{c}}}I`}{{{f{Bf}}{f{{Dh{{An{d}}}}}}}Fj}{{{f{Bf}}{f{{Dh{{An{c}}}}}}}Cn{{Lh{Bf}}}}{{{f{Bf}}{f{{Dh{{An{c}}}}}}}Ef{{Lh{{Dh{Df}}}}}}{{{f{Bf}}{f{{Dh{{An{c}}}}}}}{{AEd{c}}}I`}{cFj{{Hd{}{{B`{{An{d}}}}}}}}{{{Fd{c}}ADf}{{AIl{}{{ALb{c}}{ALd{e}}{ALf{g}}}}}A@h{ALh{ALj{c}}}{{Fh{}{{B`{c}}}}HdInJ`}}{{{Fd{c}}ADf}{{AIl{}{{ALb{e}}{ALd{c}}{ALf{g}}}}}{ALh{ALj{e}}}A@h{{Fh{}{{B`{e}}}}HdInJ`}}{{EncADf}{{AIl{}{{ALb{c}}{ALd{e}}{ALf{g}}}}}A@h{ALh{ALj{c}}}{{Fh{}{{B`{c}}}}HdInJ`}}{{{f{Bf}}{f{Ad}}En}Dl}{{{f{Bf}}dEn}Fj}{{{f{Bf}}{f{Bf}}En}Cn}{{{f{Bf}}{f{{Dh{Df}}}}En}Ef}{{{f{Bf}}{f{{Dh{Df}}}}En}AK`}{{{f{Bf}}cEn}{{AEd{c}}}I`}{{EnADf}{{AIl{}{{ALb{c}}{ALd{e}}{ALf{g}}}}}A@h{ALh{ALj{c}}}{{Fh{}{{B`{c}}}}HdInJ`}}{{{f{Bf}}En}Dl}{{{f{Bf}}En}Fj}{{{f{Bf}}En}Cn}{{{f{Bf}}En}Ef}{{{f{Bf}}En}AK`}{{{f{Bf}}En}{{AEd{c}}}I`}{{{f{Bf}}En{f{Dj}}}Dl}{{{f{{AIl{}{{ALb{c}}{ALd{e}}{ALf{g}}}}}}En}{{An{c}}}A@h{ALh{ALj{c}}}{{Fh{}{{B`{c}}}}HdInJ`}}{{{f{Il}}En}{{Af{Hf}}}}{{{f{AM`}}En}{{Af{Hf}}}}0{{{f{Dl}}En}{{Af{Hf}}}}{{{f{Fj}}En}{{Af{Hf}}}}{{{f{Cn}}En}{{Af{Hf}}}}{{{f{Ef}}En}{{Af{Hf}}}}{{{f{AK`}}En}{{Af{Hf}}}}{{{f{{AEd{c}}}}En}{{Af{Hf}}}I`}{{{f{Il}}En}Hf}{{{f{AM`}}En}Hf}0{{{f{Dl}}En}Hf}{{{f{Fj}}En}Hf}{{{f{Cn}}En}Hf}{{{f{Ef}}En}Hf}{{{f{AK`}}En}Hf}{{{f{{AEd{c}}}}En}HfI`}{{{f{Dl}}En}{{An{Ad}}}}{{}Dj}00000000000000000000000{{{f{Dl}}}Ad}{{{f{{AEd{c}}}}En}{{An{{f{Hn}}}}}I`}0{{{f{Hf}}}{{An{{f{Bf}}}}}}{{{f{B@l}}En}Hf}{{{f{{AIl{}{{ALb{c}}{ALd{e}}{ALf{g}}}}}}En}{{An{c}}}A@h{ALh{ALj{c}}}{{Fh{}{{B`{c}}}}HdInJ`}}{{{f{Dl}}}En}{{{f{Cn}}}En}{{{f{AK`}}}En}{{{f{Dl}}dd}{{Af{Aj}}}}{{{f{Fj}}dd}{{Af{Aj}}}}{{{f{Cn}}dd}{{Af{Aj}}}}{{{f{Ef}}dd}{{Af{Aj}}}}{{{f{AK`}}dd}{{Af{Aj}}}}{{{f{{AEd{c}}}}dd}{{Af{Aj}}}I`}{{{f{Dl}}{f{Dl}}}Fj}{{{f{Fj}}{f{Fj}}}Fj}{{{f{Cn}}{f{Cn}}}Fj}{{{f{Cn}}{f{Bf}}}Fj}{{{f{Ef}}{f{{Dh{Df}}}}}Fj}{{{f{Ef}}{f{Ef}}}Fj}543210{{{f{Hf}}{f{Bhc}}}bABb}{{{f{AMf}}{f{Bhc}}}bABb}{{{f{Dj}}{f{Bhc}}}bABb}{{{f{Mf}}{f{Bhc}}}bABb}{{{f{AMj}}{f{Bhc}}}bABb}{{{f{ADf}}{f{Bhc}}}bABb}{{{f{AOb}}{f{Bhc}}}bABb}{{{f{Hf}}{f{Bhc}}d}bABb}{DjDj}{{}En}0000000000000000000000000000000000{{{f{Dl}}}{{f{Dj}}}}{{{f{Dj}}}{{An{{f{Dj}}}}}}{{{f{ADf}}}{{An{{f{ADf}}}}}}{ce{}{}}0000000000000000000000000000000000{{B@n{An{En}}En}{{Af{Il}}}}{{B@n{An{En}}En}Il}{{{f{Dl}}}c{}}{{{f{Fj}}}c{}}{{{f{Cn}}}c{}}{{{f{Ef}}}c{}}{{{f{AK`}}}c{}}{{{f{{AEd{c}}}}}eI`{}}{{BA`Dj}{{Af{Kf}}}}{IlAd}{B@nAd}{Hf{{Af{Hf}}}}{{{f{Dj}}}d}00{{{f{Hf}}}d}111010111110101011110111101{{{f{ADf}}}d}{{{f{{AIl{}{{ALb{c}}{ALd{e}}{ALf{g}}}}}}}{{ADn{cgADl}}}A@h{ALh{ALj{c}}}{{Fh{}{{B`{c}}}}HdInJ`}}{{{f{Dl}}}{{`{{Bd{}{{B`{Jj}}}}}}}}{{{f{{AIl{}{{ALb{c}}{ALd{e}}{ALf{g}}}}}}}{{An{c}}}A@h{ALh{ALj{c}}}{{Fh{}{{B`{c}}}}HdInJ`}}{{{f{Dj}}}{{f{Dj}}}}{{{f{Dl}}{f{Dl}}}Fj}{{{f{Fj}}{f{Fj}}}Fj}{{{f{Cn}}{f{Cn}}}Fj}{{{f{Cn}}{f{Bf}}}Fj}{{{f{Ef}}{f{{Dh{Df}}}}}Fj}{{{f{Ef}}{f{Ef}}}Fj}542301{{{f{ALl}}{f{ALl}}}{{Af{{H`{ALlALl}}}}}}{{DlDl}{{Af{{H`{DlDl}}}}}}{{{f{Dj}}{f{Dj}}}{{Af{d}}}}{{{f{AMf}}}{{An{Dj}}}}{{{f{Fj}}}{{An{d}}}}{{{f{Fj}}}Kf}{{{f{Cn}}}Kf}{{{f{Ef}}}Kf}{{{f{Fj}}}{{An{Kh}}}}{{{f{AKh}}}{{An{Ib}}}}{{{f{AKj}}}{{An{Kh}}}}{{{f{AKh}}}Kf}{{{f{AKj}}}Kf}{{{f{Dj}}{f{Dj}}}{{Af{Dj}}}}9876{{{f{Bf}}{f{{Dh{Df}}}}EnEn}Fj}{{{f{Il}}{f{Il}}}c{}}{{{f{{l{c}}}}{f{Ad}}}{{Gj{AdAKd}}}{}}000000{{{f{Cn}}}{{Af{En}}}}{{{f{Ef}}}{{Af{En}}}}{{{f{Mf}}}{{f{B@h}}}}`{{}c{}}00{{{f{Bf}}c}Cn{{Lh{{Dh{{AKf{Bf}}}}}}}}{{{f{Bf}}c}Cn{{Lh{{Dh{{An{{AKf{Bf}}}}}}}}}}{{{f{Bf}}c}Cn{{Lh{{Dh{{f{Bf}}}}}}}}{{{f{Bf}}c}Cn{{Lh{{Dh{{An{{f{Bf}}}}}}}}}}{{{f{Bf}}c}Ef{{Lh{{Dh{{An{{AKf{{Dh{Df}}}}}}}}}}}}{{{f{Bf}}c}Ef{{Lh{{Dh{{AKf{{Dh{Df}}}}}}}}}}{{{f{Bf}}c}Ef{{Lh{{Dh{{An{{f{{Dh{Df}}}}}}}}}}}}{{{f{Bf}}c}Ef{{Lh{{Dh{{f{{Dh{Df}}}}}}}}}}{{{f{Bf}}{f{{Dh{c}}}}}{{AEd{c}}}I`}{{{f{Bf}}e}{{AEd{c}}}I`{{Lh{{Dh{{An{c}}}}}}}}{{{f{Bf}}Dj}Mf}{{{f{Bf}}}{{AEd{c}}}I`}{{{f{Dl}}EnEn}Dl}{{{f{Fj}}EnEn}Fj}{{{f{Cn}}EnEn}Cn}{{{f{Ef}}EnEn}Ef}{{{f{AK`}}EnEn}AK`}{{{f{{AEd{c}}}}EnEn}{{AEd{c}}}I`}{{{f{Bf}}{Fd{c}}}{{AEd{c}}}I`}{{{f{Bf}}{Fd{c}}Gn}{{AEd{c}}}I`}{{{l{c}}}{{AMb{ec}}}BnBn}{{}AMh}{Fjc{}}{{{f{Fj}}}c{}}{{{f{Dl}}{f{Dl}}}Fj}{{{f{Fj}}{f{Fj}}}Fj}{{{f{Cn}}{f{Cn}}}Fj}{{{f{Cn}}{f{Bf}}}Fj}{{{f{Ef}}{f{Ef}}}Fj}{{{f{Ef}}{f{{Dh{Df}}}}}Fj}543201{{{f{Dl}}}{{Af{{AG`{Jj}}}}}}9{{{f{Dl}}}{{`{{Mh{}{{B`{{An{Ad}}}}}}}}}}{{{f{Cn}}}{{`{{Mh{}{{B`{{An{{f{Bf}}}}}}}}}}}}{{{f{BhDl}}}{{`{{Mj{}{{B`{{An{Ad}}}}}}}}}}{{{f{Cn}}}{{`{{Mj{}{{B`{{An{{f{Bf}}}}}}}}}}}}{{{f{Hf}}{f{Hf}}}{{An{BAb}}}}{{{f{AMj}}{f{AMj}}}{{An{BAb}}}}{{{f{{AMb{ce}}}}}{{f{{l{e}}}}}BnBn}{{{f{Il}}}{{An{En}}}}{{{f{{AMb{ANjIj}}}}}{{An{En}}}}{{{f{AKh}}KhMl}{{Af{{An{Ib}}}}}}{{{f{AKj}}KhMl}{{Af{{An{Kh}}}}}}{{{f{AKh}}KhMl}{{Af{Kf}}}}{{{f{AKj}}KhMl}{{Af{Kf}}}}{{{f{Bf}}EnKh}{{Af{Fj}}}}{{{f{{l{c}}}}{f{Ad}}}{{Gj{AdAKd}}}{}}000000{{{f{Dl}}}Dl}{{{f{Fj}}}Fj}{{{f{Cn}}}Cn}{{{f{Ef}}}Ef}{{{f{AK`}}}AK`}{{{f{{AEd{c}}}}}{{AEd{c}}}I`}`{{{f{Il}}}En}{{{f{{AMb{ANjIj}}}}}En}{{{f{Fj}}c{An{d}}}{{Af{Fj}}}{{Gh{}{{B`{Hh}}}}}}{{{f{Cn}}c{An{{f{Bf}}}}}{{Af{Cn}}}{{Gh{}{{B`{Hh}}}}}}{{{f{Ef}}c{An{{f{{Dh{Df}}}}}}}{{Af{Ef}}}{{Gh{}{{B`{Hh}}}}}}{{{f{Fj}}ce}{{Af{Fj}}}{{Gh{}{{B`{Hh}}}}}{{Cb{{An{d}}}{{C`{{An{d}}}}}}}}{{{f{Cn}}ce}{{Af{Cn}}}{{Gh{}{{B`{Hh}}}}}{{Cb{{An{{f{Bf}}}}}{{C`{{An{D`}}}}}}}}{{{f{Ef}}ce}{{Af{Ef}}}{{Gh{}{{B`{Hh}}}}}{{Cb{{An{{f{{Dh{Df}}}}}}}{{C`{{An{{Fd{Df}}}}}}}}}}{{{f{Fj}}{f{Fj}}{An{d}}}{{Af{Fj}}}}{{{f{Cn}}{f{Fj}}{An{{f{Bf}}}}}{{Af{Cn}}}}{{{f{Ef}}{f{Fj}}{An{{f{{Dh{Df}}}}}}}{{Af{Ef}}}}{{{f{BhDl}}}b}{{{f{BhDl}}Dj}b}{{{f{BhMf}}B@h}b}{{{f{Dl}}Jj}Dl}{{{f{Fj}}Jj}Fj}{{{f{Cn}}Jj}Cn}{{{f{Ef}}Jj}Ef}{{{f{AK`}}Jj}AK`}{{{f{{AEd{c}}}}Jj}{{AEd{c}}}I`}{{{f{Dl}}Jj{An{{f{Ad}}}}}Dl}{{{f{Fj}}Jj{An{d}}}Fj}{{{f{Cn}}Jj{An{{f{Bf}}}}}Cn}{{{f{Ef}}Jj{An{{f{{Dh{Df}}}}}}}Ef}{{{f{AK`}}Jj{An{{f{{Dh{Df}}}}}}}AK`}{{{f{{AEd{c}}}}Jj{An{{Hl{c}}}}}{{l{{Hl{c}}}}}I`}{{{f{Fj}}d}Fj}{{{f{Cn}}d}Cn}{{{f{Ef}}d}{{l{Dd}}}}{{{f{AK`}}d}AK`}{{{f{Fj}}E`}{{l{Al}}}}{{{f{Cn}}E`}{{l{Db}}}}{{{f{Ef}}E`}{{l{Dd}}}}{{{f{AK`}}E`}AK`}{{{f{AKh}}Df}Kf}{{{f{AKj}}Df}Kf}{{{f{Hf}}{f{Dj}}}{{An{Hf}}}}`{{{f{Il}}{f{Il}}}c{}}{{{f{{l{c}}}}{f{Ad}}}{{Gj{AdAKd}}}{}}000000{{{f{Fj}}}{{An{Hh}}}}{{{f{Fj}}}Kf}{{{f{Ef}}}Kf}{{{f{Cn}}{f{c}}}Cn{{Lh{{Dh{Hh}}}}N`}}{{{f{Cn}}{f{Eb}}}Cn}{{{f{Ef}}{f{c}}}Ef{{Lh{{Dh{Hh}}}}N`}}{{{f{Ef}}{f{Eb}}}Ef}{{{f{Dj}}AMh}ADf}{{{f{Mf}}AMh}B@`}{AMjAOb}{{{f{Dj}}{f{Bf}}AMh}B@`}{AMj{{f{Bf}}}}{{{f{Cn}}En}{{Af{Ad}}}}{{{f{BhDl}}Dj}b}{{{f{ADf}}}{{f{ADf}}}}{{{f{Dl}}}{{Af{Nh}}}}{{{f{c}}}e{}{}}00000000000000000000000000000{{{f{Dj}}}Dj}{{{f{ADf}}}BAd}{{{f{Il}}En}{{Af{{AKf{Il}}}}}}{{{f{{AMb{ANjIj}}}}En}{{Af{{AKf{{AMb{ANjIj}}}}}}}}{{{f{c}}}D`{}}00{{{f{Ef}}}Cn}{{{f{Hf}}{f{Hf}}}d}{{{f{Dl}}c}{{Af{Dl}}}{{Ch{Cf}{{C`{{Af{Ad}}}}}}}}{{{f{Dl}}e}{{Af{{l{g}}}}}{}{{Ch{{An{Cf}}}{{C`{{Af{{An{c}}}}}}}}Cd}Bn}{g{{Gj{AKle}}}{}{}{{Gh{}{{B`{{Gj{ce}}}}}}}}0{{ADfg}{{Gj{AKne}}}{}{}{{Gh{}{{B`{{Gj{ce}}}}}}}}0{AOd{{Gj{eg}}}{}{{AKl{c}}AIl}{}}0{{AOdADf}{{Gj{eg}}}{}{{AKn{c}}AIl}{}}0{{{f{Hf}}}{{Af{c}}}Kd}{c{{Gj{e}}}{}{}}000000000000000000000000000000000000000000000000000000000000000000000{{{f{Hf}}{f{Dj}}}{{Af{Hf}}}}{{{f{Dj}}AMh}{{Af{ADf}}}}{{{f{Dl}}{f{{l{c}}}}e}{{Af{Dl}}}Bn{{Ch{{An{Cf}}An}{{C`{{Af{{An{Ad}}}}}}}}}}{{{f{c}}}Nn{}}0000000000000000000000000000000000{{{f{ADf}}}ADf}{{{f{Fj}}}{{Af{Fj}}}}{{{f{Cn}}}{{Af{Cn}}}}{{{f{Ef}}}{{Af{Ef}}}}{{{f{{AEd{c}}}}}{{Af{{l{{Hl{c}}}}}}}I`}{{{f{{AIl{}{{ALb{c}}{ALd{e}}{ALf{g}}}}}}En}cA@h{ALh{ALj{c}}}{{Fh{}{{B`{c}}}}HdInJ`}}0{{{f{Dj}}Hf}d}{{{f{{AIl{}{{ALb{c}}{ALd{e}}{ALf{g}}}}}}}gA@h{ALh{ALj{c}}}{{Fh{}{{B`{c}}}}HdInJ`}}{{{f{AKh}}Df}Kf}{{{f{AKj}}Df}Kf}{{{f{Fj}}Nd{f{Bh{Fd{Id}}}}}{{Af{b}}}}{{{f{BAf}}Nd{f{Bh{Fd{Id}}}}}{{Af{b}}}}{{{f{BAh}}Nd{f{Bh{Fd{Id}}}}}{{Af{b}}}}{{{f{AOh}}Nd{f{Bh{Fd{Id}}}}}{{Af{b}}}}{{{f{BAj}}Nd{f{Bh{Fd{Id}}}}}{{Af{b}}}}{{{f{BAl}}Nd{f{Bh{Fd{Id}}}}}{{Af{b}}}}{{{f{BAn}}Nd{f{Bh{Fd{Id}}}}}{{Af{b}}}}{{{f{BB`}}Nd{f{Bh{Fd{Id}}}}}{{Af{b}}}}{{{f{BBb}}Nd{f{Bh{Fd{Id}}}}}{{Af{b}}}}{{{f{B@n}}Nd{f{Bh{Fd{Id}}}}}{{Af{b}}}}{{{f{AKh}}Nd{f{Bh{Fd{Id}}}}}{{Af{b}}}}{{{f{AKj}}Nd{f{Bh{Fd{Id}}}}}{{Af{b}}}}{{{f{Cn}}Nd{f{Bh{Fd{Id}}}}}{{Af{b}}}}{{{f{Ef}}Nd{f{Bh{Fd{Id}}}}}{{Af{b}}}}{{{f{AK`}}Nd{f{Bh{Fd{Id}}}}}{{Af{b}}}}{{{f{{AEd{c}}}}Nd{f{Bh{Fd{Id}}}}}{{Af{b}}}I`}{{{f{Fj}}Nd{f{Bh{Dh{Id}}}}}{{Af{b}}}}{{{f{BAf}}Nd{f{Bh{Dh{Id}}}}}{{Af{b}}}}{{{f{BAh}}Nd{f{Bh{Dh{Id}}}}}{{Af{b}}}}{{{f{AOh}}Nd{f{Bh{Dh{Id}}}}}{{Af{b}}}}{{{f{BAj}}Nd{f{Bh{Dh{Id}}}}}{{Af{b}}}}{{{f{BAl}}Nd{f{Bh{Dh{Id}}}}}{{Af{b}}}}{{{f{BAn}}Nd{f{Bh{Dh{Id}}}}}{{Af{b}}}}{{{f{BB`}}Nd{f{Bh{Dh{Id}}}}}{{Af{b}}}}{{{f{BBb}}Nd{f{Bh{Dh{Id}}}}}{{Af{b}}}}{{{f{B@n}}Nd{f{Bh{Dh{Id}}}}}{{Af{b}}}}{{{f{AKh}}Nd{f{Bh{Dh{Id}}}}}{{Af{b}}}}{{{f{AKj}}Nd{f{Bh{Dh{Id}}}}}{{Af{b}}}}{{{f{Cn}}Nd{f{Bh{Dh{Id}}}}}{{Af{b}}}}{{{f{Ef}}Nd{f{Bh{Dh{Id}}}}}{{Af{b}}}}{{{f{AK`}}Nd{f{Bh{Dh{Id}}}}}{{Af{b}}}}{{{f{{AEd{c}}}}Nd{f{Bh{Dh{Id}}}}}{{Af{b}}}I`}{ce{}{}}0000000000000000000000000000000000{Enc{}}0{En{{BBd{ce}}}{}{}}{{{f{{Dh{O`}}}}e}c{}{{Ob{{f{Eb}}}{{C`{c}}}}}}{{{AIl{}{{ALb{c}}{ALd{e}}{ALf{g}}}}{An{Gn}}}{{AIl{}{{ALb{c}}{ALd{e}}{ALf{g}}}}}A@h{ALh{ALj{c}}}{{Fh{}{{B`{c}}}}HdInJ`}}{{{f{Dj}}}Hf}{{{f{Dl}}{f{{l{c}}}}e}DlBn{{Ch{{An{Cf}}An}{{C`{{An{Ad}}}}}}}}```````````{{{f{c}}h}b{}}{{{f{ALl}}}d}{{ALld}ALl}{{{f{BhBBf}}{An{{f{Bf}}}}}b}{{{f{BhALl}}{f{ALl}}}{{Af{b}}}}{{{f{BhBBf}}}b}{{{f{BhBBf}}{f{Bf}}}b}{{{f{ALl}}E`}Eb}{{{f{c}}}{{f{e}}}{}{}}000{{{f{Bhc}}}{{f{Bhe}}}{}{}}000{{{f{ALl}}{f{ALl}}c}{{Af{ALl}}}ALn}{{{f{ALl}}{f{Dj}}Ej}{{Af{Ad}}}}{{{f{ALl}}}ALl}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}{{}BBh}{En{{f{c}}}{}}000{En{{f{Bhc}}}{}}000{{BBfc}ALl{{Gh{}{{B`{{An{{f{Bf}}}}}}}}}}{Enb}000{{{f{ALl}}}{{f{Dj}}}}{{{f{ALl}}{f{Bf}}}c{}}{{{f{ALl}}{f{ALl}}}c{}}{{{f{ALl}}{f{Cn}}}c{}}102{{ALn{f{AOh}}{f{AOh}}}{{Af{AOh}}}}{BBfALl}{BBh{{Kn{BBj}}}}{cc{}}000{{AOh{Kn{BBj}}dBBl}ALl}{{AOhBBl}ALl}{{{f{Cn}}{f{AOf}}BBl}{{Af{ALl}}}}{{{f{Bf}}dEnBBl}ALl}{{{f{ALl}}En}{{Af{Hf}}}}{{{f{ALl}}En}Hf}{{{f{ALl}}}{{f{{Kn{BBj}}}}}}=<;<=;{{}En}000{ce{}{}}0000{ALlAd}{{{f{ALl}}}d}0{{{f{ALl}}}BBn}{{{f{ALl}}}En}{{{f{ALl}}{f{ALl}}}c{}}{{{f{ALl}}{f{Cn}}}c{}}{{{f{ALl}}{f{Bf}}}c{}}210{{{f{ALl}}{f{ALl}}}{{Af{{H`{ALlALl}}}}}}{{DlDl}{{Af{{H`{DlDl}}}}}}{{{f{ALl}}}Kf}{{{f{BhBBh}}{f{{Kn{BBj}}}}}{{Af{b}}}}1{{{f{ALl}}}{{Af{En}}}}{{{f{ALl}}}{{f{Bf}}}}{{{f{Bf}}EnBBl}BBf}{{{Kn{BBj}}}BBh}{{{f{BhBBn}}}{{An{c}}}{}}9:;9;:<{{{f{ALl}}}{{f{AOh}}}}{{{f{BhBBf}}{f{Bf}}}{{H`{M`d}}}}`{{{f{BBn}}}{{H`{En{An{En}}}}}}{{{f{ALl}}d}ALl}{{{f{ALl}}E`}ALl}`{{{f{ALl}}AMhd}Fb}{{{f{ALl}}{f{AOf}}BC`}ALl}{{{f{ALl}}}{{Af{ALl}}}}{{{f{ALl}}}ALl}{{{f{c}}}e{}{}}{c{{Gj{e}}}{}{}}0000000{{{f{c}}}Nn{}}0004{{{f{ALl}}}d}{{{f{ALl}}}{{Af{BCb}}}}{ce{}{}}000``````{{{f{c}}h}b{}}0{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bhc}}}{{f{Bhe}}}{}{}}0{AOfBBj}{{{f{BBl}}}BBl}{{{f{BBj}}}BBj}{{{f{c}}{f{Bhe}}}b{}{}}0{{{f{c}}}b{}}00{{}BBl}{{}BBj}{En{{f{c}}}{}}0{En{{f{Bhc}}}{}}0{Enb}0{{{f{BBl}}{f{BBl}}}d}{{{f{BBj}}{f{Bf}}}{{An{M`}}}}{{{f{BBl}}{f{BhG`}}}Gb}{{{f{BBj}}{f{BhG`}}}Gb}{cc{}}0{{{f{BBj}}M`}{{f{Bf}}}}{{{f{BBj}}}{{f{AOf}}}}{{{f{BBj}}M`}{{An{{f{Bf}}}}}}{{}En}0{ce{}{}}0{{{f{BBj}}}d}0{{{f{BBj}}}En}{{{f{BBj}}{f{BBj}}}d}{{{f{c}}}e{}{}}0{c{{Gj{e}}}{}{}}000{{{f{c}}}Nn{}}066`{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{}BCd}{En{{f{c}}}{}}{En{{f{Bhc}}}{}}{{}b}{{{f{BhBCd}}}b}{Enb}2{cc{}}6{{}En}{ce{}{}}<<;{{}d}1```````660````````````````````````{{{f{BCf}}}{{f{Bf}}}}<<;;`9{{{f{BCf}}}f}:9966`{{{f{BCh}}{f{BhG`}}}{{Gj{bAOj}}}}{{{f{BCf}}{f{BhG`}}}{{Gj{bAOj}}}}077{cBCf{{AOn{{AKf{Bf}}}}}}{{}{{Jn{{f{Bf}}BCh}{{C`{b}}}}}}8877{cAKdAJ`}````{{{Jn{{f{Bf}}BCh}{{C`{b}}}}}b}{cAKdBCj}{{{f{c}}}D`{}}{c{{Gj{e}}}{}{}}000{{{f{c}}}Nn{}}0==``````````````````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{BCl}}}BCl}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}0{En{{f{c}}}{}}{En{{f{Bhc}}}{}}{Enb}{{{f{BhG`}}MdEn}Gb}{cc{}}{{}BCn}{{}BCl}{{}{{An{En}}}}{{}D`}{{}d}{{}En}{ce{}{}}{{{An{BCn}}}b}{BClb}{{{An{En}}}b}2{{{An{d}}}b}{{{f{c}}}e{}{}}{c{{Gj{e}}}{}{}}0{{{f{c}}}Nn{}}7```````````{{{f{c}}h}b{}}00{{{f{BhBCb}}{Fd{Ad}}{f{BD`}}}{{Af{b}}}}{{{f{BCb}}{f{Cb}}}{{Fd{Ad}}}}0{{{f{BCb}}{f{Fj}}}{{Af{BCb}}}}{{{f{BCb}}{f{{Dh{B@h}}}}}{{Af{BCb}}}}0{{{f{BCb}}JjEn}BCb}{{{f{BCb}}{f{Ad}}}c{}}{{{f{BCb}}{f{BCb}}}c{}}{{BCb{f{Ad}}}c{}}{{{f{BhBCb}}}{{f{BhBCb}}}}{{{f{BhBCb}}{f{Bf}}e}{{Af{{f{BhBCb}}}}}BDb{{Ob{{f{Ad}}}{{C`{c}}}}}}{{{f{BhBCb}}Ene}{{Af{{f{BhBCb}}}}}BDb{{Ob{{f{Ad}}}{{C`{c}}}}}}22{{{f{c}}}{{f{e}}}{}{}}0000{{{f{Bhc}}}{{f{Bhe}}}{}{}}0000{{{f{BCb}}}{{`{{Bd{}{{B`{En}}}}}}}}{{{f{BCb}}}BCb}{{{f{BDd}}}BDd}{{{f{BDf}}}BDf}2{{{f{c}}{f{Bhe}}}b{}{}}00{{{f{c}}}b{}}0000{{{f{BCb}}{f{Bf}}}{{Af{{f{Ad}}}}}}{{{f{BCb}}e}{{Af{{Fd{{f{Ad}}}}}}}{{Lh{Bf}}}{{Gh{}{{B`{c}}}}}}{{}BDf}{{}BCb}{En{{f{c}}}{}}0000{En{{f{Bhc}}}{}}0000{{BCb{f{Ad}}}c{}}{{{f{BCb}}{f{Ad}}}c{}}{{{f{BCb}}{f{BCb}}}c{}}{Enb}0000{{{f{BCb}}{f{Bf}}}{{Af{BCb}}}}{{{f{BhBCb}}{f{Bf}}}{{Af{Ad}}}}{{{f{BCb}}{f{{Dh{c}}}}}BCb{{Lh{Bf}}}}{{{f{BCb}}{f{{BDh{{f{Bf}}}}}}}BCb}{{{f{BCb}}{An{{f{{Dh{c}}}}}}}{{Af{BCb}}}{{Lh{Bf}}}}{{{f{BCb}}}{{Fd{Dj}}}}<{{{f{BDj}}}BCb}{{{f{BD`}}}BCb}{{{f{BDf}}{f{BDf}}}d}{{{f{BCb}}{f{BCb}}}d}00{{{f{c}}{f{e}}}d{}{}}00{{{f{BCb}}}En}`{{{f{BCb}}e}{{Af{BCb}}}{{Lh{Bf}}}{{Gh{}{{B`{c}}}}}}{{{f{BCb}}{Fd{Ad}}}{{Af{BCb}}}}{{{f{BhBCb}}{f{BCb}}}{{Af{b}}}}{{{f{BCb}}}{{Fd{Mf}}}}{{{f{BCb}}AFj}{{Af{BCb}}}}{{{f{BCb}}{f{Fj}}}{{Af{BCb}}}}{{{f{BDd}}{f{BhG`}}}Gb}{{{f{BDf}}{f{BhG`}}}Gb}{{{f{BCb}}{f{BhG`}}}Gb}0{cc{}}0000{g{{Gj{ic}}}{}{}{{Gl{c}{{B`{e}}}}}{}}{cBCb{{Gh{}{{B`{Ad}}}}}}{{{f{{Dh{BDl}}}}}{{Af{BCb}}}}{{{f{{Dh{BDl}}}}{f{BD`}}}{{Af{BCb}}}}{{c{f{BD`}}}{{Af{BCb}}}{{Bd{}{{B`{{f{BDl}}}}}}}}{{{f{BCb}}En}{{An{{Fd{Hf}}}}}}{{{f{BCb}}{f{Bf}}}{{An{En}}}}{{{f{BCb}}}{{Fd{{f{Bf}}}}}}{{{f{BCb}}}{{Fd{B@h}}}}{{{f{BCb}}}{{f{{Dh{Ad}}}}}}{{{f{BhBCb}}}{{f{Bh{Fd{Ad}}}}}}{{{f{BCb}}En}{{Af{BDl}}}}{{{f{BCb}}En{f{BhBDl}}}{{Af{b}}}}{{{f{BCb}}En{f{BhBDl}}}b}{{{f{BCb}}}{{An{{Af{Dj}}}}}}`{{{f{BCb}}e}{{Af{BDn}}}{{Lh{Bf}}}{{Gh{}{{B`{c}}}}}}0{{{f{BCb}}{Fd{Ad}}dd}{{Af{BDn}}}}{{{f{BDf}}{f{Bhc}}}bABb}{{{f{BhBCb}}{An{Nd}}}{{Af{BAj}}}}{{{f{BCb}}{An{En}}}BCb}{{{f{BCb}}}En}{{{f{BCb}}{f{{Dh{Ad}}}}}{{Af{BCb}}}}{{{f{BhBCb}}{f{{Dh{Ad}}}}}{{Af{{f{BhBCb}}}}}}{{{f{BhBCb}}{f{{Dh{Ad}}}}}{{f{BhBCb}}}}{{{f{BCb}}{BE`{En}}}{{f{c}}}{}}{{{f{BCb}}{Lj{En}}}{{f{c}}}{}}{{{f{BCb}}En}{{f{c}}}{}}{{{f{BCb}}{BEb{En}}}{{f{c}}}{}}{{{f{BCb}}{f{Bf}}}{{f{c}}}{}}{{{f{BCb}}BEd}{{f{c}}}{}}{{{f{BCb}}{BEf{En}}}{{f{c}}}{}}{{{f{BCb}}{BEh{En}}}{{f{c}}}{}}{{}En}0000{{{f{BhBCb}}Enc}{{Af{{f{BhBCb}}}}}BDb}{ce{}{}}000000{{{f{BCb}}}{{Af{Fj}}}}{{{f{BCb}}}d}1{{{f{BCb}}}{{Jl{Ad}}}}{{{f{BCb}}}{{`{{Bd{}{{B`{BCb}}}}}}}}{{{f{BCb}}AMhd}BEj}{{{f{BCb}}}BEl}{{{f{BCb}}}En}{{{f{BCb}}}{{Af{{An{Ad}}}}}}{{{f{BCb}}BDd}{{Af{{An{Ad}}}}}}1{{BCb{f{Ad}}}c{}}{{{f{BCb}}{f{Ad}}}c{}}{{{f{BCb}}{f{BCb}}}c{}}55{{{Fd{c}}}{{Af{BCb}}}BDb}{{{Fd{Ad}}}BCb}{{{Fd{Ad}}}{{Af{BCb}}}}{{{f{BhBEj}}}{{An{c}}}{}}{{{f{BhBEl}}}{{An{c}}}{}}{{{f{BCb}}}BCb}{{{f{BCb}}cd}{{Af{{Fd{BCb}}}}}{{BEn{D`}}}}0{{BCbe}{{Af{c}}}{}{{Cb{BCb}{{C`{{Af{c}}}}}}}}{{{f{BhBCb}}e}{{Af{c}}}{}{{Cb{{f{BhBCb}}}{{C`{{Af{c}}}}}}}}{{BCbgc}{{Af{e}}}{}{}{{Cb{BCbc}{{C`{{Af{e}}}}}}}}{{{f{BhBCb}}}{{An{Ad}}}}{{{f{BCb}}{f{BCb}}}d}<>={{{f{BhBCb}}{f{Bf}}{f{Bf}}}{{Af{{f{BhBCb}}}}}}{{{f{BhBCb}}{f{Bf}}c}{{Af{{f{BhBCb}}}}}BDb}{{{f{BhBCb}}Enc}{{Af{{f{BhBCb}}}}}BDb}19`{{{f{BCb}}{f{Ad}}dd{An{Id}}}{{Af{BCb}}}}0{{{f{BCb}}Endd{An{Id}}}{{Af{BCb}}}}{{{f{BCb}}}BD`}{{{f{BCb}}{f{BCb}}}{{Af{b}}}}{{{f{BCb}}e}{{Af{BCb}}}{{Lh{Bf}}}{{Gh{}{{B`{c}}}}}}{{{f{BCb}}En}{{An{{f{Ad}}}}}}{{{f{BCb}}c}{{Af{BCb}}}{{BF`{En}}}}2{{{f{BCb}}c}{{Af{{Fd{Ad}}}}}{{BEn{B@h}}}}{{{f{BCb}}e{f{BFb}}}{{Af{BCb}}}{{Lh{Bf}}}{{Gh{}{{B`{c}}}}}}{{{f{BCb}}e{f{BD`}}}{{Af{BCb}}}{{Lh{Bf}}}{{Gh{}{{B`{c}}}}}}{{{f{BhBCb}}{f{{Dh{c}}}}}{{Af{b}}}{{Lh{Bf}}}}{{{f{BCb}}}{{H`{EnEn}}}}{{{f{BCb}}Jj}BCb}{{{f{BCb}}}d}{{{f{BhBCb}}}b}{{{f{BEj}}}{{H`{En{An{En}}}}}}{{{f{BEl}}}{{H`{En{An{En}}}}}}{{{f{BCb}}JjEn}BCb}00{{{f{BCb}}cEd}{{Af{BCb}}}{{BEn{B@h}}}}{{{f{BhBCb}}cEd}{{Af{{f{BhBCb}}}}}{{BEn{B@h}}}}{{{f{BCb}}Jj}{{H`{BCbBCb}}}}0{{{f{BhBCb}}}{{`{{Bd{}{{B`{BCb}}}}}}}}{{BCbEnd}{{Fd{BCb}}}}{{{f{BCb}}{f{BCb}}}c{}}{{BCb{f{Ad}}}c{}}{{{f{BCb}}{f{Ad}}}c{}}{{{f{BCb}}BDd}{{Af{{An{Ad}}}}}}{{{f{BCb}}{An{En}}}BCb}{{{f{BCb}}{f{Eb}}}{{Af{BCb}}}}{{{f{BCb}}{f{Eb}}}BCb}{{{f{BCb}}{f{Eb}}d}BCb}{{{f{BCb}}BFd}{{Af{Nh}}}}{{{f{c}}}e{}{}}00{{{f{c}}}D`{}}{{{f{BhBCb}}{An{{f{Bf}}}}{An{{Nl{D`{Fd{D`}}}}}}}{{Af{BCb}}}}{{{f{BhBCb}}{f{Bf}}e}{{Af{{f{BhBCb}}}}}BDb{{Ob{{f{Ad}}}{{C`{{Af{c}}}}}}}}{{{f{BhBCb}}Ene}{{Af{{f{BhBCb}}}}}BDb{{Ob{{f{Ad}}}{{C`{{Af{c}}}}}}}}{c{{Gj{e}}}{}{}}000{BFf{{Af{BCb}}}}{{{H`{BFh{f{{Dh{B@`}}}}}}}{{Af{BCb}}}}2{{c{f{BD`}}}{{Af{BCb}}}{{Bd{}{{B`{{Af{{f{BDl}}}}}}}}}}{{{f{BCb}}{f{Bf}}}{{Af{En}}}}44444{{{f{c}}}Nn{}}0000{{{f{BCb}}{An{{f{{Dh{D`}}}}}}BDf{An{{H`{JjEn}}}}}{{Af{BCb}}}}{{{f{BCb}}d{An{{f{{Dh{D`}}}}}}BDf{An{{H`{JjEn}}}}}{{Af{BCb}}}}1{{{f{BCb}}ce}{{Af{BCb}}}{{BEn{B@h}}}{{BEn{B@h}}}}{{{f{BCb}}BFj}{{Af{BCb}}}}{{{f{BCb}}{f{BCb}}}{{Af{BCb}}}}{{{f{BhBCb}}{f{BCb}}}{{Af{{f{BhBCb}}}}}}{ce{}{}}0000{{{f{BCb}}}En}{{{f{BhBCb}}c}{{Af{{f{BhBCb}}}}}BDb}{{{f{BhBCb}}c{f{BD`}}}{{Af{{f{BhBCb}}}}}BDb}{{{f{BhBCb}}Ad}{{f{BhBCb}}}}{{{f{BCb}}{f{Bf}}{An{Hh}}}{{Af{BCb}}}}{{{f{BhBCb}}{f{Bf}}{An{Hh}}}{{f{BhBCb}}}}`{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{BFj}}}BFj}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}{{}BFj}{En{{f{c}}}{}}{En{{f{Bhc}}}{}}{Enb}{{{f{BFj}}{f{BFj}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BFj}}{f{BhG`}}}Gb}{cc{}}{{{f{BFj}}{f{Bhc}}}bABb}`{{}En}{ce{}{}}``{{{f{c}}}e{}{}}{c{{Gj{e}}}{}{}}0{{{f{c}}}Nn{}}``3````````````````````````````````{{{f{c}}h}b{}}000{{{f{BDn}}}{{Af{BCb}}}}`{{{f{BFl}}}{{f{{Dh{BFn}}}}}}{{{f{BDn}}c}{{Af{BCb}}}{{Ch{BCb}{{C`{{Af{BCb}}}}}}InJ`}}{{{f{Aj}}}Dl}{{{f{c}}}{{f{e}}}{}{}}0000000{{{f{Bhc}}}{{f{Bhe}}}{}{}}0000000{{{f{BFl}}}BFl}{{{f{Aj}}}Aj}{{{f{BDn}}}BDn}{{{f{BG`}}}BG`}{{{f{c}}{f{Bhe}}}b{}{}}000{{{f{c}}}b{}}0000;{{}BFl}{{}Aj}{En{{f{c}}}{}}00{{{f{BGb}}}{{f{c}}}{}}11111{En{{f{Bhc}}}{}}0000000`{{BGde}{}{}{{BGf{c}}}}{Enb}0000{{{f{BhBFl}}}b}111{{{f{BFl}}{f{BFl}}}d}{{{f{Aj}}{f{Aj}}}d}{{{f{c}}{f{e}}}d{}{}}00000`{{{f{BGh}}}Hh}{{{f{BFl}}}{{f{{Dh{Hh}}}}}}{{{f{BDn}}}{{Af{BCb}}}}{{{f{BhBFl}}}{{f{Bh{Fd{Hh}}}}}}{{{f{BFl}}{f{BhG`}}}Gb}{{{f{Aj}}{f{BhG`}}}Gb}{{{f{BDn}}{f{BhG`}}}Gb}{{{f{BG`}}{f{BhG`}}}Gb}0{{{f{Bf}}BG`}D`}{cc{}}000{{{Fd{BGj}}}BFl}{{{Fd{{H`{{Fd{Hh}}{Fd{BFn}}}}}}}BFl}{{{Fd{{Fd{BGj}}}}}BFl}33{BFlAj}44{g{{Gj{ic}}}{}{}{{Gl{c}{{B`{e}}}}}{}}{cBFl{{Gh{}{{B`{BGj}}}}}}{cBFl{{Hb{}{{B`{BGj}}}}}}{{{f{Aj}}En}BGh}{{{f{BDn}}}{{f{Aj}}}}{{{f{BhBDn}}}{{f{BhAj}}}}{{{f{Aj}}}Eb}{{{f{BGl}}dd}{{Af{Aj}}}}0{{{f{BDn}}}{{Af{BCb}}}}{{{f{BhAj}}}{{f{BhBFl}}}}{{}En}0000000{ce{}{}}0000000{AjBFl}1{BFlc{}}{{{f{BFl}}}c{}}301{{{f{BGh}}}d}{{{f{Aj}}}d}{{{f{BFl}}}d}{{{f{BFl}}}{{BH`{{BGn{{Jl{Hh}}}}{Jl{BFn}}}}}}{{{f{Aj}}}BHb}{{{f{BDn}}}{{Fd{Ad}}}}{{{f{BDn}}{An{{H`{JjEn}}}}}{{Fd{Ad}}}}={{{f{BGh}}}En}{{{f{Aj}}}En}?????{{{Fd{Hh}}{Fd{BFn}}d}BFl}{{{f{BCb}}{Fd{Ad}}Aj{An{{Fd{D`}}}}}BDn}{{{f{BhBHb}}}{{An{c}}}{}}{{{f{BhBHb}}En}{{An{c}}}{}}{{{f{BDn}}c}{{Af{BCb}}}{{Cb{BCb}{{C`{{Af{BCb}}}}}}InJ`}}{{{f{c}}}{}{}}{{{f{Aj}}}BGd}{{{f{BDn}}KhMl}{{Af{BCb}}}}{{BDne}BDn{{Lh{Bf}}}{{Gh{}{{B`{c}}}}}}{{{f{Aj}}JjEn}BGb}{{{f{BhBFl}}}b}{{{f{BhAj}}}b}{{{f{BDn}}Df}{{Af{BCb}}}}{{{f{BDn}}}{{Af{BCb}}}}{Aj{{Fd{Hh}}}}0{BDnAj}{{{f{BhBDn}}}Aj}{{{f{c}}}e{}{}}000{{{f{c}}}D`{}}{c{{Gj{e}}}{}{}}000000000000000{{{f{c}}}Nn{}}0000000{AjAj}{{{f{Aj}}}{{f{BFl}}}}{{{f{Aj}}}{{f{BHd}}}};{ce{}{}}0000000`````{{{f{BFl}}c}Ad{{Cb{{H`{Hh{f{BFn}}}}}{{C`{An}}}}InJ`}}{{{f{BFl}}c}Ad{{Cb{{H`{Hh{f{BFn}}}}}{{C`{}}}}InJ`}}{{{f{{Dh{{BHf{Hh}}}}}}c}Ad{{Cb{{BHf{Hh}}}{{C`{An}}}}InJ`}}{{{f{{Dh{{BHf{Hh}}}}}}c}Ad{{Cb{{BHf{Hh}}}{{C`{}}}}InJ`}}{{{f{{Dh{c}}}}eBHh}{{AJd{c}}}{BHjBHl}{{Bd{}{{B`{{H`{HhHh}}}}}}Hd}}{{{f{{Dh{c}}}}{f{Gn}}eBHh}{{AJd{c}}}{BHjBHl}{{Bd{}{{B`{{H`{HhHh}}}}}}Hd}}{{{f{{l{c}}}}HhHh}{{l{c}}}Bn}{{{f{BHd}}{f{{Dh{Fb}}}}}d}{{{f{BHn}}{f{Aj}}}Ad}{{BI`BI`}BI`}0`{{{f{BIb}}{f{BCb}}{f{Aj}}}{{Af{Ad}}}}{{{f{BIb}}}{{Af{{f{Bf}}}}}}```````````````````````{{{f{c}}h}b{}}00{{{f{BhBId}}Hf}{{An{b}}}}{{{f{BhBIf}}{f{Hf}}}b}0{{{f{c}}}{{f{e}}}{}{}}00{{{f{Bhc}}}{{f{Bhe}}}{}{}}00{{{f{BId}}}BId}{{{f{BIf}}}BIf}{{{f{BDl}}}BDl}{{{f{c}}{f{Bhe}}}b{}{}}00{{{f{c}}}b{}}00{{{f{{Dh{c}}}}}Dj{{B@f{Dj}}}}{{}BDl}{En{{f{c}}}{}}00{En{{f{Bhc}}}{}}00{Enb}00{{{f{BDl}}{f{BDl}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BDl}}{f{BhG`}}}Gb}{{{H`{{f{Dj}}En}}}BId}{cc{}}{{{H`{{f{Dj}}En}}}BIf}11{{eEn}BD`{{AOn{Dj}}}{{Bd{}{{B`{{Fd{{H`{D`c}}}}}}}}}}{{}En}00{ce{}{}}00{BIdAd}{BIfAd}{{{f{Dj}}En}BId}{{{f{Dj}}En}BIf}{{{Fd{Hf}}}BDl}{{{f{BhBId}}En}Ad}{{{f{BhBIf}}En}Ad}{{{f{{Dh{BDl}}}}{An{En}}}{{Af{BD`}}}}0{{{f{{Dh{BDl}}}}{An{En}}}{{Af{{Fd{Dj}}}}}}{{{f{c}}}e{}{}}00{c{{Gj{e}}}{}{}}00000{{{f{c}}}Nn{}}00<<<{{{f{{Dh{BCb}}}}}{{Af{BCb}}}}{{{f{{Dh{BCb}}}}d}{{Af{BCb}}}}`````{{IdId}Id}{{{f{{Dh{BCb}}}}{An{Nd}}}{{Af{{H`{{Fd{BAj}}Nd}}}}}}{{{f{{AJn{Jj}}}}Nd{f{Bh{Fd{Id}}}}}b}{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bhc}}}{{f{Bhe}}}{}{}}0{{}BIh}{En{{f{c}}}{}}0{En{{f{Bhc}}}{}}0{Enb}0{{{f{BIh}}}Id}{{{f{BIj}}{f{BhG`}}}Gb}{cc{}}0{{{f{BIj}}{f{Bhc}}}bABb}``{{}En}0{ce{}{}}0{{{f{Bh{BIl{BIjce}}}}HhId{f{BCb}}gi}b{}BIn{{Cb{}{{C`{c}}}}}{{Ch{{f{Bhc}}}}}}{c{{Gj{e}}}{}{}}000{{{f{c}}}Nn{}}0{{{f{BJ`}}Nd{f{Bh{Fd{Id}}}}}{{Af{b}}}}0{{{f{BJ`}}Nd{f{Bh{Dh{Id}}}}}{{Af{b}}}}055{{{f{BhBIh}}{f{{Dh{Df}}}}}b}{{{f{BhBIh}}Lf}b}{{{f{BhBIh}}Jj}b}{{{f{BhBIh}}M`}b}{{{f{BhBIh}}Id}b}```````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}0000000000{{{f{{Kn{ce}}}}}{{f{e}}}N`BJb}{{{f{{Kn{c}}}}}BJd{BJfN`}}{{{f{{Kn{ce}}}}}{}N`BJb}{{{f{{Kn{c}}}}}LfBJh}{{{f{{Kn{ce}}}}}{{f{c}}}N`BJb}{{{Kn{{BJj{c}}e}}}{{Kn{ce}}}{}BJb}{{{Kn{{Dh{{BJj{c}}}}e}}}{{Kn{{Dh{c}}e}}}{}BJb}{{{f{c}}}{{f{e}}}{}{}}0030000000000{{{f{Bhc}}}{{f{Bhe}}}{}{}}000000000000{{{f{ALl}}{f{ALl}}c}{{Af{ALl}}}ALn}{{{f{{Kn{c}}}}}{{An{{f{AJ`}}}}}{AJ`N`}}`{{{f{BJl}}{f{Ad}}}{{Af{Ad}}}}{{{f{BJl}}c}{{Af{Ad}}}Ab}{{{f{O`}}}O`}{{{f{BJn}}}BJn}{{{f{{Kn{ce}}}}}{{Kn{ce}}}N`{BJbA@h}}{{{f{Mn}}}Mn}{{{f{BFd}}}BFd}{{{f{B@`}}}B@`}{{{f{BDj}}}BDj}{{{f{Ml}}}Ml}{{{f{BK`}}}BK`}{{{f{BKb}}}BKb}{{{f{BKd}}}BKd}{{{f{c}}{f{Bhe}}}b{}{}}0000000000{{{f{c}}}b{}}00000000000000000{{{f{{Kn{ce}}}}{f{{Kn{ce}}}}}BAb{BKfN`}BJb}{AOde{}{{AKl{c}}AIl}}0{{AOdADf}e{}{{AKn{c}}AIl}}0{{{f{c}}{f{e}}}BAb{}{}}{{AKdBCf}AKd}{AKdAKd}{{{f{Gd}}{f{ADf}}}{{AB`{Gd}}}}{{{f{B@`}}}{{f{ADf}}}}```{{}b}{cbBJb}{{}{{Kn{BKh}}}}{{}{{Kn{c}}}BKj}{{}{{Kn{Bf}}}}{{}{{Kn{{Dh{c}}}}}{}}{{}Mn}{{}BFd}{{}B@`}{{}BDj}{{}Ml}`{En{{f{c}}}{}}000{{{f{{Kn{ce}}}}}{{f{c}}}N`BJb}111111111{En{{f{Bhc}}}{}}000000000000{{{f{{Kn{c}}}}}{{f{Bf}}}{AJ`N`}}`{{{Kn{ADhc}}}{{Gj{{Kn{ec}}{Kn{ADhc}}}}}BJb{ADhInJ`}}{{{Kn{ADhc}}}{{Kn{ec}}}BJb{ADhInJ`}}{{{f{{Kn{ce}}}}}{{BKl{ce}}}N`{A@hBJb}}{Enb}00{{{f{Bh{Kn{ce}}}}}bN`BJb}1111111111{{{f{O`}}{f{O`}}}d}{{{f{{Kn{Gd}}}}{f{Gd}}}d}{{{f{{Kn{BKn}}}}{f{BKn}}}d}{{{f{{Kn{ce}}}}{f{{Kn{ce}}}}}d{BL`N`}BJb}{{{f{Mn}}{f{Mn}}}d}{{{f{BFd}}{f{BFd}}}d}{{{f{B@`}}{f{B@`}}}d}{{{f{BDj}}{f{BDj}}}d}{{{f{Ml}}{f{Ml}}}d}{{{f{BKd}}{f{BKd}}}d}{{{f{c}}{f{e}}}d{}{}}00000000000000000000{BJn{{H`{M`M`}}}}`{{BDjc}BDj{{Cb{En{f{B@`}}}{{C`{d}}}}}}{{ALn{f{AOh}}{f{AOh}}}{{Af{AOh}}}}{{{f{Bh{Kn{ACl}}}}}{{Gj{bBLb}}}}{{{f{AKd}}{f{BhG`}}}{{Gj{bAOj}}}}0{{{f{O`}}{f{BhG`}}}{{Gj{bAOj}}}}{{{f{BJn}}{f{BhG`}}}{{Gj{bAOj}}}}{{{f{{Kn{ce}}}}{f{BhG`}}}{{Gj{bAOj}}}{ADjN`}BJb}{{{f{{Kn{ce}}}}{f{BhG`}}}{{Gj{bAOj}}}N`BJb}{{{f{{Kn{ce}}}}{f{BhG`}}}{{Gj{bAOj}}}{BCjN`}BJb}{{{f{Mn}}{f{BhG`}}}Gb}{{{f{BFd}}{f{BhG`}}}Gb}{{{f{B@`}}{f{BhG`}}}{{Gj{bAOj}}}}{{{f{BDj}}{f{BhG`}}}{{Gj{bAOj}}}}{{{f{Ml}}{f{BhG`}}}{{Gj{bAOj}}}}{{{f{BK`}}{f{BhG`}}}{{Gj{bAOj}}}}{{{f{BKb}}{f{BhG`}}}{{Gj{bAOj}}}}{{{f{BKd}}{f{BhG`}}}{{Gj{bAOj}}}}`{BLdAKd}{BLfAKd}{BLhAKd}{BLbAKd}{cc{}}0{M`O`}1{BLj{{Kn{BLl}}}}{c{{Kn{c}}}{}}{{{Kn{Bf}}}{{Kn{{Dh{Df}}}}}}{{{Fd{ce}}}{{Kn{{Dh{c}}e}}}{}{BJbA@h}}5{BLnc{}}{{{f{BM`}}}{{Kn{BM`}}}}{{{AB`{ce}}}{{Kn{ce}}}N`BJb}{D`{{Kn{Bf}}}}{BMb{{Kn{BM`}}}}{{{f{Bf}}}{{Kn{Bf}}}}{BMd{{Kn{BKh}}}}{{{f{{Dh{c}}}}}{{Kn{{Dh{c}}}}}A@h}{{{AKf{c}}}{{Kn{c}}}{BMfN`}}{{{BHf{c}}}{{Kn{{Dh{c}}}}}{}}{{{f{BKh}}}{{Kn{BKh}}}}{{{f{BLl}}}{{Kn{BLl}}}}{cc{}}000{{{Fd{B@`}}}BDj}11111{{c{An{Gn}}}BMh{}}{{{BMj{Jj}}{BMj{Df}}{An{Gn}}}BMl}{{{BMj{Jj}}{BMj{Df}}{An{Gn}}}BMn}{g{{Gj{ic}}}{}{}{{Gl{c}{{B`{e}}}}}{}}{e{{Kn{{Dh{c}}}}}{}{{Gh{}{{B`{c}}}}}}{{gEn}{{BN`{Jj}}}Lh{{Gh{}{{B`{{An{c}}}}}}}{{Gh{}{{B`{{An{e}}}}}}}}0{e{{BN`{Jj}}}{{Gh{}{{B`{{An{d}}}}}}}{{Gh{}{{B`{{An{c}}}}}}}}{{gADf}{{BN`{Jj}}}BHl{{Gh{}{{B`{{An{c}}}}}}}{{Gh{}{{B`{{An{e}}}}}}}}2{e{{Kn{{Dh{c}}}}}In{{Hb{}{{B`{c}}}}}}{{}{{Kn{c}}}N`}{c{{Kn{ec}}}BJbN`}{{{f{Bf}}}{{Gj{BNb}}}}{{{f{Bf}}c}BNd{}}{{{f{{Kn{ce}}}}{f{{Kn{ce}}}}}d{BNfN`}BJb}{{{f{Bh{Kn{ce}}}}}{{An{{f{Bhc}}}}}N`BJb}{{{f{Bh{Kn{ce}}}}}{{f{Bhc}}}N`BJb}{{{f{BDj}}}{{Fd{{f{Bf}}}}}}{{{f{BDj}}}{{Fd{{H`{{f{Bf}}c}}}}}{}}{{{f{Fb}}En}Hf}5{{{f{{Kn{ce}}}}{f{Bhg}}}b{BNhN`}BJbABb}{{{f{BFd}}{f{Bhc}}}bABb}{{{f{B@`}}{f{Bhc}}}bABb}{{{f{Ml}}{f{Bhc}}}bABb}{{{f{BKd}}{f{Bhc}}}bABb}{{{f{O`}}}M`}{{}b}{cb{A@hBJb}}{{{f{BDj}}{f{Bf}}}{{An{En}}}}{{{f{{Dh{M`}}}}}{{`{{Bd{}{{B`{En}}}}}}}}{{}En}000000000000`{{{f{BhBJn}}}{{f{BhId}}}}`{ce{}{}}000000000000{{{Kn{ce}}}{{An{c}}}{}BJb}{{{Kn{ce}}}{}N`BJb}{{{Kn{ce}}}{{H`{e}}}N`BJb}{{{Kn{BNj}}}Ad}{{{f{BDj}}}d}{{{f{BJn}}}d}{{{f{O`}}}d}`{{{f{{Kn{ACl}}}}}d}{{{f{c}}}d{}}1{{{f{{Kn{ce}}}}{f{{Kn{ce}}}}}d{BNfN`}BJb}{{{f{BDj}}}En}`1{{{f{ALl}}{f{ALl}}}{{Af{{H`{ALlALl}}}}}}{{DlDl}{{Af{{H`{DlDl}}}}}}{{{f{Bh{Kn{ce}}}}}{{f{Bhc}}}{BNlN`}{BJbA@h}}{{{f{BNn}}}Kf}0{{{f{BO`}}}Kf}```11`{{{f{{Kn{ce}}}}{f{{Kn{ce}}}}}d{BL`N`}BJb}{{BObEn}{{An{En}}}}{{{f{Bf}}c}BOd{}}{c{{Kn{c}}}{}}{{cADfd}B@`{{AOn{D`}}}}{e{{Kn{c}}}{}{{Ob{{f{{BKl{c}}}}}{{C`{c}}}}}}{{ce}{{Kn{ce}}}{}BJb}{{}{{Kn{{BJj{c}}}}}{}}{c{{Kn{{BJj{e}}c}}}BJb{}}{En{{Kn{{Dh{{BJj{c}}}}}}}{}}{{Enc}{{Kn{{Dh{{BJj{e}}}}c}}}BJb{}}3210`{{}O`}{{}BJn}{{{f{{Kn{ce}}}}{f{{Kn{ce}}}}}{{An{BAb}}}{BNfN`}BJb}{c{{BOf{{Kn{c}}}}}{}}{{ce}{{BOf{{Kn{ce}}}}}{}BJb}`````{{{f{BNn}}}Kf}0{{{f{{Kn{c}}}}{f{BhBOh}}}b{AJ`N`}}{{{f{{Kn{ce}}}}{f{{Kn{ce}}}}}dN`BJb}{{{f{BO`}}KhMl}{{Af{Kf}}}}{{{f{Bh{Kn{ACl}}}}{f{Bh{Dh{Df}}}}}{{Gj{EnBLb}}}}{{{f{Bh{Kn{ACl}}}}BOj}{{Gj{bBLb}}}}{{{f{Bh{Kn{ACl}}}}{f{Bh{Fd{Df}}}}}{{Gj{EnBLb}}}}{{{f{Bh{Kn{ACl}}}}{f{BhD`}}}{{Gj{EnBLb}}}}{{{f{Bh{Kn{ACl}}}}{f{Bh{Dh{BOl}}}}}{{Gj{EnBLb}}}}`{{{f{Bh{Kn{ACl}}}}BOn}{{Gj{IdBLb}}}}`{{{f{AJh}}EnEn}AJh}0{{{f{{Kn{c}}}}}{{An{{f{AJ`}}}}}{AJ`N`}}{{{f{C@`}}Df}Kf}{{M`M`}BJn}`{{{f{{Kn{ce}}}}}EnN`BJb}>>{{{f{O`}}}{{An{M`}}}}{{{f{c}}}e{}{}}0000000000{{{f{c}}}D`{}}0{AOd{{Gj{eg}}}{}{{AKl{c}}AIl}{}}0{{AOdADf}{{Gj{eg}}}{}{{AKn{c}}AIl}{}}0{c{{Gj{e}}}{}{}}00{{{Kn{{Dh{c}}e}}}{{Gj{{Kn{{BHf{c}}e}}}}}{}BJb}11111111111111111111111{{BObEn}{{Gj{EnAKd}}}}{c{{Gj{{Kn{c}}C@b}}}{}}{{ce}{{Gj{{Kn{ce}}C@b}}}{}BJb}{{}{{Gj{{Kn{{BJj{c}}}}C@b}}}{}}{c{{Gj{{Kn{{BJj{e}}c}}C@b}}}BJb{}}10{c{{Gj{{BOf{{Kn{c}}}}C@b}}}{}}{{ce}{{Gj{{BOf{{Kn{ce}}}}C@b}}}{}BJb}{{{f{BDj}}{f{{Dh{En}}}}}{{Gj{BDjAKd}}}}{{{Kn{ce}}}{{Gj{c{Kn{ce}}}}}{}BJb}{{{f{c}}}Nn{}}000000000000{{{Kn{ce}}}cA@hBJb}`{{{f{C@`}}Df}Kf}{ce{}{}}000000000000{{{f{{Kn{ce}}}}}EnN`BJb}``{{B@`{C@d{D`D`}}}B@`}{{BDj{C@d{D`D`}}}BDj}{{{f{Bh{Kn{ACl}}}}{f{{Dh{Df}}}}}{{Gj{EnBLb}}}}{{{f{Bh{Kn{ACl}}}}{f{{Dh{C@f}}}}}{{Gj{EnBLb}}}}```````{{c{An{Gn}}}BMh{}}{{{BMj{Jj}}{BMj{Df}}{An{Gn}}}BMl}{{{BMj{Jj}}{BMj{Df}}{An{Gn}}}BMn}`{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{En{{f{c}}}{}}{En{{f{Bhc}}}{}}{Enb}{{C@h{An{{f{ADf}}}}}{{Gj{{BN`{Jj}}AKd}}}}{cc{}}{{}En}{ce{}{}}{{{f{C@h}}}d}{EnC@h}{{{f{C@h}}}{{f{{Dh{Jj}}}}}}{{{f{BhC@h}}{f{Gd}}}b}{{{f{BhC@h}}}b}{{{f{BhC@h}}{f{{Dh{{AB`{Gd}}}}}}}b}1{{{f{BhC@h}}{An{{f{Gd}}}}}b}{C@h{{C@j{Jj}}}}{c{{Gj{e}}}{}{}}0{{{f{c}}}Nn{}}:`{{{f{c}}h}b{}}{{{f{C@l}}}{{f{ADh}}}}{{{f{BhC@l}}}{{AB`{Gd}}}}{{{f{BhC@l}}}{{f{BhADh}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{C@l}}}C@l}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}{{{f{C@l}}}{{f{ADf}}}}{{}C@l}{En{{f{c}}}{}}{En{{f{Bhc}}}{}}{Enb}{{{f{BhC@l}}En}b}{{{f{C@l}}{f{BhG`}}}{{Gj{bAOj}}}}{cc{}}{{}En}{ce{}{}}{{{f{C@l}}}En}{EnC@l}{{{f{BhC@l}}}b}70{{{f{c}}}e{}{}}{c{{Gj{e}}}{}{}}0{{{f{c}}}Nn{}}{{{f{C@l}}}{{An{{f{C@n}}}}}}7```````{{{f{AJh}}EnEn}AJh}0`{{}b}0{{}d}``{{eEnEn}{{CA`{Jj}}}{{Lh{Bf}}}{{Bd{}{{B`{c}}}}}}{{eEnEn}{{AJn{Jj}}}{{Lh{{Dh{Df}}}}}{{Bd{}{{B`{c}}}}}}{Idb}`{{{f{c}}h}b{}}{{{f{Kf}}}Hf}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{Kf}}}Kf}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}{En{{f{c}}}{}}{En{{f{Bhc}}}{}}{Enb}{{{f{Kf}}}{{f{Dj}}}}{cc{}}{{}En}{ce{}{}}{{Kf{f{Bf}}}Ad}{{DjHf}Kf}`{{{f{c}}}e{}{}}{c{{Gj{e}}}{}{}}0{{{f{c}}}Nn{}}{{{f{BhKf}}Hf}b}{{{f{Kf}}}{{f{Hf}}}}7{{{An{Kh}}Dj}Kf}``````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{BD`}}}BD`}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}{{{f{BD`}}{f{Bf}}}d}{{}BD`}{En{{f{c}}}{}}{En{{f{Bhc}}}{}}{Enb}{{{f{c}}{f{c}}}{{Af{b}}}CAb}{{{f{BD`}}{f{BD`}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BD`}}{f{BhG`}}}Gb}{BDjBD`}{{{f{CAd}}}BD`}{CAdBD`}{cc{}}{{{f{BDj}}}BD`}{{{f{BDl}}}BD`}{{{f{{Dh{Ad}}}}}BD`}{g{{Gj{ic}}}{}{}{{Gl{c}{{B`{e}}}}}{}}{eBD`{{AOn{Mf}}}{{Gh{}{{B`{c}}}}}}{{{f{BD`}}{f{Bf}}}{{An{{f{Dj}}}}}}{{{f{BD`}}En}{{An{{H`{{f{B@h}}{f{Dj}}}}}}}}{{{f{BhBD`}}En}{{An{{H`{{f{BhB@h}}{f{BhDj}}}}}}}}{{{f{BD`}}{f{Bf}}}{{An{Mf}}}}{{{f{BD`}}{f{Bf}}}{{An{{H`{En{f{B@h}}{f{Dj}}}}}}}}{{{f{CAf}}}{{Fd{{f{Bf}}}}}}{{{f{BD`}}}{{Fd{{f{Bf}}}}}}{{{f{{CAb{}{{CAh{c}}}}}}}{{Fd{{H`{{f{Bf}}c}}}}}{ADjBL`}}{{{f{BD`}}}{{Fd{{H`{{f{Bf}}c}}}}}{}}{{{f{BD`}}{f{Bhc}}}bABb}{{{f{CAf}}{f{Bf}}}{{An{En}}}}{{{f{BD`}}{f{Bf}}}{{An{En}}}}{{}En}{{{f{BhBD`}}EnB@hDj}{{Af{{An{Dj}}}}}}{ce{}{}}{BD`c{}}{{{f{BD`}}}d}{{{f{BD`}}}{{`{{Bd{}{{B`{{H`{{f{B@h}}{f{Dj}}}}}}}}}}}}{{{f{BD`}}}{{`{{Jb{}{{B`{{f{Dj}}}}}}}}}}{{{f{BhBD`}}}{{`{{Jb{}{{B`{{f{BhDj}}}}}}}}}}{{{f{BD`}}}{{`{{Jb{}{{B`{Mf}}}}}}}}{{{f{BD`}}}{{`{{Jb{}{{B`{{f{B@h}}}}}}}}}}{{{f{BD`}}}En}{{{f{BhBD`}}BD`}b}{{{f{BhBD`}}{f{BD`}}}b}{{}BD`}{{{f{BD`}}EnB@hDj}{{Af{BD`}}}}{{{f{BhBD`}}{f{Bf}}}{{An{Dj}}}}{{{f{BhBD`}}{f{Bf}}B@h}{{An{B@h}}}}{{{f{BhBD`}}En}b}{{{f{BhBD`}}{f{Bf}}Dj}{{An{Dj}}}}{{{f{BhBD`}}EnDj}{{An{Dj}}}}4{{{f{BhBD`}}En}{{An{{H`{B@hDj}}}}}}{{{f{BD`}}AMh}BDj}{{{f{c}}}e{}{}}{{{f{BhBD`}}{f{BD`}}}{{Af{d}}}}{c{{Gj{e}}}{}{}}{{{f{BD`}}{f{Bf}}}{{Af{{f{Dj}}}}}}{{{f{BD`}}En}{{Af{{H`{{f{B@h}}{f{Dj}}}}}}}}{{{f{BD`}}{f{Bf}}}{{Af{Mf}}}}{{{f{BD`}}{f{Bf}}}{{Af{{H`{En{f{B@h}}{f{Dj}}}}}}}}{{{f{BhBD`}}{f{Bf}}}{{Af{{f{BhDj}}}}}}{{{f{CAf}}{f{Bf}}}{{Af{En}}}}6{{{f{c}}}Nn{}}{ce{}{}}{EnBD`}{{{f{BhBD`}}B@hDj}{{An{Dj}}}}`````````````````{{{f{c}}h}b{}}0{{{f{Bf}}{Fd{Fb}}{f{ADf}}}{{Af{Ad}}}}{{{f{Bf}}{Fd{Fb}}{f{ADf}}{An{{f{CAj}}}}}{{Af{Ad}}}}{{{f{Ad}}{f{Ad}}}c{}}{{{f{Ad}}c}e{A`Kd}{}}{{Adc}e{A`Kd}{}}{{AdAd}c{}}`{{{f{BhAd}}{f{Ad}}}{{Af{{f{BhAd}}}}}}{{{f{BNj}}E`}Eb}0{{{f{BNj}}}{{Af{Eb}}}}0`{{{f{Ad}}En}{{f{Fb}}}}{{{f{BNj}}}{{f{ADh}}}}{{{f{BhBNj}}}{{f{BhADh}}}}0{{{f{Ad}}}Dl}{{{f{BhBNj}}}{{f{Bh{l{c}}}}}Bn}{{{f{BNj}}}{{f{{l{c}}}}}Bn}{{{f{Ad}}}{{f{BNj}}}}{{{f{BhBNj}}}{{Af{En}}}}0{{{f{BhAd}}}{{Af{En}}}}{{{f{Ad}}}{{Af{{f{Ef}}}}}}{{{f{Ad}}}{{Af{{f{AK`}}}}}}{{{f{BNj}}{f{Ad}}}{{Af{Ad}}}}00000{{{f{Ad}}}{{Af{{f{Fj}}}}}}{{{f{c}}}{{f{e}}}{}{}}000{{{f{Bhc}}}{{f{Bhe}}}{}{}}000{{{f{BNj}}{f{Dj}}Ej}{{Af{Ad}}}}{{{f{Ad}}{f{Dj}}}{{Af{Ad}}}}0{{{f{Ad}}{f{Dj}}Ej}{{Af{Ad}}}}{{{f{Ad}}}{{Af{{f{ALl}}}}}}77{{{f{Ad}}{f{Ad}}}{{Af{Ad}}}}{{{f{Ad}}c}{{Af{Ad}}}Ab}{{{f{BNj}}}F`}{{{f{Ad}}}{{`{{Bd{}{{B`{En}}}}}}}}{{{f{BNj}}}{{f{{Fd{Fb}}}}}}{{{f{BhBNj}}}{{f{Bh{Fd{Fb}}}}}}{{{f{BhAd}}}{{f{Bh{Fd{Fb}}}}}}{{{f{Ad}}}Ad}{{{f{Jf}}}Jf}1{{{f{BNj}}}{{Kn{BNj}}}}{{{f{c}}{f{Bhe}}}b{}{}}0{{{f{c}}}b{}}00{{{f{BhAd}}}b}{{{f{Ad}}}{{Af{{f{Il}}}}}}{{}Ad}{En{{f{c}}}{}}000{{{f{Ad}}}{{f{c}}}{}}{En{{f{Bhc}}}{}}000{{AdAd}c{}}{{Adc}e{A`Kd}{}}{{{f{Ad}}c}e{A`Kd}{}}{{{f{Ad}}{f{Ad}}}c{}}{{{f{Ad}}{f{Ad}}}{{Af{Kh}}}}{Enb}000{{{f{BNj}}}Ad}0{{{f{BNj}}}{{f{Dj}}}}0{{{f{Jf}}{f{Jf}}}d}{{{f{Ad}}{f{Ad}}}d}{{{f{Ad}}{f{Ad}}}{{Af{Fj}}}}{{{f{Ad}}c}{{Af{Fj}}}AOl}{{{f{Ad}}{f{Bf}}}{{Af{Fj}}}}2{{{f{Ad}}{f{Bf}}}c{}}{{{f{Ad}}c}eAOl{}}55{{{f{c}}{f{e}}}d{}{}}00{{{f{Ad}}}En}{{{f{Ad}}}{{Af{Ad}}}}{{{f{BhAd}}{f{Ad}}}{{Af{{f{BhAd}}}}}}{{{f{Ad}}HfEn}{{Af{Ad}}}}{{{f{Ad}}}{{Af{{f{AKh}}}}}}{{{f{Ad}}}{{Af{{f{AKj}}}}}}{{{f{BNj}}}{{AKf{Mf}}}}0{{{f{Ad}}AFj}{{Af{Ad}}}}{{{f{BNj}}{f{Fj}}}{{Af{Ad}}}}{{{f{Jf}}{f{BhG`}}}Gb}{{{f{Ad}}{f{BhG`}}}Gb}0{{{f{Ad}}}D`}{cc{}}00{{{l{c}}}AdBn}1{{{f{Bf}}{f{{Dh{Hf}}}}d}{{Af{Ad}}}}{{{f{Bf}}{f{{Dh{Hf}}}}{f{Dj}}d}{{Af{Ad}}}}{{{f{Bf}}Fb}{{Af{Ad}}}}{{{f{Bf}}{Fd{Fb}}}{{Af{Ad}}}}{{{f{Bf}}{Fd{Fb}}{f{Dj}}}Ad}{g{{Gj{ic}}}{}{}{{Gl{c}{{B`{e}}}}}{}}{cAd{{Gh{}{{B`{d}}}}}}{cAd{{Gh{}{{B`{{An{M`}}}}}}}}{cAd{{Gh{}{{B`{Jj}}}}}}{cAd{{Gh{}{{B`{{An{Jj}}}}}}}}{cAd{{Gh{}{{B`{{An{Ib}}}}}}}}{cAd{{Gh{}{{B`{{f{Lf}}}}}}}}{cAd{{Gh{}{{B`{Ib}}}}}}{cAd{{Gh{}{{B`{Lf}}}}}}{cAd{{Gh{}{{B`{{f{Ib}}}}}}}}{cAd{{Gh{}{{B`{{An{Lf}}}}}}}}{cAd{{Gh{}{{B`{D`}}}}}}{cAd{{Gh{}{{B`{{f{Bf}}}}}}}}{cAd{{Gh{}{{B`{{f{d}}}}}}}}{cAd{{Gh{}{{B`{{f{Id}}}}}}}}{cAd{{Gh{}{{B`{Id}}}}}}{cAd{{Gh{}{{B`{{An{Id}}}}}}}}{cAd{{Gh{}{{B`{{f{M`}}}}}}}}{cAd{{Gh{}{{B`{{An{Kh}}}}}}}}{cAd{{Gh{}{{B`{Kh}}}}}}{cAd{{Gh{}{{B`{{f{Kh}}}}}}}}{cAd{{Gh{}{{B`{M`}}}}}}{cAd{{Gh{}{{B`{{An{d}}}}}}}}{cAd{{Gh{}{{B`{{f{Jj}}}}}}}}{{{f{Bf}}{Fd{Ib}}}Ad}{{{f{Bf}}{Fd{Lf}}}Ad}{{{f{Bf}}{Fd{Jj}}}Ad}{{{f{Bf}}{Fd{Md}}}Ad}{{{f{Bf}}{Fd{M`}}}Ad}{{{f{Bf}}{Fd{Kh}}}Ad}{{{f{Bf}}{Fd{Id}}}Ad}{{{f{Bf}}En{f{Dj}}}Ad}{{{f{Ad}}EnEn}Ad}{{{f{BNj}}En}{{Af{Hf}}}}{{{f{Ad}}}En}{{{f{Ad}}}Hj}{{{f{Ad}}}Ad}{{{f{BNj}}}{{An{{Lb{L`}}}}}}0{{{f{BNj}}En}{{An{{f{Hn}}}}}}0{{{f{BNj}}EnEn}{{An{{f{Hn}}}}}}0{{{f{BNj}}En}Hf}0{{{f{Ad}}c}{{Af{Fj}}}AOl}{{{f{Ad}}{f{Ad}}}{{Af{Fj}}}}{{{f{Ad}}{f{Bf}}}{{Af{Fj}}}}12{{{f{Ad}}{f{Bf}}}c{}}{{{f{BNj}}}d}{{{f{Jf}}{f{Bhc}}}bABb}{{{f{Ad}}{An{En}}}Ad}{{{f{Ad}}}{{Af{{f{BAn}}}}}}{{{f{Ad}}}{{Af{{f{BB`}}}}}}{{{f{Ad}}}{{Af{{f{BBb}}}}}}{{{f{Ad}}}{{Af{{f{BAl}}}}}}{{{f{Ad}}}{{Af{{f{Eb}}}}}}`{{{f{Ad}}}{{Af{Dl}}}}{{}En}000{ce{}{}}000{AdBCb}1{BDbAd}{AdAd}=={{{f{Ad}}}{{Af{Fj}}}}000{{{f{BNj}}}Fj}0{{}d}00{{{f{Ad}}}Jf}{{{f{Ad}}}CAl}{{{f{Ad}}}{{`{{Bd{}{{B`{Ad}}}}}}}}{{{f{BNj}}}En}{{{f{Ad}}}En}{{{f{BNj}}En}Ad}0{{{f{Ad}}}{{Af{{f{Dl}}}}}}{{{f{Ad}}{f{Bf}}}c{}}{{{f{Ad}}{f{Ad}}}{{Af{Fj}}}}{{{f{Ad}}c}{{Af{Fj}}}AOl}102{{{f{Ad}}}{{Af{{An{c}}}}}Kd}{{{f{BNj}}}{{Af{Kf}}}}0{{{f{BNj}}}{{An{Kh}}}}0{{{f{Ad}}}Kf}1122322{{{f{Ad}}{f{Ad}}}c{}}{{Adc}e{A`Kd}{}}{{{f{Ad}}c}e{A`Kd}{}}{{AdAd}c{}}>>={{{f{BNj}}}{{Af{En}}}}0{{{f{BNj}}}{{f{Bf}}}}{{{f{Bf}}c}Ad{{Lh{{Dh{{An{{Fd{Df}}}}}}}}}}{{{f{Bf}}c}Ad{{Lh{{Dh{{An{{AKf{{Dh{Df}}}}}}}}}}}}{{{f{Bf}}c}Ad{{Lh{{Dh{{f{{Dh{Df}}}}}}}}}}{{{f{Bf}}c}Ad{{Lh{{Dh{Id}}}}}}{{{f{Bf}}c}Ad{{Lh{{Dh{Lf}}}}}}{{{f{Bf}}c}Ad{{Lh{{Dh{{An{{AKf{Bf}}}}}}}}}}{{{f{Bf}}c}Ad{{Lh{{Dh{M`}}}}}}{{{f{Bf}}c}Ad{{Lh{{Dh{d}}}}}}{{{f{Bf}}c}Ad{{Lh{{Dh{Jj}}}}}}{{{f{Bf}}c}Ad{{Lh{{Dh{Hf}}}}}}{{{f{Bf}}c}Ad{{Lh{{Dh{Md}}}}}}{{{f{Bf}}c}Ad{{Lh{{Dh{{AKf{Bf}}}}}}}}{{{f{Bf}}c}Ad{{Lh{{Dh{Ib}}}}}}{{{f{Bf}}c}Ad{{Lh{{Dh{Kh}}}}}}{{{f{Bf}}c}Ad{{Lh{{Dh{{An{{f{Bf}}}}}}}}}}{{{f{Bf}}c}Ad{{Lh{{Dh{{An{D`}}}}}}}}{{{f{Bf}}c}Ad{{Lh{{Dh{D`}}}}}}{{{f{Bf}}c}Ad{{Lh{{Dh{{An{{f{{Dh{Df}}}}}}}}}}}}{{{f{Bf}}c}Ad{{Lh{{Dh{{An{d}}}}}}}}{{{f{Bf}}{f{Ad}}}Ad}{{{f{Bf}}c}Ad{{Lh{{Dh{{An{M`}}}}}}}}{{{f{Bf}}c}Ad{{Lh{{Dh{{An{Id}}}}}}}}{{{f{Bf}}c}Ad{{Lh{{Dh{{An{Lf}}}}}}}}{{{f{Bf}}c}Ad{{Lh{{Dh{{An{Jj}}}}}}}}{{{f{Bf}}c}Ad{{Lh{{Dh{{Fd{Df}}}}}}}}{{{f{Bf}}c}Ad{{Lh{{Dh{{f{Bf}}}}}}}}{{{f{Bf}}c}Ad{{Lh{{Dh{{An{Md}}}}}}}}{{{f{Bf}}c}Ad{{Lh{{Dh{{An{Ad}}}}}}}}{{{f{Bf}}c}Ad{{Lh{{Dh{Ad}}}}}}{{{f{Bf}}c}Ad{{Lh{{Dh{{An{Ib}}}}}}}}{{{f{Bf}}c}Ad{{Lh{{Dh{{AKf{{Dh{Df}}}}}}}}}}{{{f{Bf}}c}Ad{{Lh{{Dh{{An{Kh}}}}}}}}{{{f{Bf}}{Lj{M`}}}Ad}{{{f{Bf}}{Lj{Jj}}}Ad}{{{f{Bf}}{Lj{Id}}}Ad}{{{f{Bf}}{Lj{Lf}}}Ad}{{{f{Bf}}c}AdBDb}{{{f{Bf}}{f{Dj}}}Ad}{{{f{BNj}}EnEn}Ad}{{{f{Bf}}En}Ad}{{{f{BhCAl}}}{{An{c}}}{}}{{{f{Ad}}{f{Ad}}}{{Af{Fj}}}}{{{f{Ad}}c}{{Af{Fj}}}AOl}{{{f{Ad}}{f{Bf}}}{{Af{Fj}}}}{{{f{Ad}}c}eAOl{}}3{{{f{Ad}}{f{Bf}}}c{}}{{{f{Ad}}}{{Af{{f{`}}}}}}{{{f{BNj}}}En}`{{{f{Ad}}}CAn}{{{f{Ad}}}{{Af{Kf}}}}{{{f{BNj}}KhMl}{{Af{Kf}}}}0{{{f{BNj}}}Ad}{{Adc}e{A`Kd}{}}{{{f{Ad}}c}e{A`Kd}{}}{{{f{Ad}}{f{Ad}}}c{}}{{{f{BhBNj}}{f{Bf}}}b}{{{f{BhAd}}{f{Bf}}}{{f{BhAd}}}}{{{f{Ad}}{f{{Dh{Jj}}}}}{{Af{Ad}}}}6{JfJf}{{{f{BNj}}{f{Cb}}Mn}{{Af{Ad}}}}0{{{f{Ad}}Khdd{An{Id}}}{{Af{Ad}}}}{{{f{Ad}}Endd{An{Id}}}{{Af{Ad}}}}{{{f{Ad}}En}Ad}{{{f{BhAd}}Jf}b}{{{f{BNj}}Jj}Ad}{{{f{BhBNj}}}b}0{{{f{BhAd}}}b}{{{f{Ad}}{An{Id}}}Ad}{{{f{CAl}}}{{H`{En{An{En}}}}}}{{{f{BNj}}JjEn}Ad}{{{f{Ad}}JjEn}Ad}{{{f{Ad}}E`}{{Af{Ad}}}}{{{f{BNj}}E`}{{Af{Ad}}}}0{{{f{BNj}}Jj}{{H`{AdAd}}}}{{{f{Ad}}Jj}{{H`{AdAd}}}}{{{f{BNj}}Df}{{An{Kh}}}}0{{{f{BNj}}Df}{{Af{Kf}}}}0{{{f{Ad}}}{{Af{{f{Cn}}}}}}{{{f{Ad}}En}{{Af{{AKf{Bf}}}}}}{{{f{Ad}}{f{Dj}}}{{Af{Ad}}}}{{{f{Ad}}c}e{A`Kd}{}}{{Adc}e{A`Kd}{}}{{{f{Ad}}{f{Ad}}}c{}}{{AdAd}c{}}{{{f{Ad}}}{{Af{c}}}Kd}{{{f{BNj}}}{{Af{Kf}}}}0{{{f{Ad}}}{{Af{Kf}}}}{{{f{Ad}}{An{En}}}Ad}{{{f{BNj}}{f{Eb}}}{{Af{Ad}}}}{{{f{BNj}}{f{{Dh{Hh}}}}}{{Af{Ad}}}}{{{f{BNj}}{f{{Dh{Hh}}}}}Ad}{{{f{BNj}}{f{Eb}}}Ad}{{{f{Ad}}{f{{Dh{Hh}}}}}Ad}{{{f{Ad}}EnAMh}Fb}{{{f{Ad}}}{{Af{Ad}}}}{{{f{c}}}e{}{}}0{{{f{Ad}}}{{AKf{Ad}}}}{{{f{c}}}D`{}}{{AdAd}{{Af{Ad}}}}{c{{Gj{e}}}{}{}}00{{{H`{{f{B@`}}Fb}}}{{Af{Ad}}}}{{{H`{{f{B@`}}{Fd{Fb}}}}}{{Af{Ad}}}}2{{{H`{{f{Bf}}Fb}}}{{Af{Ad}}}}{{{H`{{f{Bf}}{Fd{Fb}}}}}{{Af{Ad}}}}44445{{{f{BhAd}}{If{c}}}dBn}6{{{f{c}}}Nn{}}000{{{f{Ad}}}{{Af{{f{BAh}}}}}}{{{f{Ad}}}{{Af{{f{AOh}}}}}}{{{f{Ad}}}{{Af{{f{BAj}}}}}}{{{f{Ad}}}{{Af{{f{BAf}}}}}}{{{f{BNj}}}{{Af{Ad}}}}0{{{f{Ad}}}{{Af{Ad}}}}{{{f{BNj}}}{{Af{{f{{l{c}}}}}}}Bn}{{{f{BNj}}Df}{{An{Kh}}}}0{{{f{BNj}}Df}{{Af{Kf}}}}0{ce{}{}}000{{Ad{f{Bf}}}Ad}{{{f{Ad}}c}Ad{A`Kd}}{{{f{Ad}}{f{Fj}}{f{Ad}}}{{Af{Ad}}}}``{{{f{c}}h}b{}}{{{f{Cf}}}{{f{Ad}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{Cf}}}Cf}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}{{{f{Cf}}}Ad}{En{{f{c}}}{}}{En{{f{Bhc}}}{}}{Enb}{cc{}}{{}En}{ce{}{}}{{{CB`{Ad}}}Cf}{{{f{BhCf}}{f{BhFb}}}b}{{{f{c}}}e{}{}}{c{{Gj{e}}}{}{}}0{{{f{c}}}Nn{}}5{{{f{BhCf}}{f{BhFb}}e}c{}{{Cb{{f{Cf}}}{{C`{c}}}}}}````{{{CBb{}{{C`{c}}}}{f{Ad}}}c{}}{{{f{CBd}}{f{Ad}}}{{Af{Ad}}}}{{{f{{l{Ah}}}}{f{Ad}}}{{Af{Ad}}}}0`2100210021002100``{{{f{BJl}}{f{Ad}}}{{Af{Ad}}}}{{{f{{l{El}}}}{f{Ad}}}{{Af{Ad}}}}0{{{f{BJl}}c}{{Af{Ad}}}Ab}{{{f{{l{El}}}}c}{{Af{Ad}}}Ab}0```{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{CBf}}}CBf}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}0{{}CBf}{En{{f{c}}}{}}{En{{f{Bhc}}}{}}{Enb}{{{f{CBf}}{f{CBf}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{CBf}}{f{BhG`}}}Gb}{cc{}}{{{f{CBf}}{f{Bhc}}}bABb}{{}En}{ce{}{}}{{{f{c}}}e{}{}}{c{{Gj{e}}}{}{}}0{{{f{c}}}Nn{}}3``````````{{{f{c}}h}b{}}05{{{Fd{BCb}}}{{Af{BCb}}}}{c{{Af{BCb}}}{{Gh{}{{B`{BCb}}}}}}{cBCb{{Gh{}{{B`{BCb}}}}}}{c{{An{BCb}}}{{Gh{}{{B`{BCb}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}}{{H`{{AKf{{l{c}}}}{AKf{{l{e}}}}}}}BnBn}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}}{{H`{{AKf{{l{c}}}}{AKf{{l{e}}}}{AKf{{l{g}}}}}}}BnBnBn}{{{f{BhCBh}}}d}{c{{Af{Dj}}}{{Gh{}{{B`{{f{Hf}}}}}}}}{c{{Af{{H`{DjEn}}}}}{{Gh{}{{B`{{f{Hf}}}}}}}}`{{{f{{l{c}}}}{f{{l{e}}}}}{{An{Gn}}}BnBn}{{{f{c}}}{{f{e}}}{}{}}000{{{f{Bhc}}}{{f{Bhe}}}{}{}}000{{{f{CBj}}}{{`{{Bd{}{{B`{En}}}}}}}}{{{f{CBl}}}CBl}{{{f{{CBn{ec}}}}}{{CBn{ec}}}A@h{A@h{Bd{}{{B`{c}}}}}}{{{f{c}}{f{Bhe}}}b{}{}}0{{{f{c}}}b{}}00{{{f{{l{c}}}}{f{{l{c}}}}}{{H`{{AKf{{l{c}}}}{AKf{{l{c}}}}}}}Bn}{{{f{Ad}}{f{Ad}}}{{H`{AdAd}}}}{CBhe{}{{CC`{c}}}}{CBhe{}{{CCb{c}}}}{c{{Af{BCb}}}{{Gh{}{{B`{{f{BCb}}}}}}}}{cBCb{{Gh{}{{B`{{f{BCb}}}}}}}}{{{f{BhCBh}}{f{c}}}dBL`}{{}CBl}{{{f{{CCd{c}}}}}{{f{e}}}{}{}}{En{{f{c}}}{}}0{{{f{{AJj{c}}}}}{{f{e}}}{}{}}11{En{{f{Bhc}}}{}}0{{{f{Bh{AJj{c}}}}}{{f{Bhe}}}{}{}}11{Enb}000{cBD`{{Gh{}{{B`{Dj}}}}}}{c{{Af{Dj}}}{{Gh{}{{B`{{f{Dj}}}}}}}}{{{f{{CCd{Ad}}}}{f{{CCd{Ad}}}}}d}{{{f{CBl}}{f{CBl}}}d}{{{f{c}}{f{e}}}d{}{}}00000`{{{f{CBl}}{f{BhG`}}}Gb}{{{f{BhCBh}}cg}{{An{c}}}{}{}{{Ch{ce}{{C`{c}}}}}}{cc{}}000{g{{Gj{ic}}}{}{}{{Gl{c}{{B`{e}}}}}{}}{c{{AJj{{l{e}}}}}{{Gh{}{{B`{}}}}}n}{c{{AJj{Fj}}}{{Gh{}{{B`{d}}}}}}{eCCb{}{{Gh{}{{B`{c}}}}}}21{c{{AJj{{l{e}}}}}{{Hb{}{{B`{}}}}}n}{c{{AJj{Fj}}}{{Hd{}{{B`{d}}}}}}{c{{AJj{{l{e}}}}}{{Hd{}{{B`{}}}}}n}{{{f{Dj}}{f{Dj}}}{{An{Dj}}}}{{{f{Dj}}{f{Dj}}CBl}{{An{Dj}}}}{{{f{AMj}}{f{AMj}}}AMj}{{{f{Ad}}{f{Ad}}}{{Af{b}}}}{{{f{{CCd{Ad}}}}{f{Bhc}}}bABb}{{{f{CBl}}{f{Bhc}}}bABb}`{{}En}000{ce{}{}}000{{{AJj{c}}}c{}}1{BEn{{Fd{c}}}{}}{c{{Fd{D`}}}{}}{c{{Fd{{CCh{CCf}}}}}{}}{{{f{CBj}}}{{`{{Bd{}{{B`{CBj}}}}}}}}{{{f{CBj}}}En}{MdHf}1{c{{AJj{c}}}{}}{{eEn}{{CBn{ec}}}{}{{Bd{}{{B`{c}}}}}}{{{f{Bh{CBn{ec}}}}}An{}{{Bd{}{{B`{c}}}}}}{{{f{Bh{CBn{ec}}}}}An{}{{Bd{}{{B`{c}}}}Fh}}`{{{f{{CBn{ec}}}}}{{H`{En{An{En}}}}}{}{{Bd{}{{B`{c}}}}}}{{{f{CBj}}JjEn}CBj}{{{f{{Dh{c}}}}JjEn}{{f{{Dh{c}}}}}{}}{{{f{c}}En}{{Fd{c}}}CBj}0{{{f{CBj}}Jj}{{H`{CBjCBj}}}}{{{f{BCb}}End}{{Fd{BCb}}}}{{{f{c}}}e{}{}}0{{CBhEn}{{CBn{CBhc}}}{}}{c{{Gj{e}}}{}{}}000{{{f{Dj}}{f{Dj}}}{{Af{Dj}}}}1111{{{f{c}}}Nn{}}000{ce{}{}}000{{{f{Dj}}e}c{}{{Cb{{f{BhCf}}}{{C`{c}}}}}}{{{f{{Dh{{Fd{c}}}}}}}{{H`{En{Fd{En}}}}}{}}{{{f{BCb}}}{{`{{Bd{}{{B`{BCb}}}}}}}}{{{f{{Dh{c}}}}}{{AJd{Hh}}}{{Lh{{Dh{O`}}}}InJ`}}{{{f{{Dh{e}}}}}{{Fd{c}}}{InJ`Cd}{{Lh{{Dh{c}}}}}}{{{f{Ad}}}{{Fd{Ad}}}}","D":"JDn","p":[[1,"unit"],[1,"bool"],[1,"reference"],[5,"Private",5473],[5,"ListType",1537],[5,"ChunkedArray",40],[10,"PolarsNumericType",1537],[10,"Num",5474],[10,"ToPrimitive",5475],[5,"Series",4823],[8,"PolarsResult",4051,5476],[10,"NumOpsDispatchInner",5261,5477],[6,"GroupsProxy",3645,5478],[5,"BooleanType",1537],[6,"Option",5479],[17,"Item"],[8,"ArrayBox",5237],[10,"Iterator",5480],[1,"str"],[0,"mut"],[17,"IsNested"],[5,"FalseT",1537],[10,"PolarsDataType",1537],[17,"Output"],[10,"Fn",5481],[10,"Copy",5482],[5,"AmortSeries",5237],[10,"FnMut",5481],[5,"Float32Type",1537],[5,"Float64Type",1537],[8,"StringChunked",1537],[5,"String",5483],[5,"StringType",1537],[5,"BinaryType",1537],[1,"u8"],[1,"slice"],[6,"DataType",1537,5484],[8,"ListChunked",1537],[5,"View",5485],[5,"SortOptions",1451],[8,"IdxCa",1537,5486],[5,"SortMultipleOptions",1451],[8,"BinaryChunked",1537],[10,"PolarsIntegerType",1537],[6,"CastOptions",730],[10,"NumOpsDispatchCheckedInner",5286,5487],[1,"usize"],[8,"ChunkLenIter",40],[8,"ArrayRef",4051,5488],[5,"Vec",5489],[5,"MetadataProperties",819],[10,"DoubleEndedIterator",5490],[8,"BooleanChunked",1537],[17,"HasViews"],[17,"IsObject"],[5,"Formatter",5491],[8,"Result",5491],[10,"Array",5488],[17,"Array"],[10,"IntoIterator",5492],[6,"Result",5493],[10,"FallibleIterator",5494],[5,"Bitmap",5495],[1,"tuple"],[10,"IntoParallelIterator",5496],[10,"TrustedLen",5497],[6,"AnyValue",1537,5498],[8,"IdxSize",4051,5499],[5,"MetadataFlags",819],[5,"ObjectType",1537],[10,"PolarsObjectSafe",1109],[10,"PolarsObject",1109],[1,"f32"],[1,"u64"],[5,"Metadata",819],[5,"RwLockWriteGuard",5500],[5,"Int128Type",1537],[8,"DecimalChunked",1537,5501],[10,"Send",5482],[10,"Sync",5482],[10,"ExactSizeIterator",5502],[10,"PolarsFloatType",1537],[6,"IsSorted",4823,5503],[10,"PolarsIterator",780],[1,"i64"],[5,"Iter",5504],[1,"fn"],[5,"Map",5505],[6,"ChunkedArrayLayout",40],[10,"NumCast",5475],[5,"Scalar",4716],[1,"f64"],[6,"MetadataReadGuard",819,5506],[5,"IMMetadata",819,5507],[5,"Arc",4051,5508],[10,"MetadataTrait",819,5509],[5,"RwLockReadGuard",5500],[5,"Int32Type",1537],[1,"i32"],[10,"AsRef",5510],[5,"Range",5511],[5,"UInt64Type",1537],[5,"UInt32Type",1537],[1,"u32"],[5,"Int64Type",1537],[1,"i128"],[5,"Field",1537,5512],[10,"ParallelIterator",5496],[10,"IndexedParallelIterator",5496],[6,"QuantileInterpolOptions",4051,5513],[5,"RollingOptionsFixedWindow",4051,5514],[10,"Sized",5482],[17,"IsStruct"],[5,"RandomState",5515],[5,"BytesHash",5516],[8,"Array2",5517],[8,"ArrayView1",5517],[6,"Either",5518],[5,"TypeId",5519],[5,"NullableIdxSize",4051,5499],[10,"FnOnce",5481],[17,"Scalar"],[17,"Out"],[17,"TrueDivOut"],[10,"ArithmeticChunked",440,5520],[10,"ChunkedBuilder",468],[5,"BinViewChunkedBuilder",468,5521],[10,"ViewType",5522],[5,"BooleanChunkedBuilder",468,5523],[5,"NullChunkedBuilder",468,5524],[5,"PrimitiveChunkedBuilder",468,5525],[10,"Clone",5526],[8,"StringChunkedBuilder",468,5521],[8,"BinaryChunkedBuilder",468,5521],[10,"NewChunkedArray",468],[5,"AnonymousListBuilder",576,5527],[5,"AnonymousOwnedListBuilder",576,5527],[5,"ListBooleanChunkedBuilder",576,5528],[5,"ListPrimitiveChunkedBuilder",576,5529],[10,"ListBuilderTrait",576],[5,"ListStringChunkedBuilder",576,5530],[5,"ListBinaryChunkedBuilder",576,5530],[5,"ListNullChunkedBuilder",576,5531],[5,"Box",5532],[10,"Hasher",5533],[10,"ChunkedCollectInferIterExt",760],[10,"ChunkedCollectIterExt",760],[10,"Canonical",774],[10,"ChunkedCollectParIterExt",776],[10,"FromParIterWithDtype",776],[5,"BooleanArray",5534],[5,"BoolIterNoNull",780],[5,"SomeIterator",780],[5,"MetadataEnv",819,5535],[10,"MetadataCollectable",819,5536],[5,"Iter",5537],[5,"IterNames",5537],[5,"File",5538],[5,"Mutex",5539],[6,"MetadataMerge",819],[5,"RwLock",5500],[5,"ObjectArray",1109],[6,"ArrowDataType",1537,5540],[10,"Any",5519],[10,"Debug",5491],[5,"BitmapIter",5541],[6,"ZipValidity",5542],[8,"ObjectValueIter",1109],[5,"ObjectChunkedBuilder",1186],[8,"ObjectChunked",1537],[10,"AnonymousObjectBuilder",1209],[5,"ObjectRegistry",1209],[8,"ObjectConverter",1209],[8,"BuilderConstructor",1209],[17,"FuncRet"],[10,"ChunkApply",1237],[10,"ChunkApplyKernel",1237],[10,"ChunkSort",1237],[10,"ChunkUnique",1237],[10,"ChunkCast",1237],[6,"FillNullStrategy",1237],[10,"ChunkCompare",1237],[10,"ChunkExplode",1237],[5,"OffsetsBuffer",5543],[10,"ChunkFillNullValue",1237],[10,"ChunkFilter",1237],[10,"ChunkFull",1237],[10,"ChunkFullNull",1237],[10,"ChunkAnyValue",1237],[10,"IsFirstDistinct",1237],[10,"IsLastDistinct",1237],[10,"ChunkAgg",1237],[10,"ChunkQuantile",1237],[10,"ChunkExpandAtIndex",1237],[10,"ChunkReverse",1237],[10,"ChunkRollApply",1237],[10,"ChunkSet",1237],[10,"ChunkShift",1237],[10,"ChunkShiftFill",1237],[10,"ChunkVar",1237],[10,"ChunkTake",1237],[10,"ChunkTakeUnchecked",1237],[10,"ChunkBytes",1237],[10,"ChunkZip",1237],[10,"BinaryFnMut",1363],[10,"StaticArray",1537,5544],[10,"TernaryFnMut",1363],[10,"Error",5545],[10,"UnaryFnMut",1363],[5,"PrimitiveArray",5546],[6,"SearchSortedSide",1404],[10,"SlicedArray",4051,5547],[5,"NoNull",5322],[5,"RowsEncoded",5548],[5,"BinaryArray",5549],[8,"BinaryOffsetChunked",1537],[5,"NaiveDateTime",5550],[6,"PolarsError",4051,5476],[6,"Cow",5551],[8,"Float32Chunked",1537],[8,"Float64Chunked",1537],[10,"ArrayFromIter",1537,5552],[10,"ArrayFromIterDtype",1537,5552],[10,"AsRefDataType",1537,5484],[17,"ValueT"],[17,"ZeroableValueT"],[17,"ValueIterT"],[10,"Zeroable",5553],[10,"From",5510],[5,"CategoricalChunked",3005,5554],[10,"CategoricalMergeOperation",3005,5555],[10,"LogicalType",1537,5556],[5,"Logical",1537,5556],[5,"OwnedObject",1537,5498],[6,"UnknownKind",1537,5484],[5,"CompatLevel",1537,5484],[6,"TimeUnit",1537,5557],[5,"UInt8Type",1537],[5,"UInt16Type",1537],[5,"Int8Type",1537],[5,"Int16Type",1537],[5,"DateType",1537],[5,"TimeType",1537],[5,"BinaryOffsetType",1537],[5,"DecimalType",1537],[5,"DatetimeType",1537],[5,"DurationType",1537],[5,"CategoricalType",1537],[6,"ArrowTimeUnit",1537],[10,"ArrayCollectIterExt",4051,5552],[8,"Utf8ViewArray",5522],[8,"UInt32Chunked",1537],[5,"Error",5491],[10,"NumericNative",1537],[10,"Into",5510],[5,"ArrowField",4051],[6,"PrimitiveType",5558],[6,"IntegerType",5559],[10,"Borrow",5560],[8,"SmartString",1537],[10,"NoOption",5561],[10,"GetAnyValue",1537,5498],[8,"Int128Chunked",1537],[10,"IntoScalar",1537,5562],[6,"Ordering",5563],[6,"PhysicalType",5559],[8,"UInt8Chunked",1537],[8,"UInt16Chunked",1537],[8,"UInt64Chunked",1537],[8,"Int8Chunked",1537],[8,"Int16Chunked",1537],[8,"Int32Chunked",1537],[8,"Int64Chunked",1537],[8,"PlIdHashMap",1537,5486],[5,"CategoricalChunkedBuilder",3005,5564],[5,"GlobalRevMapMerger",3005,5555],[6,"RevMapping",3146,5565],[6,"CategoricalOrdering",3146,5565],[5,"CatIter",3005,5554],[1,"u128"],[5,"DataFrame",3342],[5,"StringCacheHolder",3201,5566],[5,"ErrString",3230,5476],[6,"PolarsWarning",3230,5567],[10,"Display",5491],[6,"FloatFmt",3310],[1,"char"],[5,"Schema",4742],[10,"IntoSeries",4823,5568],[6,"NullStrategy",3342],[6,"UniqueKeepStrategy",3342],[8,"PlHashSet",1537,5569],[5,"ArrowSchema",4051,5570],[5,"Row",3904],[5,"GroupBy",3645],[5,"RangeToInclusive",5511],[5,"RangeInclusive",5511],[5,"RangeFull",5511],[5,"RangeFrom",5511],[5,"RangeTo",5511],[5,"RecordBatchIter",3342],[5,"PhysRecordBatchIter",3342],[10,"IntoVec",5322],[10,"RangeBounds",5511],[8,"SchemaRef",4742],[6,"IndexOrder",4051,5571],[5,"StructArray",5572],[8,"RecordBatch",5573],[5,"UnpivotArgs",3615],[5,"GroupsIdx",3645,5478],[8,"IdxVec",5574],[6,"GroupByMethod",3645],[5,"SlicedGroups",3645,5478],[5,"GroupsProxyParIter",3645,5478],[10,"UnindexedConsumer",5575],[6,"GroupsIndicator",3645,5478],[8,"IdxItem",3645,5478],[10,"IntoGroupsProxy",3645,5576],[5,"Copied",5577],[5,"Zip",5578],[5,"GroupsProxyIter",3645,5478],[8,"GroupsSlice",3645,5478],[1,"array"],[8,"DynArgs",4051,5579],[10,"IsFloat",5580],[10,"NativeType",5581],[10,"AggList",3888,5582],[10,"TakeExtremum",3888],[10,"PhysicalAggExpr",3901],[6,"AnyValueBuffer",3904,5583],[6,"AnyValueBufferTrusted",3904,5583],[5,"IdHasher",4003,5584],[5,"IdxHash",4003,5584],[5,"HashMap",5585],[10,"BuildHasher",5533],[10,"VecHash",4003,5586],[10,"Allocator",5587],[5,"BorrowedFd",5588],[10,"AsFd",5588],[10,"AsRawFd",5589],[20,"MaybeUninit",5590],[10,"NumOpsDispatchChecked",4051,5487],[5,"ChunkId",4051,5499],[5,"RollingVarParams",4051,5579],[5,"RollingQuantileParams",4051,5579],[6,"NonExistent",4051,5591],[10,"Ord",5563],[5,"CStr",5592],[10,"Default",5593],[5,"Weak",5508],[10,"Scalar",5594],[10,"PartialEq",5563],[5,"Error",5595],[5,"Utf8Error",5596],[5,"TryReserveError",5597],[6,"Error",5598],[5,"PathBuf",5599],[5,"Path",5599],[1,"never"],[5,"OsStr",5600],[5,"OsString",5600],[5,"CString",5601],[10,"ToOwned",5551],[10,"FromData",4638,5602],[5,"Buffer",5603],[10,"FromDataUtf8",4638,5602],[10,"FromDataBinary",4638,5602],[5,"ListArray",5604],[6,"Ambiguous",4051,5591],[10,"NamedFromOwned",4051,5605],[10,"PartialOrd",5563],[10,"Hash",5533],[10,"SeriesTrait",4823,5503],[10,"CloneToUninit",5526],[10,"ChunkAggSeries",4051,5606],[10,"QuantileAggSeries",4051,5607],[10,"IndexToUsize",4051,5608],[10,"NamedFrom",4051,5605],[5,"Pin",5609],[5,"Request",5545],[5,"BorrowedCursor",5610],[5,"IoSliceMut",5611],[6,"SeekFrom",5611],[10,"VarAggSeries",4051,5612],[5,"AllocError",5587],[5,"BTreeMap",5613],[5,"IoSlice",5611],[5,"AnonymousBuilder",4644,5614],[5,"Offsets",5543],[5,"MutableNullArray",4667,5615],[5,"MutableBitmap",5616],[5,"Utf8Array",5617],[10,"SchemaNamesAndDtypes",4742],[8,"ArrowSchemaRef",5570],[10,"IndexOfSchema",4742],[17,"DataType"],[8,"Metadata",5540],[5,"SeriesIter",4823,5618],[8,"SeriesPhysIter",4823,5618],[5,"Rc",5619],[10,"LhsNumOps",5261,5477],[10,"NumOpsDispatch",5261,5477],[6,"NullBehavior",5294],[10,"CustomIterTools",5322,5620],[10,"Container",5322],[5,"SuperTypeOptions",5322,5621],[5,"TrustMyLength",5322,5497],[10,"FromIteratorReversed",5622],[10,"FromTrustedLenIterator",5322,5620],[5,"Wrap",5322],[5,"LazyCompact",5623],[5,"SmartString",5624],[8,"FillNullLimit",1237],[10,"InitHashMaps",1537],[10,"InitHashMaps2",1537],[5,"TrueT",1537],[15,"IO",3295],[15,"Context",3295],[15,"Count",3885],[15,"Slice",3886],[10,"ListFromIter",4051],[10,"Utf8FromIter",4711],[10,"BinaryFromIter",4711],[6,"BitRepr",4823]],"r":[[0,5584],[4,5566],[13,5566],[16,5566],[32,5566],[440,5520],[468,5521],[469,5521],[470,5523],[473,5524],[474,5525],[475,5521],[576,5527],[577,5527],[578,5530],[579,5528],[581,5531],[582,5529],[583,5530],[824,5507],[830,5536],[831,5535],[835,5506],[836,5509],[1155,5625],[1435,5547],[1451,5547],[1538,5498],[1540,5552],[1541,5552],[1542,5552],[1543,5540],[1545,5484],[1561,5554],[1564,5554],[1565,5564],[1566,5555],[1567,5565],[1569,5484],[1570,5484],[1571,5484],[1572,5484],[1583,5501],[1593,5512],[1594,5512],[1609,5498],[1611,5555],[1615,5486],[1616,5608],[1617,5486],[1618,5486],[1619,5569],[1620,5486],[1645,5562],[1659,5556],[1660,5556],[1678,5498],[1682,5569],[1683,5569],[1684,5486],[1685,5569],[1686,5569],[1692,5565],[1695,5544],[1707,5557],[1708,5484],[1735,5484],[1933,5555],[1950,5556],[2080,5484],[2600,5555],[2601,5555],[2613,5484],[2699,5554],[2737,5554],[3005,5554],[3006,5554],[3007,5564],[3008,5555],[3009,5565],[3011,5555],[3015,5565],[3032,5555],[3098,5555],[3099,5555],[3117,5554],[3121,5554],[3146,5565],[3151,5565],[3201,5566],[3207,5566],[3210,5566],[3218,5566],[3220,5565],[3225,5565],[3226,5566],[3227,5566],[3228,5566],[3229,5566],[3236,5476],[3243,5476],[3244,5476],[3245,5567],[3259,5476],[3267,5476],[3274,5567],[3279,5476],[3280,5476],[3281,5476],[3282,5476],[3283,5476],[3284,5567],[3285,5476],[3299,5626],[3300,5626],[3301,5626],[3302,4003],[3645,5478],[3651,5478],[3652,5478],[3653,5478],[3654,5478],[3655,5478],[3656,5478],[3659,5478],[3661,5576],[3673,5478],[3888,5582],[3906,5583],[3907,5583],[4002,5627],[4003,5584],[4004,5584],[4005,5584],[4006,5586],[4009,5586],[4010,5586],[4051,5591],[4052,5508],[4053,5520],[4054,5552],[4055,5488],[4057,5570],[4058,5521],[4059,5523],[4061,5554],[4062,5554],[4063,5564],[4064,5555],[4065,5565],[4066,5606],[4067,5499],[4068,40],[4069,468],[4070,760],[4071,760],[4075,3342],[4077,5579],[4081,5602],[4082,5602],[4083,5602],[4085,5555],[4088,5608],[4089,5499],[4090,5571],[4091,5608],[4092,5568],[4093,5322],[4095,5628],[4096,5628],[4097,5628],[4100,5477],[4102,5530],[4103,5528],[4104,576],[4105,5629],[4106,5529],[4107,5530],[4111,5605],[4112,5605],[4114,468],[4116,5591],[4120,5499],[4121,5499],[4122,5477],[4123,5487],[4127,5476],[4128,780],[4129,1109],[4130,5476],[4131,5525],[4132,5607],[4133,5513],[4136,5565],[4137,5514],[4138,5579],[4139,5579],[4142,4716],[4145,4823],[4146,5503],[4148,5547],[4150,5566],[4152,5521],[4154,3342],[4155,3615],[4156,5612],[4157,5586],[4203,5555],[4256,5629],[4259,0],[4272,5629],[4301,0],[4437,5608],[4480,5629],[4482,5555],[4483,5555],[4509,5629],[4515,5476],[4516,5476],[4517,5476],[4518,5476],[4530,5554],[4532,5629],[4538,5554],[4612,5629],[4638,5602],[4639,5602],[4640,5602],[4644,5614],[4667,5615],[4698,5565],[4703,5565],[4704,5547],[4707,5566],[4708,5566],[4709,5566],[4710,5566],[4711,5630],[4712,5630],[4825,5503],[4826,1237],[4829,5568],[4830,5503],[4831,5503],[4836,5618],[4837,5618],[4838,5503],[5261,5477],[5262,5477],[5263,5477],[5269,5477],[5286,5487],[5287,5487],[5324,5620],[5325,5620],[5326,5620],[5329,5621],[5330,5497],[5342,5631],[5343,5631],[5385,5632],[5386,5621],[5411,5621],[5412,5621],[5414,5633],[5433,5621],[5454,5621],[5467,5633]],"b":[[49,"impl-Add%3CN%3E-for-%26ChunkedArray%3CT%3E"],[50,"impl-Add-for-ChunkedArray%3CT%3E"],[51,"impl-Add-for-%26ChunkedArray%3CT%3E"],[52,"impl-Add%3CN%3E-for-ChunkedArray%3CT%3E"],[65,"impl-ChunkedArray%3CFloat32Type%3E"],[66,"impl-ChunkedArray%3CFloat64Type%3E"],[71,"impl-ChunkedArray%3CT%3E"],[72,"impl-ChunkedArray%3CStringType%3E"],[73,"impl-ChunkedArray%3CBinaryType%3E"],[101,"impl-Container-for-ChunkedArray%3CT%3E"],[102,"impl-ChunkedArray%3CT%3E"],[121,"impl-Div%3CN%3E-for-%26ChunkedArray%3CT%3E"],[122,"impl-Div%3CN%3E-for-ChunkedArray%3CT%3E"],[123,"impl-Div-for-%26ChunkedArray%3CT%3E"],[124,"impl-Div-for-ChunkedArray%3CT%3E"],[131,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[132,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[133,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[134,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[140,"impl-Debug-for-ChunkedArray%3CT%3E"],[141,"impl-Debug-for-ChunkedArray%3CBooleanType%3E"],[152,"impl-FromIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[153,"impl-FromIterator%3C(Vec%3C%3CT+as+PolarsNumericType%3E::Native%3E,+Option%3CBitmap%3E)%3E-for-ChunkedArray%3CT%3E"],[154,"impl-FromIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[156,"impl-FromTrustedLenIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[157,"impl-FromTrustedLenIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[185,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[186,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[187,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[188,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[220,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[221,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[222,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[223,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[224,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[225,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[226,"impl-ChunkedArray%3CT%3E"],[227,"impl-Container-for-ChunkedArray%3CT%3E"],[232,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[233,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[234,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[235,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[236,"impl-ChunkedArray%3CBooleanType%3E"],[237,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[239,"impl-ChunkedArray%3CBooleanType%3E"],[240,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[250,"impl-ChunkedArray%3CBooleanType%3E"],[251,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[254,"impl-ChunkedArray%3CT%3E"],[255,"impl-ChunkedArray%3CBooleanType%3E"],[256,"impl-Mul-for-ChunkedArray%3CT%3E"],[257,"impl-Mul%3CN%3E-for-%26ChunkedArray%3CT%3E"],[258,"impl-Mul%3CN%3E-for-ChunkedArray%3CT%3E"],[259,"impl-Mul-for-%26ChunkedArray%3CT%3E"],[264,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[265,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-ChunkedArray%3CUInt64Type%3E"],[266,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-ChunkedArray%3CStringType%3E"],[267,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[268,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[269,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[270,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[271,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[272,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[273,"impl-NamedFrom%3CT,+%5Bi128%5D%3E-for-ChunkedArray%3CInt128Type%3E"],[274,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[275,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[276,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[277,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[278,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[279,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[280,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[281,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[282,"impl-NamedFrom%3CT,+%5BOption%3Ci128%3E%5D%3E-for-ChunkedArray%3CInt128Type%3E"],[283,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[284,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[285,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-ChunkedArray%3CInt64Type%3E"],[286,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-ChunkedArray%3CInt32Type%3E"],[287,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-ChunkedArray%3CUInt32Type%3E"],[295,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[296,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[297,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[298,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[302,"impl-ChunkedArray%3CListType%3E"],[303,"impl-ChunkedArray%3CStringType%3E"],[304,"impl-ChunkedArray%3CListType%3E"],[305,"impl-ChunkedArray%3CStringType%3E"],[316,"impl-Rem%3CN%3E-for-%26ChunkedArray%3CT%3E"],[317,"impl-Rem%3CN%3E-for-ChunkedArray%3CT%3E"],[318,"impl-Rem-for-%26ChunkedArray%3CT%3E"],[319,"impl-Rem-for-ChunkedArray%3CT%3E"],[338,"impl-ChunkedArray%3CT%3E"],[339,"impl-Container-for-ChunkedArray%3CT%3E"],[342,"impl-ChunkedArray%3CT%3E"],[343,"impl-Container-for-ChunkedArray%3CT%3E"],[346,"impl-Sub%3CN%3E-for-%26ChunkedArray%3CT%3E"],[347,"impl-Sub%3CN%3E-for-ChunkedArray%3CT%3E"],[348,"impl-Sub-for-ChunkedArray%3CT%3E"],[349,"impl-Sub-for-%26ChunkedArray%3CT%3E"],[351,"impl-ChunkedArray%3CBooleanType%3E"],[352,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[355,"impl-ChunkTake%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[356,"impl-ChunkTake%3CI%3E-for-ChunkedArray%3CT%3E"],[357,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[358,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CT%3E"],[364,"impl-ChunkedArray%3CListType%3E"],[365,"impl-ChunkedArray%3CT%3E"],[370,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[371,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[372,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[373,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[374,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[375,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[402,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[403,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[404,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[405,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[406,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[407,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[408,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[409,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[410,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[411,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[412,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[413,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[414,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[415,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[416,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[417,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[418,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[419,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[420,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[421,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[422,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[423,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[424,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[425,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[426,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[427,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[428,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[429,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[430,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[431,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[432,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[433,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[434,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[435,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[436,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[437,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[524,"impl-BinViewChunkedBuilder%3C%5Bu8%5D%3E"],[525,"impl-BinViewChunkedBuilder%3Cstr%3E"],[857,"impl-Flags-for-MetadataProperties"],[858,"impl-MetadataProperties"],[859,"impl-MetadataFlags"],[860,"impl-Flags-for-MetadataFlags"],[926,"impl-Metadata%3CT%3E"],[927,"impl-MetadataTrait-for-Metadata%3CT%3E"],[952,"impl-Debug-for-MetadataProperties"],[953,"impl-UpperHex-for-MetadataProperties"],[954,"impl-LowerHex-for-MetadataProperties"],[955,"impl-Octal-for-MetadataProperties"],[956,"impl-Binary-for-MetadataProperties"],[957,"impl-LowerHex-for-MetadataFlags"],[958,"impl-UpperHex-for-MetadataFlags"],[959,"impl-Debug-for-MetadataFlags"],[960,"impl-Binary-for-MetadataFlags"],[961,"impl-Octal-for-MetadataFlags"],[971,"impl-MetadataProperties"],[972,"impl-Flags-for-MetadataProperties"],[973,"impl-MetadataFlags"],[974,"impl-Flags-for-MetadataFlags"],[987,"impl-Metadata%3CT%3E"],[988,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1031,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1032,"impl-Metadata%3CT%3E"],[1036,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1037,"impl-Metadata%3CT%3E"],[1115,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1116,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1150,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1151,"impl-ObjectArray%3CT%3E"],[1166,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1167,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1177,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1178,"impl-ObjectArray%3CT%3E"],[1180,"impl-ObjectArray%3CT%3E"],[1181,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1183,"impl-ObjectArray%3CT%3E"],[1184,"impl-Array-for-ObjectArray%3CT%3E"],[1187,"impl-ObjectChunkedBuilder%3CT%3E"],[1188,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1190,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1191,"impl-ObjectChunkedBuilder%3CT%3E"],[1774,"impl-Add-for-ChunkedArray%3CBooleanType%3E"],[1775,"impl-Add-for-%26ChunkedArray%3CBooleanType%3E"],[1776,"impl-Add-for-%26ChunkedArray%3CStringType%3E"],[1777,"impl-Add-for-ChunkedArray%3CStringType%3E"],[1778,"impl-Add%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[1779,"impl-Add-for-ChunkedArray%3CBinaryType%3E"],[1780,"impl-Add-for-%26ChunkedArray%3CBinaryType%3E"],[1781,"impl-Add%3C%26%5Bu8%5D%3E-for-%26ChunkedArray%3CBinaryType%3E"],[1856,"impl-BitAnd-for-ChunkedArray%3CBooleanType%3E"],[1857,"impl-BitAnd-for-%26ChunkedArray%3CBooleanType%3E"],[1858,"impl-BitOr-for-ChunkedArray%3CBooleanType%3E"],[1859,"impl-BitOr-for-%26ChunkedArray%3CBooleanType%3E"],[1860,"impl-BitXor-for-ChunkedArray%3CBooleanType%3E"],[1861,"impl-BitXor-for-%26ChunkedArray%3CBooleanType%3E"],[2207,"impl-PartialEq-for-DataType"],[2208,"impl-PartialEq%3CArrowDataType%3E-for-DataType"],[2217,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2218,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2219,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2220,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2223,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2224,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2225,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2226,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2264,"impl-Debug-for-AnyValue%3C\'a%3E"],[2265,"impl-Display-for-AnyValue%3C\'_%3E"],[2267,"impl-Debug-for-DataType"],[2268,"impl-Display-for-DataType"],[2271,"impl-Display-for-TimeUnit"],[2272,"impl-Debug-for-TimeUnit"],[2284,"impl-From%3C%26str%3E-for-AnyValue%3C\'a%3E"],[2285,"impl-From%3C%26%5Bu8%5D%3E-for-AnyValue%3C\'a%3E"],[2286,"impl-From%3Cbool%3E-for-AnyValue%3C\'static%3E"],[2287,"impl-From%3CK%3E-for-AnyValue%3C\'static%3E"],[2288,"impl-From%3COption%3CT%3E%3E-for-AnyValue%3C\'a%3E"],[2291,"impl-From%3CAnyValue%3C\'_%3E%3E-for-DataType"],[2292,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-DataType"],[2293,"impl-From%3C%26ArrowDataType%3E-for-DataType"],[2296,"impl-From%3C%26Field%3E-for-Field"],[2297,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-Field"],[2321,"impl-From%3CPrimitiveType%3E-for-ArrowDataType"],[2322,"impl-From%3CIntegerType%3E-for-ArrowDataType"],[2325,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[2326,"impl-FromIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[2327,"impl-FromIterator%3COption%3CBox%3Cdyn+Array%3E%3E%3E-for-ChunkedArray%3CListType%3E"],[2329,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2330,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2331,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2332,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2338,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[2339,"impl-FromTrustedLenIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[2341,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2342,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2343,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2344,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2345,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[2346,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[2354,"impl-FromParallelIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[2355,"impl-FromParallelIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[2356,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2357,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2358,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2359,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2448,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2449,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2450,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2451,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2454,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2455,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2456,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2457,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2590,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2591,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2592,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2593,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2596,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2597,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2598,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2599,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2634,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2635,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2636,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-ChunkedArray%3CStringType%3E"],[2637,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2638,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2639,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2640,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2641,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2642,"impl-NamedFrom%3C%26%5BT%5D,+%26%5BT%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[2643,"impl-NamedFrom%3CS,+%5BOption%3CT%3E%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[2656,"impl-Not-for-ChunkedArray%3CBooleanType%3E"],[2657,"impl-Not-for-%26ChunkedArray%3CBooleanType%3E"],[2660,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2661,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2662,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2663,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2666,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2667,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2668,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2669,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2749,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStringType%3E"],[2750,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStringType%3E"],[2751,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CBinaryType%3E"],[2752,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[3052,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3053,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3054,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3055,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3056,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3057,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3072,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3073,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3074,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3075,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3076,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3077,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3092,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3093,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3094,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3095,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3096,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3097,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3108,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3109,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3110,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3111,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3112,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3113,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3269,"impl-Display-for-ErrString"],[3270,"impl-Debug-for-ErrString"],[3363,"impl-Add%3C%26Series%3E-for-%26DataFrame"],[3364,"impl-Add%3C%26DataFrame%3E-for-%26DataFrame"],[3365,"impl-Add%3C%26Series%3E-for-DataFrame"],[3408,"impl-Div%3C%26Series%3E-for-DataFrame"],[3409,"impl-Div%3C%26Series%3E-for-%26DataFrame"],[3410,"impl-Div%3C%26DataFrame%3E-for-%26DataFrame"],[3442,"impl-Display-for-DataFrame"],[3443,"impl-Debug-for-DataFrame"],[3475,"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-DataFrame"],[3476,"impl-Index%3CRange%3Cusize%3E%3E-for-DataFrame"],[3477,"impl-Index%3Cusize%3E-for-DataFrame"],[3478,"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-DataFrame"],[3479,"impl-Index%3C%26str%3E-for-DataFrame"],[3480,"impl-Index%3CRangeFull%3E-for-DataFrame"],[3481,"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-DataFrame"],[3482,"impl-Index%3CRangeTo%3Cusize%3E%3E-for-DataFrame"],[3500,"impl-Container-for-DataFrame"],[3501,"impl-DataFrame"],[3507,"impl-Mul%3C%26Series%3E-for-DataFrame"],[3508,"impl-Mul%3C%26Series%3E-for-%26DataFrame"],[3509,"impl-Mul%3C%26DataFrame%3E-for-%26DataFrame"],[3510,"impl-Container-for-DataFrame"],[3511,"impl-DataFrame"],[3525,"impl-Rem%3C%26DataFrame%3E-for-%26DataFrame"],[3526,"impl-Rem%3C%26Series%3E-for-DataFrame"],[3527,"impl-Rem%3C%26Series%3E-for-%26DataFrame"],[3553,"impl-Container-for-DataFrame"],[3554,"impl-DataFrame"],[3558,"impl-DataFrame"],[3559,"impl-Container-for-DataFrame"],[3562,"impl-Sub%3C%26DataFrame%3E-for-%26DataFrame"],[3563,"impl-Sub%3C%26Series%3E-for-DataFrame"],[3564,"impl-Sub%3C%26Series%3E-for-%26DataFrame"],[3582,"impl-TryFrom%3CStructArray%3E-for-DataFrame"],[3583,"impl-TryFrom%3C(RecordBatchT%3CBox%3Cdyn+Array%3E%3E,+%26%5BField%5D)%3E-for-DataFrame"],[3762,"impl-Display-for-GroupByMethod"],[3763,"impl-Debug-for-GroupByMethod"],[3769,"impl-From%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E-for-GroupsIdx"],[3770,"impl-From%3CVec%3C(Vec%3Cu32%3E,+Vec%3CUnitVec%3Cu32%3E%3E)%3E%3E-for-GroupsIdx"],[3771,"impl-From%3CVec%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E%3E-for-GroupsIdx"],[3806,"impl-IntoIterator-for-GroupsIdx"],[3807,"impl-IntoIterator-for-%26GroupsIdx"],[3809,"impl-IntoParallelIterator-for-%26GroupsIdx"],[3810,"impl-IntoParallelIterator-for-GroupsIdx"],[4174,"impl-Arc%3CMaybeUninit%3CT%3E,+A%3E"],[4175,"impl-Arc%3C%5BMaybeUninit%3CT%3E%5D,+A%3E"],[4263,"impl-Default-for-Arc%3CCStr%3E"],[4264,"impl-Default-for-Arc%3CT%3E"],[4265,"impl-Default-for-Arc%3Cstr%3E"],[4266,"impl-Default-for-Arc%3C%5BT%5D%3E"],[4320,"impl-PartialEq%3Cdyn+Array%3E-for-Arc%3Cdyn+Array%3E"],[4321,"impl-PartialEq%3Cdyn+Scalar%3E-for-Arc%3Cdyn+Scalar%3E"],[4322,"impl-PartialEq-for-Arc%3CT,+A%3E"],[4355,"impl-Display-for-PolarsError"],[4356,"impl-Debug-for-PolarsError"],[4359,"impl-Debug-for-Arc%3CT,+A%3E"],[4360,"impl-Pointer-for-Arc%3CT,+A%3E"],[4361,"impl-Display-for-Arc%3CT,+A%3E"],[4371,"impl-From%3CUtf8Error%3E-for-PolarsError"],[4372,"impl-From%3CTryReserveError%3E-for-PolarsError"],[4373,"impl-From%3CError%3E-for-PolarsError"],[4374,"impl-From%3CError%3E-for-PolarsError"],[4379,"impl-From%3CPathBuf%3E-for-Arc%3CPath%3E"],[4380,"impl-From%3CT%3E-for-Arc%3CT%3E"],[4381,"impl-From%3CArc%3Cstr%3E%3E-for-Arc%3C%5Bu8%5D%3E"],[4382,"impl-From%3CVec%3CT,+A%3E%3E-for-Arc%3C%5BT%5D,+A%3E"],[4385,"impl-From%3C%26OsStr%3E-for-Arc%3COsStr%3E"],[4386,"impl-From%3CBox%3CT,+A%3E%3E-for-Arc%3CT,+A%3E"],[4387,"impl-From%3CString%3E-for-Arc%3Cstr%3E"],[4388,"impl-From%3COsString%3E-for-Arc%3COsStr%3E"],[4389,"impl-From%3C%26str%3E-for-Arc%3Cstr%3E"],[4390,"impl-From%3CCString%3E-for-Arc%3CCStr%3E"],[4391,"impl-From%3C%26%5BT%5D%3E-for-Arc%3C%5BT%5D%3E"],[4392,"impl-From%3CCow%3C\'a,+B%3E%3E-for-Arc%3CB%3E"],[4393,"impl-From%3C%5BT;+N%5D%3E-for-Arc%3C%5BT%5D%3E"],[4394,"impl-From%3C%26CStr%3E-for-Arc%3CCStr%3E"],[4395,"impl-From%3C%26Path%3E-for-Arc%3CPath%3E"],[4765,"impl-From%3CArrowSchema%3E-for-Schema"],[4766,"impl-From%3C%26Arc%3CArrowSchema%3E%3E-for-Schema"],[4767,"impl-From%3CArc%3CArrowSchema%3E%3E-for-Schema"],[4769,"impl-From%3C%26ArrowSchema%3E-for-Schema"],[4770,"impl-From%3C%26Row%3C\'_%3E%3E-for-Schema"],[4771,"impl-From%3C%26%5BSeries%5D%3E-for-Schema"],[4844,"impl-Add-for-%26Series"],[4845,"impl-Add%3CT%3E-for-%26Series"],[4846,"impl-Add%3CT%3E-for-Series"],[4847,"impl-Add-for-Series"],[4918,"impl-Div-for-Series"],[4919,"impl-Div%3CT%3E-for-Series"],[4920,"impl-Div%3CT%3E-for-%26Series"],[4921,"impl-Div-for-%26Series"],[4933,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4934,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4935,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4936,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4937,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4938,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4955,"impl-Display-for-Series"],[4956,"impl-Debug-for-Series"],[4969,"impl-FromIterator%3Cbool%3E-for-Series"],[4970,"impl-FromIterator%3COption%3Cu32%3E%3E-for-Series"],[4971,"impl-FromIterator%3Ci64%3E-for-Series"],[4972,"impl-FromIterator%3COption%3Ci64%3E%3E-for-Series"],[4973,"impl-FromIterator%3COption%3Cf32%3E%3E-for-Series"],[4974,"impl-FromIterator%3C%26i32%3E-for-Series"],[4975,"impl-FromIterator%3Cf32%3E-for-Series"],[4976,"impl-FromIterator%3Ci32%3E-for-Series"],[4977,"impl-FromIterator%3C%26f32%3E-for-Series"],[4978,"impl-FromIterator%3COption%3Ci32%3E%3E-for-Series"],[4979,"impl-FromIterator%3CString%3E-for-Series"],[4980,"impl-FromIterator%3C%26str%3E-for-Series"],[4981,"impl-FromIterator%3C%26bool%3E-for-Series"],[4982,"impl-FromIterator%3C%26u64%3E-for-Series"],[4983,"impl-FromIterator%3Cu64%3E-for-Series"],[4984,"impl-FromIterator%3COption%3Cu64%3E%3E-for-Series"],[4985,"impl-FromIterator%3C%26u32%3E-for-Series"],[4986,"impl-FromIterator%3COption%3Cf64%3E%3E-for-Series"],[4987,"impl-FromIterator%3Cf64%3E-for-Series"],[4988,"impl-FromIterator%3C%26f64%3E-for-Series"],[4989,"impl-FromIterator%3Cu32%3E-for-Series"],[4990,"impl-FromIterator%3COption%3Cbool%3E%3E-for-Series"],[4991,"impl-FromIterator%3C%26i64%3E-for-Series"],[4992,"impl-NamedFromOwned%3CVec%3Cf32%3E%3E-for-Series"],[4993,"impl-NamedFromOwned%3CVec%3Ci32%3E%3E-for-Series"],[4994,"impl-NamedFromOwned%3CVec%3Ci64%3E%3E-for-Series"],[4995,"impl-NamedFromOwned%3CVec%3Ci128%3E%3E-for-Series"],[4996,"impl-NamedFromOwned%3CVec%3Cu32%3E%3E-for-Series"],[4997,"impl-NamedFromOwned%3CVec%3Cf64%3E%3E-for-Series"],[4998,"impl-NamedFromOwned%3CVec%3Cu64%3E%3E-for-Series"],[5013,"impl-ChunkCompare%3CRhs%3E-for-Series"],[5014,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[5015,"impl-ChunkCompare%3C%26str%3E-for-Series"],[5016,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[5017,"impl-ChunkCompare%3CRhs%3E-for-Series"],[5018,"impl-ChunkCompare%3C%26str%3E-for-Series"],[5060,"impl-ChunkCompare%3C%26str%3E-for-Series"],[5061,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[5062,"impl-ChunkCompare%3CRhs%3E-for-Series"],[5063,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[5064,"impl-ChunkCompare%3CRhs%3E-for-Series"],[5065,"impl-ChunkCompare%3C%26str%3E-for-Series"],[5079,"impl-Mul-for-%26Series"],[5080,"impl-Mul%3CT%3E-for-Series"],[5081,"impl-Mul%3CT%3E-for-%26Series"],[5082,"impl-Mul-for-Series"],[5089,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-Series"],[5090,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-Series"],[5091,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-Series"],[5092,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-Series"],[5093,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-Series"],[5094,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-Series"],[5095,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-Series"],[5096,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-Series"],[5097,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-Series"],[5098,"impl-NamedFrom%3CT,+%5BAnyValue%3C\'a%3E%5D%3E-for-Series"],[5099,"impl-NamedFrom%3CT,+%5Bi128%5D%3E-for-Series"],[5100,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-Series"],[5101,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-Series"],[5102,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-Series"],[5103,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-Series"],[5104,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-Series"],[5105,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-Series"],[5106,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-Series"],[5107,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-Series"],[5108,"impl-NamedFrom%3C%26Series,+str%3E-for-Series"],[5109,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-Series"],[5110,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-Series"],[5111,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-Series"],[5112,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-Series"],[5113,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-Series"],[5114,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-Series"],[5115,"impl-NamedFrom%3CT,+%5BOption%3Ci128%3E%5D%3E-for-Series"],[5116,"impl-NamedFrom%3CT,+%5BOption%3CSeries%3E%5D%3E-for-Series"],[5117,"impl-NamedFrom%3CT,+ListType%3E-for-Series"],[5118,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-Series"],[5119,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-Series"],[5120,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-Series"],[5121,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-Series"],[5122,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-Series"],[5123,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-Series"],[5124,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-Series"],[5125,"impl-NamedFrom%3CT,+T%3E-for-Series"],[5130,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[5131,"impl-ChunkCompare%3CRhs%3E-for-Series"],[5132,"impl-ChunkCompare%3C%26str%3E-for-Series"],[5133,"impl-ChunkCompare%3CRhs%3E-for-Series"],[5134,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[5135,"impl-ChunkCompare%3C%26str%3E-for-Series"],[5144,"impl-Rem%3CT%3E-for-Series"],[5145,"impl-Rem%3CT%3E-for-%26Series"],[5146,"impl-Rem-for-%26Series"],[5178,"impl-Sub%3CT%3E-for-%26Series"],[5179,"impl-Sub%3CT%3E-for-Series"],[5180,"impl-Sub-for-%26Series"],[5181,"impl-Sub-for-Series"],[5202,"impl-TryFrom%3C(%26Field,+Box%3Cdyn+Array%3E)%3E-for-Series"],[5203,"impl-TryFrom%3C(%26Field,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[5205,"impl-TryFrom%3C(%26str,+Box%3Cdyn+Array%3E)%3E-for-Series"],[5206,"impl-TryFrom%3C(%26str,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[5403,"impl-FromIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[5404,"impl-FromIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[5406,"impl-FromTrustedLenIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[5407,"impl-FromTrustedLenIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[5409,"impl-FromIteratorReversed%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[5410,"impl-FromIteratorReversed%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"]],"c":"OjAAAAEAAAAAAAwAEAAAAGIOrg7rDu4O7w7wDvEO8g73DvoO/w4ADyUP","e":"OzAAAAEAADoQEQIAAAQABgACAAsAAAANAAAAEgACABcAAAAcAAIAIgAHACsADAA/AAAAQgABAEUABQBNAAEAUAAAAFIAAABUAAsAYgAEAGoAAwBvAAEAdQANAIQAAwCJAAEAjAAFAJQAAQCYAAYAoQADAKcAAwCsAAUAswABALgABQDAAAIAxwAEAM0AAwDUAAIA2QABANwABgDkAAAA6QAMAPsAAwABAQYACQEbACgBAwAtAQAALwEEADUBAQA7AQAAPQEEAEMBAABIAQUAUAEBAFQBAgBYAQoAaQEBAG8BAABzAQgAfQEIAIcBAACJAQUAkQEAAJMBIwC4ASkA5gECAOwBJwAaAgUAJAIAACYCJgBPAkwAowIMALcCJADfAg8A8AIBAPMCGQAQAwkAHAMBACADAQAjAxUAOgMJAEUDCgBaAwAAXQMAAGIDIQCIAxIAnQMAAJ8DCQCrAwMAsQMBALUDDQDNAwAAzwMAANIDAQDYAwcA4QMHAPYDAQD6AwAA/QMDAAUEBQAMBAQAGAQLACsEBAAyBA0AQgQGAEwECABWBAEAWgQWAHIEBwB7BAAAfQQAAH8EAACBBAEAhgQQAJgEAACaBAAAnQQCAKEEAgClBAIAqQQHALIEAAC0BAUAvAQBAL8EAADBBAEAxAQDAMkEAwDOBAIA0gQDANgEAADbBAAA4wQAAOgEAADrBAEA8AQBAPMEAAD2BAAAAAUAAAkFAgAPBQcAGQUCAB4FAQAhBQAAIwUBACkFAQAsBQEAMwUBADkFAAA8BQAAPwUAAEEFAABDBQAARQUAAEoFBABRBQEAVAUHAF0FAQBgBQAAZAUAAGYFAwBrBQEAbgUFAHoFFwCTBQEAlwUEAJ0FAwCkBQcArwUSAMQFCwDRBQAA0wUEAOQFCQD6BQ0ACgYCAA4GBQAWBgAAGAYNACkGAAArBgAAMAYBADMGAAA1BgIAOQYAADsGAAA+BgAAQQYAAEMGAQBGBgAASAYCAEwGDABaBgAAXAYBAF8GAABhBgEAZAYAAGYGAQBpBgAAawYBAG4GAwB1BgAAeQYBAH0GAACABgAAggYAAIQGAwCJBgAAjAYIAJYGAQCZBgQAoAYBAKQGAACmBgAAqwYCAK8GAQCyBgAAtAYBALcGAAC5BgEAvAYAAL4GAQDBBgAAwwYBAMYGAADIBgAAywY7AA0HBAAUBwkAHwcEACUHAwAqBwQAMAcAADIHXwCTB4UAGggHACMIdgCbCAAAnQhHAO0IBAD0CAIA+QgCABIJAQAVCRcAMQkkAFgJBgBhCR4AhglAAMkJAADtCQoA+gkAAPwJAQD/CQEAAgoAAAcKBQAOCgAAEQoCABYKAwAbCgAAHQodADwKCQBHCg0AVgoeAHYKBwB/ChoAmwoVALIKCwC/CgAAxAoAAMYKAADLCh0A6woEAPEKUQBECyoAcAtMAL4LBADECwEAxwsCAMsLBADRCyQA/QsCAAEMCQAPDAMAFAwXAC4MAQAxDAQANwwNAEYMBQBNDAAATwwYAGkMAQBvDAIAdAwBAHgMCQCDDAQAiQwBAI4MAACQDAIAlAwBAJcMAACZDAEAnwwEAKUMBACrDBAAvQwKAMoMAwDQDAQA1gwmAP4MBQAFDQkAEg0AABUNCgAhDQUALA0WAEUNEwBiDQEAZg0CAGoNAABsDQAAcQ0DAHoNAACJDQAAjA0BAJQNDACnDQEArQ0AALANAAC0DQMAvA0BAMYNAgDODQAA0Q0AANcNAADgDQIA5A0AAOgNBQD0DQMA+w0GAAQOCQAPDgAAFQ4EACEODgAxDgIANQ4AADcOCQBCDgEARQ4DAEoOAwBPDgkAWg4HAGMOAQBmDh0AhQ4oAK8OBgC6DgIAvw4AAMIOAwDIDgAAzQ4HAN0ODQDsDgEA8w4DAPgOAQD8DgIAAQ8AAAMPHwAmDwwANQ8FADwPBwBFDxYAXg8OAG4PDwB/DwAAgg8DAIkPBgCTDw4ApA8BAKcPEQC7DwQAww8FAMsPCQDWDwIA2w8HAOQPCwDxDwMA9g8WAA4QBwAXEAUAHhAWADgQEQBLEAAATRABAFEQHABwEAIAdBAkAJoQBgCkEAEArBAiANIQAgDWEAwA5BAbAAIRFQAaEQAAIREAADERAAA3EQAAOhEAAEERAABEEQAASRECAE0RBQBVEREAdxEDAHwRAgCAEQEAgxEBAJ4RAgCkEQQAqxEAAK4RBwC4EQAAuhEBAL8RLQD1EQAA9xEMAAUSAAAHEgwAGRIJACUSBgAtEgAALxIdAE4SAABQEgsAXRIAAF8SAQBoEhAAehIAAHwSDACLEgcAlBIMAKISBACtEgAArxIBALISAQC2EgEAyhIAAMwSAADOEgAA0hIDANgSBQDfEgQA5RIFAO0SBAD3EgAA/RICAAUTBQAMEwkAGRMDAB4TAAAiEwIAJhMEAC0TEgBEEwEARxMBAEoTAQBOEwIAWxMDAGITAABmEwEAaRMfAIwTAACOEwEAlhMAAJgTAACaEwEAnRMAAKMTAQCmEwMArhMDALoTAwC/EwAAwRMAAMUTAADHEwAAyRMBANATAADYEwMA3hMAAOITCADsExoACRQBAAwUAgAQFAAAExQBABkUAgAeFAAAIBQAACQUAgArFAEALhQAADAUAQAzFAAAORQAADsUAwBLFAEAThQOAF4UBABqFAAAbxQDAHQUAAB3FAsAhBQAAIYUAACIFAQAjhQaAKwUAgCxFBAAwxQBAMYUCgDSFAYA2xQAAN4UAADhFBEA9BQCAPkUEAAMFQoAGxUJACYVCAAzFQkAPhUFAEYVAABIFQEASxUDAFAVCwBdFQQA"}],\
["polars_io",{"t":"KFFKKKNNECNNNNNNNNNNCCNNNNNNNNNONNNNNNNNCMMNNNNNNCONNNNCCCOCMMMOCCCCCCONNNNNNNNONNCNNMGFFGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFNNNNNNNOHNNNNNNNNNNNNNNNNNONNNNNNNNNNHNNNNNNNNNNNHCONONNNNNNNNNNNNNNNNPPPGPPPPGPPPPPPPPFGPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCPPFGGFFFPPPGFPPNNNNNNNNNNNNNNNNNNNNNNNNCONNNNNNNNNNNNNNNNOOHONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNONNNNNOEONNNNNNNNNNNNNNNNNONOOONNNNNNOOOOOOOOOOCOONNNNNOONNNNNONNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPGPFPPFPPPPPPPPPPPPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNOOOFNNNNNNNNNNHNNNNHHNNNNNNNNNPFFFPPPGFNNNONNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNONONNNNNNNNNNOONNOOOONNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNJJFNNNNNNHNHNNNNNNNNNFGFFFFFFFFFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFPGPFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPKPGNNNNNNHNNNNNNNNNNNCHFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCCFIFNNNNNNNNNOONNNNHONNNNNNNNNNNNNNOOOOOONONNNNNNNNONNPFPPGFFFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNFPFPFPPGFFIPFPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONOONNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHJHHHHHHKFNNNNNNNNHNNMNNNNHNNHFFKKNNHNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNKKEMMMMNNNEJJJJSCHEHHHCHCSSSSSH","n":["ArrowReader","HiveOptions","RowIndex","SerReader","SerWriter","WriteDataFrameToFile","__clone_box","__clone_box","async_glob","avro","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_to_uninit","clone_to_uninit","cloud","csv","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","enabled","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","file_cache","finish","finish","fmt","fmt","from","from","hash","hash","hive","hive_start_idx","init","init","into","into","ipc","json","mmap","name","ndjson","new","new","next_record_batch","offset","parquet","partition","path_utils","pl_async","predicates","prelude","schema","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","try_parse_dates","type_id","type_id","utils","vzip","vzip","write_df_to_file","AvroCompression","AvroReader","AvroWriter","Compression","Deflate","Deflate","Snappy","Snappy","__clone_box","arrow_schema","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","finish","finish","fmt","from","from","from","hash","init","init","init","into","into","into","new","new","schema","set_rechunk","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","with_columns","with_compression","with_n_rows","with_name","with_projection","CloudLocation","CloudWriter","PolarsObjectStore","__clone_box","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bucket","build_object_store","clone","clone_into","clone_to_uninit","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","download","drop","drop","drop","drop","eq","execute","expansion","flush","fmt","fmt","from","from","from","from_url","get","get_range","get_ranges","glob","head","init","init","init","into","into","into","new","new","new","new_with_object_store","object_path_from_str","options","prefix","queue","scheme","sync_update","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","write","write_varint","AccessKey","AccessKeyId","AccountName","AmazonS3ConfigKey","ApplicationCredentials","AuthorityId","Aws","Azure","AzureConfigKey","Bucket","Bucket","Checksum","Client","Client","Client","ClientId","ClientSecret","CloudOptions","CloudType","ConditionalPut","ContainerCredentialsRelativeUri","ContainerName","CopyIfNotExists","DefaultRegion","DisableTagging","DisableTagging","Encryption","Endpoint","Endpoint","FederatedTokenFile","File","Gcp","GoogleConfigKey","Hf","Http","ImdsV1Fallback","MetadataEndpoint","MsiEndpoint","MsiResourceId","ObjectId","Region","S3Express","SasKey","SecretAccessKey","ServiceAccount","ServiceAccountKey","SkipSignature","SkipSignature","Token","Token","UnsignedPayload","UseAzureCli","UseEmulator","UseFabricEndpoint","VirtualHostedStyleRequest","__clone_box","__clone_box","__clone_box","__clone_box","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_aws","build_azure","build_gcp","build_http","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","file_cache_ttl","fmt","fmt","fmt","fmt","from","from","from","from","from","from_str","from_str","from_str","from_str","from_untyped_config","hash","hash","hash","hash","init","init","init","init","init","into","into","into","into","into","max_retries","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_aws","with_azure","with_gcp","with_max_retries","read","write","AllColumns","AllColumnsSingle","BatchedCsvReader","CommentPrefix","CsvEncoding","CsvParseOptions","CsvReadOptions","CsvReader","LossyUtf8","Multi","Named","NullValues","OwnedBatchedCsvReader","Single","Utf8","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_with_predicate","batched","batched_borrowed","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","chunk_size","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","columns","comment_prefix","count_rows","decimal_comma","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","dtype_overwrite","encoding","eol_char","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fields_to_cast","finish","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","get_parse_options","has_header","hash","hash","hash","hash","hash","ignore_errors","infer_file_schema","infer_schema_length","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_reader_with_file_handle","low_memory","map_parse_options","missing_is_null","n_rows","n_threads","new","new_from_str","new_multi","new_single","next_batches","next_batches","null_values","parse_options","path","projection","quote_char","raise_if_empty","rechunk","row_index","sample_size","schema","schema_inference","schema_overwrite","separator","serialize","serialize","serialize","serialize","serialize","skip_rows","skip_rows_after_header","to_owned","to_owned","to_owned","to_owned","to_owned","truncate_ragged_lines","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_reader_with_file_path","try_parse_dates","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_with_inference_result","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_chunk_size","with_columns","with_comment_prefix","with_decimal_comma","with_dtype_overwrite","with_encoding","with_eol_char","with_has_header","with_ignore_errors","with_infer_schema_length","with_low_memory","with_missing_is_null","with_n_rows","with_n_threads","with_null_values","with_parse_options","with_path","with_projection","with_quote_char","with_raise_if_empty","with_rechunk","with_row_index","with_sample_size","with_schema","with_schema_overwrite","with_separator","with_skip_rows","with_skip_rows_after_header","with_truncate_ragged_lines","with_try_parse_dates","Boolean","Buffer","Categorical","CategoricalField","Date","Datetime","DatetimeField","DecimalFloat32","DecimalFloat64","Float32","Float64","Int16","Int32","Int64","Int8","UInt16","UInt32","UInt64","UInt8","Utf8","Utf8Field","add","add_null","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","dtype","from","from","from","from","init","init","init","init","init_buffers","into","into","into","into","into_series","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","buf","time_unit","time_zone","SchemaInferenceResult","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","finish_infer_field_schema","fmt","from","get_estimated_n_rows","get_inferred_schema","infer_field_schema","infer_file_schema","init","into","to_owned","try_from","try_from_reader_bytes_and_options","try_into","type_id","vzip","with_inferred_schema","Always","BatchedWriter","CsvWriter","CsvWriterOptions","Necessary","Never","NonNumeric","QuoteStyle","SerializeOptions","__clone_box","__clone_box","__clone_box","batch_size","batched","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","date_format","datetime_format","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","finish","float_precision","float_scientific","fmt","fmt","fmt","from","from","from","from","from","hash","hash","hash","include_bom","include_bom","include_header","include_header","init","init","init","init","init","into","into","into","into","into","line_terminator","maintain_order","n_threads","new","null","quote_char","quote_style","separator","serialize","serialize","serialize","serialize_options","time_format","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_batch_size","with_date_format","with_datetime_format","with_float_precision","with_float_scientific","with_line_terminator","with_null_value","with_quote_char","with_quote_style","with_separator","with_time_format","write_batch","FILE_CACHE","FILE_CACHE_PREFIX","FileCacheEntry","borrow","borrow_mut","deref","deref_mut","drop","from","get_env_file_cache_ttl","init","init_entries_from_uri_list","into","try_from","try_into","try_open_assume_latest","try_open_check_latest","type_id","update_ttl","uri","vzip","BatchedWriter","IpcCompression","IpcReadOptions","IpcReader","IpcReaderAsync","IpcScanOptions","IpcStreamReader","IpcStreamWriter","IpcStreamWriterOption","IpcWriter","IpcWriterOptions","LZ4","ZSTD","__clone_box","__clone_box","__clone_box","__clone_box","arrow_schema","batched","batched_async","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","compression","count_rows","data","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","finish","finish","finish","finish","finish_with_scan_ops","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_uri","hash","hash","hash","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","maintain_order","memory_map","memory_mapped","metadata","new","new","new","new","new","new_async","schema","schema","serialize","serialize","serialize","set_rechunk","set_rechunk","to_owned","to_owned","to_owned","to_owned","to_writer","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_columns","with_columns","with_compat_level","with_compat_level","with_compression","with_compression","with_compression","with_extension","with_hive_partition_columns","with_include_file_path","with_n_rows","with_n_rows","with_predicate","with_projection","with_projection","with_projection","with_row_index","with_row_index","with_row_index","with_row_limit","write_batch","write_df_to_file","BatchedWriter","Json","JsonFormat","JsonLines","JsonReader","JsonWriter","JsonWriterOptions","__clone_box","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","finish","finish","fmt","from","from","from","from","from","hash","infer_schema_len","init","init","init","init","init","into","into","into","into","into","maintain_order","new","new","new","serialize","set_rechunk","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_batch_size","with_ignore_errors","with_json_format","with_json_format","with_projection","with_schema","with_schema_overwrite","write_batch","Borrowed","Mapped","MmapBytesReader","Owned","ReaderBytes","borrow","borrow_mut","deref","deref","deref_mut","drop","ensure_not_mapped","from","from","init","into","into_mem_slice","to_bytes","to_file","try_from","try_into","type_id","vzip","core","infer_schema","JsonLineReader","StructArray","__clone_box","_split_at_unchecked","arced","arr_from_iter","arr_from_iter","arr_from_iter_with_dtype","arr_from_iter_with_dtype","as_any","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","boxed","check_bound","clone","clone_into","clone_to_uninit","count","data_type","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","fields","finish","fmt","from","from","from","from","from_path","full_null","get_fields","infer_schema_len","init","init","into","into","into_data","into_iter","iter","len","low_memory","new","new","new_empty","new_null","propagate_nulls","set_validity","slice","slice","slice_typed","slice_typed_unchecked","slice_unchecked","slice_unchecked","sliced","sliced_unchecked","split_at_boxed","split_at_boxed_unchecked","take_validity","to_boxed","to_owned","tot_eq_kernel","tot_eq_kernel_broadcast","tot_ne_kernel","tot_ne_kernel_broadcast","try_arr_from_iter","try_arr_from_iter","try_arr_from_iter_with_dtype","try_arr_from_iter_with_dtype","try_from","try_from","try_into","try_into","try_new","type_id","type_id","validity","validity","values","values_iter","vzip","vzip","with_chunk_size","with_ignore_errors","with_n_rows","with_n_threads","with_path","with_predicate","with_projection","with_rechunk","with_row_index","with_schema","with_schema_overwrite","with_validity","with_validity","with_validity_typed","metadata","read","write","FileMetaData","FileMetaDataRef","ParquetStatistics","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","clone_to_uninit","column_order","column_orders","created_by","deref","deref","deref_mut","deref_mut","deserialize","distinct_count","drop","drop","eq","fmt","fmt","from","from","from","init","init","into","into","into_thrift","key_value_metadata","key_value_metadata","max_value","min_value","null_count","num_rows","row_groups","schema","schema_descr","to_owned","try_from","try_from","try_from_thrift","try_into","try_into","type_id","type_id","version","vzip","vzip","Auto","BatchedParquetReader","Columns","None","ParallelStrategy","ParquetAsyncReader","ParquetOptions","ParquetReader","RowGroups","__clone_box","__clone_box","batched","batched","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_schema","check_schema","clone","clone","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","finish","finishes_this_batch","fmt","fmt","from","from","from","from","from","from_uri","get_metadata","get_metadata","hash","hash","init","init","init","init","init","into","into","into","into","into","is_finished","iter","low_memory","materialize_empty_df","new","new","next_batches","num_rows","num_rows","parallel","read_parallel","read_parallel","schema","schema","schema","serialize","serialize","set_low_memory","set_rechunk","set_rechunk","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","use_statistics","use_statistics","use_statistics","vzip","vzip","vzip","vzip","vzip","with_columns","with_hive_partition_columns","with_hive_partition_columns","with_include_file_path","with_include_file_path","with_predicate","with_predicate","with_projection","with_projection","with_row_index","with_row_index","with_slice","with_slice","BatchedWriter","Brotli","BrotliLevel","Gzip","GzipLevel","Lz4Raw","Lzo","ParquetCompression","ParquetWriteOptions","ParquetWriter","RowGroupIterColumns","Snappy","StatisticsOptions","Uncompressed","Zstd","ZstdLevel","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","batched","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","compression","data_page_size","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","distinct_count","drop","drop","drop","drop","drop","drop","drop","drop","empty","encode_and_compress","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","finish","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","full","get_writer","hash","hash","hash","hash","hash","hash","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","is_empty","is_full","maintain_order","max_value","min_value","new","null_count","row_group_size","serialize","serialize","serialize","serialize","serialize","serialize","set_parallel","statistics","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_writer","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_new","try_new","try_new","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_compression","with_data_page_size","with_row_group_size","with_statistics","write_batch","write_df_to_file","write_row_groups","write_partitioned_dataset","POLARS_TEMP_DIR_BASE_PATH","expand_paths","expand_paths_hive","expanded_from_single_directory","get_glob_start_idx","is_cloud_url","resolve_homedir","GetSize","RuntimeManager","block_on","block_on_potential_spawn","borrow","borrow_mut","deref","deref_mut","drop","from","get_runtime","init","into","size","spawn","spawn_blocking","try_from","try_into","tune_with_concurrency_budget","type_id","vzip","with_concurrency_budget","BatchStats","ColumnStats","PhysicalIoExpr","StatsEvaluator","__clone_box","__clone_box","apply_predicate","as_stats_evaluator","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_to_uninit","clone_to_uninit","column_stats","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","dtype","evaluate_io","field_name","fmt","fmt","from","from","from_column_literal","from_field","get_max_state","get_min_state","get_null_count_state","get_stats","init","init","into","into","new","new","null_count","num_rows","schema","serialize","serialize","should_read","take_indices","to_max","to_min","to_min_max","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_schema","SerReader","SerWriter","cloud","finish","finish","new","new","set_rechunk","set_rechunk","set_rechunk","write_partitioned_dataset","BOOLEAN_RE","FLOAT_RE","FLOAT_RE_DECIMAL","INTEGER_RE","URL_ENCODE_CHAR_SET","compression","get_reader_bytes","is_compressed","materialize_projection","maybe_decompress_bytes","overwrite_schema","slice","is_compressed","magic","GZIP","ZLIB0","ZLIB1","ZLIB2","ZSTD","split_slice_at_file"],"q":[[0,"polars_io"],[86,"polars_io::avro"],[154,"polars_io::cloud"],[227,"polars_io::cloud::options"],[417,"polars_io::csv"],[419,"polars_io::csv::read"],[680,"polars_io::csv::read::buffer"],[754,"polars_io::csv::read::buffer::Buffer"],[757,"polars_io::csv::read::schema_inference"],[784,"polars_io::csv::write"],[930,"polars_io::file_cache"],[951,"polars_io::ipc"],[1193,"polars_io::json"],[1291,"polars_io::mmap"],[1314,"polars_io::ndjson"],[1316,"polars_io::ndjson::core"],[1420,"polars_io::parquet"],[1423,"polars_io::parquet::metadata"],[1476,"polars_io::parquet::read"],[1618,"polars_io::parquet::write"],[1848,"polars_io::partition"],[1849,"polars_io::path_utils"],[1856,"polars_io::pl_async"],[1878,"polars_io::predicates"],[1945,"polars_io::prelude"],[1956,"polars_io::utils"],[1968,"polars_io::utils::compression"],[1970,"polars_io::utils::compression::magic"],[1975,"polars_io::utils::slice"],[1976,"dyn_clone::sealed"],[1977,"polars_io::options"],[1978,"core::result"],[1979,"serde::de"],[1980,"polars_io::shared"],[1981,"polars_core::frame"],[1982,"polars_error"],[1983,"core::fmt"],[1984,"core::hash"],[1985,"std::io"],[1986,"polars_arrow::record_batch"],[1987,"core::option"],[1988,"serde::ser"],[1989,"core::any"],[1990,"polars_io::avro::read"],[1991,"polars_arrow::datatypes::schema"],[1992,"polars_io::avro::write"],[1993,"polars_core::schema"],[1994,"alloc::string"],[1995,"alloc::vec"],[1996,"polars_io::cloud::glob"],[1997,"object_store"],[1998,"alloc::sync"],[1999,"polars_io::cloud::polars_object_store"],[2000,"object_store::path"],[2001,"tokio::io::async_write"],[2002,"core::marker"],[2003,"polars_io::cloud::adaptors"],[2004,"std::io::error"],[2005,"crossterm::command"],[2006,"url"],[2007,"bytes::bytes"],[2008,"core::ops::range"],[2009,"core::ops::function"],[2010,"parquet_format_safe::thrift::varint::decode"],[2011,"object_store::aws::builder"],[2012,"object_store::azure::builder"],[2013,"object_store::gcp::builder"],[2014,"core::convert"],[2015,"core::iter::traits::collect"],[2016,"polars_io::csv::read::reader"],[2017,"alloc::boxed"],[2018,"polars_io::csv::read::read_impl::batched"],[2019,"polars_io::csv::read::options"],[2020,"std::path"],[2021,"std::fs"],[2022,"polars_core::datatypes::dtype"],[2023,"polars_core::series"],[2024,"polars_utils::aliases"],[2025,"polars_io::csv::write::writer"],[2026,"polars_io::csv::write::options"],[2027,"core::num::nonzero"],[2028,"polars_io::file_cache::entry"],[2029,"polars_io::ipc::ipc_stream"],[2030,"polars_io::ipc::write"],[2031,"futures_io::if_std"],[2032,"polars_io::ipc::ipc_file"],[2033,"polars_io::ipc::ipc_reader_async"],[2034,"polars_arrow::io::ipc::read::file"],[2035,"polars_utils::mmap::private"],[2036,"polars_arrow::array::struct_"],[2037,"polars_arrow::array"],[2038,"polars_arrow::datatypes"],[2039,"polars_arrow::datatypes::field"],[2040,"polars_arrow::array::growable::structure"],[2041,"polars_arrow::array::struct_::mutable"],[2042,"polars_arrow::bitmap::immutable"],[2043,"polars_arrow::scalar"],[2044,"polars_arrow::array::struct_::iterator"],[2045,"polars_arrow::bitmap::utils::iterator"],[2046,"polars_arrow::bitmap::utils::zip_validity"],[2047,"polars_parquet::parquet::metadata::file_metadata"],[2048,"polars_parquet::parquet::metadata::column_order"],[2049,"polars_parquet::parquet::metadata::row_metadata"],[2050,"polars_parquet::arrow::read::statistics"],[2051,"parquet_format_safe::parquet_format"],[2052,"polars_parquet::parquet::metadata::schema_descriptor"],[2053,"polars_parquet::parquet::error"],[2054,"polars_io::parquet::read::reader"],[2055,"polars_io::parquet::read::read_impl"],[2056,"polars_io::parquet::read::options"],[2057,"polars_io::parquet::write::writer"],[2058,"polars_io::parquet::write::batched_writer"],[2059,"polars_io::parquet::write::options"],[2060,"polars_parquet::arrow::write"],[2061,"polars_parquet::parquet::write"],[2062,"core::iter::traits::iterator"],[2063,"polars_parquet::arrow::write::file"],[2064,"std::sync::mutex"],[2065,"core::future::future"],[2066,"tokio::runtime::task::join"],[2067,"smartstring::alias"],[2068,"polars_core::datatypes::field"],[2069,"avro_schema::file"],[2070,"polars_io::cloud::object_store_setup"],[2071,"polars_io::csv::read::parser"],[2072,"polars_io::file_cache::cache"],[2073,"polars_io::file_cache::utils"],[2074,"polars_io::parquet::read::utils"],[2075,"polars_io::utils::other"]],"i":[0,0,0,0,0,0,5,6,0,0,5,6,5,6,5,6,5,6,5,6,0,0,6,5,6,5,6,5,6,5,6,6,5,6,5,5,5,6,6,6,0,11,14,5,6,5,6,5,6,0,6,5,6,5,6,0,0,0,5,0,11,14,20,5,0,0,0,0,0,0,6,5,6,5,6,5,6,5,6,6,5,6,0,5,6,25,0,0,0,0,29,29,29,29,29,26,26,30,29,26,30,29,29,29,29,29,26,30,29,26,30,29,26,30,29,29,29,29,29,26,30,29,26,30,29,29,26,30,29,26,30,29,26,30,26,26,29,26,30,29,26,30,29,26,30,29,26,30,29,26,30,26,30,26,0,0,0,41,45,37,41,45,37,41,37,0,41,41,41,37,45,37,41,45,37,41,41,45,45,37,41,37,45,37,45,37,41,45,37,41,37,41,41,41,0,41,45,37,41,45,37,41,45,37,41,45,0,0,37,45,37,45,41,45,37,41,45,37,41,45,37,41,45,37,41,45,45,59,58,59,0,60,59,61,61,0,58,60,58,58,59,60,59,59,0,0,58,58,59,58,58,58,59,58,58,59,59,61,61,0,61,61,58,58,59,59,59,58,58,59,58,60,60,58,59,58,59,58,59,59,59,58,58,36,59,60,58,59,60,58,36,61,59,60,58,36,61,59,60,36,36,36,36,58,36,59,60,58,36,59,60,58,58,36,59,59,60,60,36,58,36,61,59,60,58,36,61,59,60,58,36,59,60,58,36,61,59,60,58,36,61,59,60,58,58,58,36,36,36,59,59,59,60,60,60,36,58,36,59,60,58,36,61,59,60,58,61,59,60,36,58,36,59,60,58,36,61,59,60,58,36,61,59,60,36,58,36,59,60,58,36,59,60,58,36,61,59,60,58,36,61,59,60,58,36,61,59,60,58,36,61,59,60,36,36,36,36,0,0,77,77,0,0,0,0,0,0,75,76,77,0,0,76,75,73,74,75,76,77,66,66,66,72,71,66,73,74,75,76,77,72,71,66,73,74,75,76,77,0,73,73,74,75,76,77,73,74,75,76,77,73,74,75,75,76,77,73,74,0,74,73,74,75,72,71,66,73,74,75,76,77,72,71,66,73,74,75,76,77,73,74,75,76,77,72,71,66,73,74,75,76,77,73,74,74,73,74,75,76,77,73,73,73,74,74,74,75,75,75,76,76,76,77,77,77,73,66,73,74,75,76,77,72,71,66,73,74,75,76,76,77,73,73,73,74,75,76,77,73,0,73,72,71,66,73,74,75,76,77,72,71,66,73,74,75,76,77,73,73,73,74,73,73,66,76,76,76,72,71,74,73,73,73,74,73,73,73,73,73,0,73,74,73,74,75,76,77,73,73,73,74,75,76,77,74,72,71,66,73,74,75,76,77,72,71,66,73,74,75,76,77,73,74,72,71,66,73,74,75,76,77,73,72,71,66,73,74,75,76,77,73,73,74,74,73,74,74,73,73,73,73,74,73,73,74,73,73,73,74,73,73,73,73,73,73,74,73,73,74,74,83,0,83,0,83,83,0,83,83,83,83,83,83,83,83,83,83,83,83,83,0,83,83,174,175,176,83,174,175,176,83,174,175,176,83,174,175,176,83,174,175,176,83,83,174,175,176,83,174,175,176,83,0,174,175,176,83,83,174,175,176,83,174,175,176,83,174,175,176,83,174,175,176,83,177,177,177,0,81,81,81,81,81,81,81,81,81,81,0,81,81,81,81,0,0,81,81,81,81,81,81,81,81,81,91,0,0,0,91,91,91,0,0,89,90,91,89,87,87,88,89,90,91,87,88,89,90,91,89,90,91,89,90,91,89,90,91,91,90,90,89,90,91,87,88,89,90,91,87,88,89,90,91,89,90,91,87,88,89,90,91,89,90,91,89,89,89,90,90,90,91,91,91,87,88,90,90,89,90,91,87,88,89,90,91,89,90,91,87,89,87,89,87,88,89,90,91,87,88,89,90,91,90,89,87,87,90,90,90,90,89,90,91,89,90,89,90,91,87,88,89,90,91,87,88,89,90,91,87,88,89,90,91,87,88,89,90,91,87,87,87,87,87,87,87,87,87,87,87,88,0,0,0,94,94,94,94,94,94,0,94,0,94,94,94,94,94,94,94,94,94,0,0,0,0,0,0,0,0,0,0,0,103,103,100,101,102,103,95,96,96,108,104,95,109,107,96,97,100,101,102,103,108,104,95,109,107,96,97,100,101,102,103,100,101,102,103,100,101,102,103,100,101,102,102,103,103,102,104,104,107,101,102,103,108,104,95,109,107,96,97,100,101,102,103,108,104,95,109,107,96,97,100,101,102,103,100,102,103,108,104,95,109,107,96,97,100,101,102,103,100,102,103,102,102,102,103,103,103,108,95,109,96,97,108,100,102,103,108,104,95,109,107,96,97,100,101,102,103,104,100,102,103,108,104,95,109,107,96,97,100,101,102,103,108,104,95,109,107,96,97,100,101,102,103,102,100,108,104,108,95,109,107,96,96,108,95,100,102,103,108,95,100,101,102,103,102,108,104,95,109,107,96,97,100,101,102,103,108,104,95,109,107,96,97,100,101,102,103,108,104,95,109,107,96,97,100,101,102,103,108,104,95,109,107,96,97,100,101,102,103,108,95,109,96,109,107,96,107,108,108,108,95,101,108,95,101,108,95,101,101,97,102,0,116,0,116,0,0,0,112,116,113,115,114,112,116,113,115,114,112,112,112,112,112,112,116,113,115,114,112,116,113,115,114,112,112,116,113,115,114,112,112,112,112,112,113,114,112,116,113,115,114,112,112,114,116,113,115,114,112,116,113,115,114,112,112,113,115,114,112,114,112,116,113,115,114,112,116,113,115,114,112,116,113,115,114,112,116,113,115,114,112,114,114,113,114,114,114,114,115,86,86,0,86,0,86,86,86,86,86,86,0,86,86,86,86,86,68,68,86,86,86,86,0,0,0,0,119,119,119,119,119,119,119,119,119,123,119,123,119,119,119,119,119,119,123,119,123,119,123,119,123,119,119,119,119,123,119,123,119,119,119,123,119,119,123,123,119,123,119,119,119,119,119,123,123,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,123,119,123,119,119,123,119,119,119,119,119,123,119,123,123,123,123,123,123,123,123,123,123,123,119,119,119,0,0,0,0,0,0,133,136,133,136,133,133,133,133,133,133,133,136,133,136,133,0,136,136,133,136,136,133,136,136,133,136,133,136,133,133,133,133,136,136,136,133,133,133,133,133,136,133,133,136,133,136,133,133,136,133,146,0,146,146,0,0,0,0,146,145,146,142,144,143,142,144,145,146,143,142,144,145,146,142,144,145,146,145,146,145,145,146,146,146,143,142,144,145,146,143,142,144,145,146,145,146,143,142,144,145,146,145,146,145,145,145,146,146,146,142,144,143,145,146,143,142,144,145,146,144,142,144,145,146,143,142,144,145,146,143,142,144,145,146,143,143,145,0,143,142,143,142,144,145,142,144,143,142,144,145,146,142,142,144,145,146,143,142,144,145,146,143,142,144,145,146,143,142,144,145,146,142,144,145,143,142,144,145,146,142,142,144,142,144,142,144,142,144,142,144,142,144,0,151,0,151,0,151,151,0,0,0,0,151,0,151,151,0,150,151,152,153,154,155,148,149,148,150,151,152,153,154,155,149,148,150,151,152,153,154,155,150,151,152,153,154,155,150,151,152,153,154,155,150,150,151,151,152,152,153,153,154,154,155,155,150,150,150,151,155,149,148,150,151,152,153,154,155,149,148,150,151,152,153,154,155,150,151,152,153,154,155,155,149,148,150,151,152,153,154,155,155,149,150,151,152,153,154,155,150,150,150,151,151,151,152,152,152,153,153,153,154,154,154,155,155,155,149,148,150,151,152,153,154,155,149,148,150,151,152,153,154,155,155,149,150,151,152,153,154,155,149,148,150,151,152,153,154,155,149,148,150,151,152,153,154,155,155,155,150,155,155,148,155,150,150,151,152,153,154,155,148,150,150,151,152,153,154,155,150,149,148,150,151,152,153,154,155,149,148,150,151,152,153,154,155,152,153,154,149,148,150,151,152,153,154,155,149,148,150,151,152,153,154,155,148,148,148,148,149,150,149,0,0,0,0,0,0,0,0,0,0,164,164,164,164,164,164,164,164,0,164,164,166,164,164,164,164,0,164,164,0,0,0,0,0,169,170,0,67,169,170,169,170,169,170,169,170,169,170,170,169,170,169,170,169,170,169,170,169,67,169,169,170,169,170,169,169,169,169,169,170,169,170,169,170,169,170,169,170,170,169,170,168,170,169,169,169,169,170,169,170,169,170,169,170,169,170,170,0,0,0,11,14,11,14,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":"``````{{{b{c}}d}f{}}0``{{{b{c}}}{{b{e}}}{}{}}0{{{b{hc}}}{{b{he}}}{}{}}0{{{b{j}}}j}{{{b{l}}}l}{{{b{c}}{b{he}}}f{}{}}0{{{b{c}}}f{}}0``{{}l}{n{{b{c}}}{}}0{n{{b{hc}}}{}}0{c{{A`{j}}}Ab}{c{{A`{l}}}Ab}{nf}0`{{{b{j}}{b{j}}}Ad}{{{b{l}}{b{l}}}Ad}{{{b{c}}{b{e}}}Ad{}{}}00000`{Af{{Aj{Ah}}}}{{{b{hAl}}{b{hAh}}}{{Aj{f}}}}{{{b{j}}{b{hAn}}}B`}{{{b{l}}{b{hAn}}}B`}{cc{}}0{{{b{j}}{b{hc}}}fBb}{{{b{l}}{b{hc}}}fBb}``{{}n}0{ce{}{}}0`````{cAfBd}{cAlBf}{{{b{hBh}}}{{Aj{{Bl{Bj}}}}}}````````{{{b{j}}c}A`Bn}{{{b{l}}c}A`Bn}{{{b{c}}}e{}{}}0{c{{A`{e}}}{}{}}000`{{{b{c}}}C`{}}0`88{{{b{Cb}}Ahc}{{Aj{f}}}Bf}````````{{{b{c}}d}f{}}{{{b{h{Cd{c}}}}}{{Aj{Cf}}}{BdCh}}{{{b{c}}}{{b{e}}}{}{}}00{{{b{hc}}}{{b{he}}}{}{}}00{{{b{Cj}}}Cj}{{{b{c}}{b{he}}}f{}{}}{{{b{c}}}f{}}0{n{{b{c}}}{}}00{n{{b{hc}}}{}}00{nf}00{{{b{Cj}}{b{Cj}}}Ad}{{{b{c}}{b{e}}}Ad{}{}}00{{{Cd{c}}}{{Aj{Ah}}}{BdCh}}{{{b{h{Cl{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{b{Cj}}{b{hAn}}}{{A`{fCn}}}}{cc{}}00{{{b{Cj}}{b{hc}}}fBb}{{}n}00{ce{}{}}00{c{{Cd{c}}}{BdCh}}{c{{Cl{c}}}Bf}{{{b{h{Cd{c}}}}}{{Aj{D`}}}{BdCh}}{{{Cd{c}}Ad}{{Cd{c}}}{BdCh}}{{{b{c}}}e{}{}}{c{{A`{e}}}{}{}}00000{{{b{c}}}C`{}}00777{{{Cd{c}}{Bl{{Dd{Db}}}}}{{Cd{c}}}{BdCh}}{{{Cl{c}}{Bl{Cj}}}{{Cl{c}}}Bf}{{{Cd{c}}{Bl{n}}}{{Cd{c}}}{BdCh}}{{{Cl{c}}Db}{{Cl{c}}}Bf}{{{Cd{c}}{Bl{{Dd{n}}}}}{{Cd{c}}}{BdCh}}```{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}00{{{b{hc}}}{{b{he}}}{}{}}00`{{{b{Df}}{Bl{{b{Dh}}}}Ad}{{Aj{{E`{Dj{Dn{Dl}}}}}}}}{{{b{Eb}}}Eb}{{{b{c}}{b{he}}}f{}{}}{{{b{c}}}f{}}{{}Dj}{n{{b{c}}}{}}00{n{{b{hc}}}{}}00{{{b{Eb}}{b{Ed}}{b{hc}}}{{Aj{f}}}{EfEh}}{{{b{hEj}}}f}{nf}00{{{b{Dj}}{b{Dj}}}Ad}{{{b{hc}}e}{{A`{{b{hg}}El}}}{}En{}}`{{{b{hEj}}}{{F`{f}}}}{{{b{Dj}}{b{hAn}}}B`}{{{b{Eb}}{b{hAn}}}B`}{cc{}}00{{{b{Fb}}Ad}{{Aj{Dj}}}}{{{b{Eb}}{b{Ed}}}{{Aj{Fd}}}}{{{b{Eb}}{b{Ed}}{Ff{n}}}{{Aj{Fd}}}}{{{b{Eb}}{b{Ed}}{b{{Fh{{Ff{n}}}}}}}{{Aj{{Dd{Fd}}}}}}{{{b{Df}}{Bl{{b{Dh}}}}}{{Aj{{Dd{Db}}}}}}{{{b{Eb}}{b{Ed}}}{{Aj{Fj}}}}{{}n}00{ce{}{}}00{{{b{Df}}{Bl{{b{Dh}}}}}{{Aj{Ej}}}}{{{b{Df}}Ad}{{Aj{Dj}}}}{{{Dn{Dl}}}Eb}{{{Dn{Dl}}Ed}{{Aj{Ej}}}}{{{b{Df}}}{{Aj{Ed}}}}``{{{b{hc}}e}{{A`{{b{hg}}El}}}{}En{}}`{{{b{hc}}i}{{A`{gEl}}}{}{}{}{{Fn{{b{he}}}{{Fl{g}}}}}}{{{b{c}}}e{}{}}{c{{A`{e}}}{}{}}00000{{{b{c}}}C`{}}00:::{{{b{hEj}}{b{{Fh{G`}}}}}{{F`{n}}}}{{{b{hc}}e}{{A`{nEl}}}{}Gb}```````````````````````````````````````````````````````{{{b{c}}d}f{}}000{{{b{Gd}}}{{b{Df}}}}{{{b{Gf}}}{{b{Df}}}}{{{b{Gh}}}{{b{Df}}}}{{{b{c}}}{{b{e}}}{}{}}0000{{{b{hc}}}{{b{he}}}{}{}}0000{{{b{Dh}}{b{Df}}}{{Aj{{`{Dl}}}}}}000{{{b{Gd}}}Gd}{{{b{Dh}}}Dh}{{{b{Gf}}}Gf}{{{b{Gh}}}Gh}{{{b{c}}{b{he}}}f{}{}}000{{{b{c}}}f{}}000000{{}Dh}{n{{b{c}}}{}}0000{n{{b{hc}}}{}}0000{c{{A`{Gd}}}Ab}{c{{A`{Dh}}}Ab}{c{{A`{Gf}}}Ab}{c{{A`{Gh}}}Ab}{nf}0000{{{b{Gd}}{b{Gd}}}Ad}{{{b{Dh}}{b{Dh}}}Ad}{{{b{Gj}}{b{Gj}}}Ad}{{{b{Gf}}{b{Gf}}}Ad}{{{b{Gh}}{b{Gh}}}Ad}{{{b{c}}{b{e}}}Ad{}{}}00000000000`{{{b{Gd}}{b{hAn}}}{{A`{fCn}}}}{{{b{Dh}}{b{hAn}}}B`}{{{b{Gf}}{b{hAn}}}{{A`{fCn}}}}{{{b{Gh}}{b{hAn}}}{{A`{fCn}}}}{cc{}}0000{{{b{Df}}}{{A`{Gd}}}}{{{b{Df}}}{{A`{Gjc}}}{}}{{{b{Df}}}{{A`{Gf}}}}{{{b{Df}}}{{A`{Gh}}}}{{{b{Df}}g}{{Aj{Dh}}}{{Gl{Df}}}{{Gn{Db}}}{{Hb{}{{H`{{E`{ce}}}}}}}}{{{b{Gd}}{b{hc}}}fBb}{{{b{Dh}}{b{hc}}}fBb}{{{b{Gf}}{b{hc}}}fBb}{{{b{Gh}}{b{hc}}}fBb}{{}n}0000{ce{}{}}0000`{{{b{Gd}}c}A`Bn}{{{b{Dh}}c}A`Bn}{{{b{Gf}}c}A`Bn}{{{b{Gh}}c}A`Bn}{{{b{c}}}e{}{}}000{c{{A`{e}}}{}{}}000000000{{{b{c}}}C`{}}000077777{{Dhe}Dh{{Gn{Db}}}{{Hb{}{{H`{{E`{Gdc}}}}}}}}{{Dhe}Dh{{Gn{Db}}}{{Hb{}{{H`{{E`{Gfc}}}}}}}}{{Dhe}Dh{{Gn{Db}}}{{Hb{}{{H`{{E`{Ghc}}}}}}}}{{Dhn}Dh}`````````````````{{{b{c}}d}f{}}0000{{{Hd{c}}{Bl{{Dn{Hf}}}}}{{Hd{c}}}Hh}{{{Hd{{Hj{Hh}}}}{Bl{Hl}}}{{Aj{Hn}}}}{{{b{h{Hd{c}}}}}{{Aj{I`}}}Hh}{{{b{c}}}{{b{e}}}{}{}}0000000{{{b{hc}}}{{b{he}}}{}{}}0000000``{{{b{Ib}}}Ib}{{{b{Id}}}Id}{{{b{If}}}If}{{{b{Ih}}}Ih}{{{b{Ij}}}Ij}{{{b{c}}{b{he}}}f{}{}}0000{{{b{c}}}f{}}00000``{{{b{Il}}G`{Bl{G`}}{Bl{{b{Ih}}}}G`Ad}{{Aj{n}}}}`{{}Ib}{{}Id}{{}If}{n{{b{c}}}{}}0000000{n{{b{hc}}}{}}0000000{c{{A`{Ib}}}Ab}{c{{A`{Id}}}Ab}{c{{A`{If}}}Ab}{c{{A`{Ih}}}Ab}{c{{A`{Ij}}}Ab}{nf}0000000```{{{b{Ib}}{b{Ib}}}Ad}{{{b{Id}}{b{Id}}}Ad}{{{b{If}}{b{If}}}Ad}{{{b{Ih}}{b{Ih}}}Ad}{{{b{Ij}}{b{Ij}}}Ad}{{{b{c}}{b{e}}}Ad{}{}}00000000000000`{{{Hd{c}}}{{Aj{Ah}}}Hh}{{{b{Ib}}{b{hAn}}}B`}{{{b{Id}}{b{hAn}}}B`}{{{b{If}}{b{hAn}}}B`}{{{b{Ih}}{b{hAn}}}B`}{{{b{Ij}}{b{hAn}}}B`}{cc{}}000000{{{b{Df}}}Ih}1{{{b{Ib}}}{{Dn{Id}}}}`{{{b{Ib}}{b{hc}}}fBb}{{{b{Id}}{b{hc}}}fBb}{{{b{If}}{b{hc}}}fBb}{{{b{Ih}}{b{hc}}}fBb}{{{b{Ij}}{b{hc}}}fBb}```{{}n}0000000{ce{}{}}0000000{{Ibc}{{Hd{c}}}Hh}`{{Ibc}Ib{{In{Id}{{Fl{Id}}}}}}```{c{{Hd{c}}}Hh};{DbIh}{G`Ih}{{{b{hI`}}n}{{Aj{{Bl{{Dd{Ah}}}}}}}}{{{b{hHn}}n}{{Aj{{Bl{{Dd{Ah}}}}}}}}`````````````{{{b{Ib}}c}A`Bn}{{{b{Id}}c}A`Bn}{{{b{If}}c}A`Bn}{{{b{Ih}}c}A`Bn}{{{b{Ij}}c}A`Bn}``{{{b{c}}}e{}{}}0000`{c{{A`{e}}}{}{}}000000000000000{{Ib{Bl{Il}}}{{Aj{{Hd{J`}}}}}}`{{{b{c}}}C`{}}0000000{{{b{hIb}}{b{Jb}}}f}{ce{}{}}0000000{{Ibn}Ib}{{Ib{Bl{{Dn{{Fh{Db}}}}}}}Ib}{{Id{Bl{c}}}Id{{Gn{Ih}}}}{{IdAd}Id}{{Ib{Bl{{Dn{{Dd{Jd}}}}}}}Ib}{{IdIf}Id}{{IdG`}Id}{{IbAd}Ib}0{{Ib{Bl{n}}}Ib}1500{{Id{Bl{Ij}}}Id}{{IbId}Ib}{{Ib{Bl{c}}}Ib{{Gn{Il}}}}{{Ib{Bl{{Dn{{Dd{n}}}}}}}Ib}{{Id{Bl{G`}}}Id}66{{Ib{Bl{j}}}Ib}>{{Ib{Bl{Hl}}}Ib}09??<<`````````````````````{{{b{hJf}}{b{{Fh{G`}}}}AdAdAd}{{Aj{f}}}}{{{b{hJf}}Ad}f}{{{b{c}}}{{b{e}}}{}{}}000{{{b{hc}}}{{b{he}}}{}{}}000{n{{b{c}}}{}}000{n{{b{hc}}}{}}000{nf}000{{{b{Jf}}}Jd}{cc{}}000{{}n}000{{{b{{Fh{n}}}}n{b{D`}}{Bl{G`}}IfAd}{{Aj{{Dd{Jf}}}}}}{ce{}{}}000{Jf{{Aj{Jh}}}}{c{{A`{e}}}{}{}}0000000{{{b{c}}}C`{}}0003333````{{{b{c}}d}f{}}=<{{{b{Jb}}}Jb}{{{b{c}}{b{he}}}f{}{}}{{{b{c}}}f{}}{{}Jb}?>={{{b{{Jj{Jd}}}}}Jd}{{{b{Jb}}{b{hAn}}}B`}={{{b{Jb}}}n}{{{b{Jb}}}Hl}{{{b{Df}}AdAd}Jd}{{{b{Jl}}G`{Bl{n}}Ad{Bl{{b{D`}}}}nn{Bl{{b{Ih}}}}{Bl{G`}}G`{Bl{{b{Ij}}}}AdAd{b{h{Bl{n}}}}Ad}{{Aj{{E`{D`nn}}}}}}{{}n}?{{{b{c}}}e{}{}}>{{{b{Jl}}{b{Ib}}}{{Aj{Jb}}}}?>{ce{}{}}{{JbHl}Jb}`````````???`{{{Jn{c}}{b{D`}}}{{Aj{{K`{c}}}}}Bf}{{{b{c}}}{{b{e}}}{}{}}0000{{{b{hc}}}{{b{he}}}{}{}}0000{{{b{Kb}}}Kb}{{{b{Kd}}}Kd}{{{b{Kf}}}Kf}{{{b{c}}{b{he}}}f{}{}}00{{{b{c}}}f{}}000``{{}Kb}{{}Kd}{{}Kf}{n{{b{c}}}{}}0000{n{{b{hc}}}{}}0000{c{{A`{Kb}}}Ab}{c{{A`{Kd}}}Ab}{c{{A`{Kf}}}Ab}{nf}0000{{{b{Kb}}{b{Kb}}}Ad}{{{b{Kd}}{b{Kd}}}Ad}{{{b{Kf}}{b{Kf}}}Ad}{{{b{c}}{b{e}}}Ad{}{}}00000000{{{b{h{Jn{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{b{h{K`{c}}}}}{{Aj{f}}}Bf}``{{{b{Kb}}{b{hAn}}}B`}{{{b{Kd}}{b{hAn}}}B`}{{{b{Kf}}{b{hAn}}}B`}{cc{}}0000{{{b{Kb}}{b{hc}}}fBb}{{{b{Kd}}{b{hc}}}fBb}{{{b{Kf}}{b{hc}}}fBb}{{{Jn{c}}Ad}{{Jn{c}}}Bf}`0`{{}n}0000{ce{}{}}0000``{{{Jn{c}}n}{{Jn{c}}}Bf}{c{{Jn{c}}}Bf}````{{{b{Kb}}c}A`Bn}{{{b{Kd}}c}A`Bn}{{{b{Kf}}c}A`Bn}``{{{b{c}}}e{}{}}00{c{{A`{e}}}{}{}}000000000{{{b{c}}}C`{}}000088888{{{Jn{c}}Kh}{{Jn{c}}}Bf}{{{Jn{c}}{Bl{Db}}}{{Jn{c}}}Bf}0{{{Jn{c}}{Bl{n}}}{{Jn{c}}}Bf}{{{Jn{c}}{Bl{Ad}}}{{Jn{c}}}Bf}{{{Jn{c}}Db}{{Jn{c}}}Bf}0{{{Jn{c}}G`}{{Jn{c}}}Bf}{{{Jn{c}}Kf}{{Jn{c}}}Bf}15{{{b{h{K`{c}}}}{b{Ah}}}{{Aj{f}}}Bf}```{{{b{c}}}{{b{e}}}{}{}}{{{b{hc}}}{{b{he}}}{}{}}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{cc{}}{{}Kj}{{}n}{{{b{{Fh{{Dn{Df}}}}}}{Bl{{b{Dh}}}}}{{Aj{{Dd{{Dn{Kl}}}}}}}}{ce{}{}}{c{{A`{e}}}{}{}}0{{{b{Kl}}}{{Aj{J`}}}}0{{{b{c}}}C`{}}{{{b{Kl}}Kj}f}{{{b{Kl}}}{{b{{Dn{Df}}}}}}5`````````````{{{b{c}}d}f{}}000{{{b{h{Kn{c}}}}}{{Aj{Cf}}}Bd}{{{L`{c}}{b{D`}}}{{Aj{{Lb{c}}}}}Bf}{{{L`{c}}{b{D`}}}{{Aj{{`{c}}}}}{LdEhLf}}{{{b{c}}}{{b{e}}}{}{}}0000000000{{{b{hc}}}{{b{he}}}{}{}}0000000000{{{b{Lh}}}Lh}{{{b{Lj}}}Lj}{{{b{Ll}}}Ll}{{{b{Ln}}}Ln}{{{b{c}}{b{he}}}f{}{}}000{{{b{c}}}f{}}00000`{{{b{M`}}{Bl{{b{Mb}}}}}{{Aj{Md}}}}{{{b{M`}}{Bl{{b{Mb}}}}LjAd}{{Aj{Ah}}}}{{}Mf}{{}Lj}{{}Ll}{{}Ln}{n{{b{c}}}{}}0000000000{n{{b{hc}}}{}}0000000000{c{{A`{Lh}}}Ab}{c{{A`{Ll}}}Ab}{c{{A`{Ln}}}Ab}{nf}0000000000{{{b{Lh}}{b{Lh}}}Ad}{{{b{Ll}}{b{Ll}}}Ad}{{{b{Ln}}{b{Ln}}}Ad}{{{b{c}}{b{e}}}Ad{}{}}00000{{{Mh{c}}}{{Aj{Ah}}}Hh}{{{Kn{c}}}{{Aj{Ah}}}Bd}{{{b{h{Mj{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{b{h{L`{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{b{h{Lb{c}}}}}{{Aj{f}}}Bf}{{{Mh{c}}{Bl{{Dn{Hf}}}}Ad}{{Aj{Ah}}}Hh}{{{b{Lh}}{b{hAn}}}B`}{{{b{Ll}}{b{hAn}}}B`}{{{b{Ln}}{b{hAn}}}B`}{cc{}}0000000000{{{b{Df}}{Bl{{b{Dh}}}}}{{Aj{M`}}}}{{{b{Lh}}{b{hc}}}fBb}{{{b{Ll}}{b{hc}}}fBb}{{{b{Ln}}{b{hc}}}fBb}{{}n}0000000000{ce{}{}}0000000000``{{{Mh{c}}{Bl{Il}}}{{Mh{c}}}Hh}{{{b{M`}}}{{Aj{Mb}}}}{c{{Mh{c}}}Hh}{c{{Kn{c}}}Bd}{c{{Mj{c}}}Bf}{{}Mf}{c{{L`{c}}}Bf}{c{{L`{c}}}{LdEhLf}}{{{b{h{Mh{c}}}}}{{Aj{Ml}}}Hh}{{{b{h{Kn{c}}}}}{{Aj{D`}}}Bd}{{{b{Lh}}c}A`Bn}{{{b{Ll}}c}A`Bn}{{{b{Ln}}c}A`Bn}{{{Mh{c}}Ad}{{Mh{c}}}Hh}{{{Kn{c}}Ad}{{Kn{c}}}Bd}{{{b{c}}}e{}{}}000{{{b{Ll}}c}{{L`{c}}}Bf}{c{{A`{e}}}{}{}}000000000000000000000{{{b{c}}}C`{}}0000000000{ce{}{}}0000000000{{{Mh{c}}{Bl{{Dd{Db}}}}}{{Mh{c}}}Hh}{{{Kn{c}}{Bl{{Dd{Db}}}}}{{Kn{c}}}Bd}{{{Mj{c}}Mn}{{Mj{c}}}{}}{{{L`{c}}Mn}{{L`{c}}}Bf}{{{Mj{c}}{Bl{Ln}}}{{Mj{c}}}{}}{{Mf{Bl{Ln}}}Mf}{{{L`{c}}{Bl{Ln}}}{{L`{c}}}Bf}{{MfIl}Mf}{{{Mh{c}}{Bl{{Dd{Jh}}}}}{{Mh{c}}}Hh}{{{Mh{c}}{Bl{{E`{{Dn{Df}}{Dn{Df}}}}}}}{{Mh{c}}}Hh}{{{Mh{c}}{Bl{n}}}{{Mh{c}}}Hh}{{{Kn{c}}{Bl{n}}}{{Kn{c}}}Bd}{{Ljc}Lj{{Gn{{Bl{{Dn{Hf}}}}}}}}{{{Mh{c}}{Bl{{Dd{n}}}}}{{Mh{c}}}Hh}{{{Kn{c}}{Bl{{Dd{n}}}}}{{Kn{c}}}Bd}{{Lj{Bl{{Dn{{Fh{Db}}}}}}}Lj}{{{Mh{c}}{Bl{j}}}{{Mh{c}}}Hh}{{{Kn{c}}{Bl{j}}}{{Kn{c}}}Bd}{{Ljc}Lj{{Gn{{Bl{j}}}}}}{{Ljc}Lj{{Gn{{Bl{n}}}}}}{{{b{h{Lb{c}}}}{b{Ah}}}{{Aj{f}}}Bf}{{{b{Ll}}Ahc}{{Aj{f}}}Bf}```````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}0000{{{b{hc}}}{{b{he}}}{}{}}0000{{{b{N`}}}N`}{{{b{c}}{b{he}}}f{}{}}{{{b{c}}}f{}}0{{}N`}{n{{b{c}}}{}}0000{n{{b{hc}}}{}}0000{c{{A`{N`}}}Ab}{nf}0000{{{b{N`}}{b{N`}}}Ad}{{{b{c}}{b{e}}}Ad{}{}}00{{{b{h{Nb{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{Nd{c}}}{{Aj{Ah}}}Hh}{{{b{N`}}{b{hAn}}}B`}{cc{}}0000{{{b{N`}}{b{hc}}}fBb}{{{Nd{c}}{Bl{Kh}}}{{Nd{c}}}Hh}{{}n}0000{ce{}{}}0000`{c{{Nb{c}}}Bf}{c{{Nf{c}}}Bf}{c{{Nd{c}}}Hh}{{{b{N`}}c}A`Bn}{{{Nd{c}}Ad}{{Nd{c}}}Hh}{{{b{c}}}e{}{}}{c{{A`{e}}}{}{}}000000000{{{b{c}}}C`{}}000088888{{{Nd{c}}Kh}{{Nd{c}}}Hh}4{{{Nb{c}}Nh}{{Nb{c}}}Bf}{{{Nd{c}}Nh}{{Nd{c}}}Hh}{{{Nd{c}}{Bl{{Dd{Db}}}}}{{Nd{c}}}Hh}{{{Nd{c}}Hl}{{Nd{c}}}Hh}{{{Nd{c}}{b{D`}}}{{Nd{c}}}Hh}{{{b{h{Nf{c}}}}{b{Ah}}}{{Aj{f}}}Bf}`````{{{b{c}}}{{b{e}}}{}{}}{{{b{hc}}}{{b{he}}}{}{}}{{{b{Jl}}}{{b{{Fh{G`}}}}}}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{{{b{J`}}}{{Aj{f}}}}{{{b{hc}}}JlHh}{cc{}}{{}n}{ce{}{}}{JlNj}{{{b{Hh}}}{{Bl{{b{{Fh{G`}}}}}}}}{{{b{Hh}}}{{Bl{{b{J`}}}}}}{c{{A`{e}}}{}{}}0{{{b{c}}}C`{}}5`{{{b{hc}}{Bl{Kh}}}{{Aj{D`}}}Nl}``{{{b{c}}d}f{}}{{{b{Nn}}n}{{E`{NnNn}}}}{Nn{{Dn{O`}}}}{cNn{{Hb{}{{H`{f}}}}}}{cNn{{Hb{}{{H`{{Bl{f}}}}}}}}{{Obc}Nn{{Hb{}{{H`{{Bl{f}}}}}}}}{{Obc}Nn{{Hb{}{{H`{f}}}}}}{{{b{Nn}}}{{b{Od}}}}{{{b{hNn}}}{{b{hOd}}}}{{{b{c}}}{{b{e}}}{}{}}0{{{b{hc}}}{{b{he}}}{}{}}0{Nn{{Hj{O`}}}}{{{b{Nn}}n}Ad}{{{b{Nn}}}Nn}{{{b{c}}{b{he}}}f{}{}}{{{b{c}}}f{}}{{{Of{c}}}{{Aj{n}}}Hh}{{{b{Nn}}}{{b{Ob}}}}{n{{b{c}}}{}}0{n{{b{hc}}}{}}0{nf}0{{{b{Nn}}{b{{b{O`}}}}}Ad}{{{b{Nn}}{b{Nn}}}Ad}{{{b{Nn}}}{{b{{Fh{Oh}}}}}}{{{Of{c}}}{{Aj{Ah}}}Hh}{{{b{Nn}}{b{hAn}}}{{A`{fCn}}}}{cc{}}0{OjNn}{OlNn}{c{{Aj{{Of{J`}}}}}{{Gn{Il}}}}{{nOb}Nn}{{{b{Ob}}}{{b{{Fh{Oh}}}}}}{{{Of{c}}{Bl{Kh}}}{{Of{c}}}Hh}{{}n}0{ce{}{}}0{Nn{{E`{{Dd{Oh}}{Dd{{Hj{O`}}}}{Bl{On}}}}}}{{{b{Nn}}}}{{{b{Nn}}}{{A@f{{Dd{{Hj{A@`}}}}A@bA@d}}}}{{{b{Nn}}}n}{{{Of{c}}Ad}{{Of{c}}}Hh}{c{{Of{c}}}Hh}{{Ob{Dd{{Hj{O`}}}}{Bl{On}}}Nn}{ObNn}{{Obn}Nn}{{{b{Nn}}}Nn}{{{b{hNn}}{Bl{On}}}f}{{{b{hNn}}nn}f}0{{{b{c}}nn}e{}{}}011{{Nnnn}Nn}0{{{b{Nn}}n}{{E`{{Hj{O`}}{Hj{O`}}}}}}0{{{b{hNn}}}{{Bl{On}}}}{{{b{Nn}}}{{Hj{O`}}}}{{{b{c}}}e{}{}}{{{b{Nn}}{b{Nn}}}On}{{{b{Nn}}b}On}10{e{{A`{Nnc}}}{}{{Hb{}{{H`{{A`{fc}}}}}}}}{e{{A`{Nnc}}}{}{{Hb{}{{H`{{A`{{Bl{f}}c}}}}}}}}{{Obe}{{A`{Nnc}}}{}{{Hb{}{{H`{{A`{{Bl{f}}c}}}}}}}}{{Obe}{{A`{Nnc}}}{}{{Hb{}{{H`{{A`{fc}}}}}}}}{c{{A`{e}}}{}{}}000{{Ob{Dd{{Hj{O`}}}}{Bl{On}}}{{A`{NnA@h}}}}{{{b{c}}}C`{}}0{{{b{Nn}}}{{Bl{{b{On}}}}}}0{{{b{Nn}}}{{b{{Fh{{Hj{O`}}}}}}}}{{{b{Nn}}}A@b}{ce{}{}}0{{{Of{c}}{Bl{Kh}}}{{Of{c}}}Hh}{{{Of{c}}Ad}{{Of{c}}}Hh}{{{Of{c}}{Bl{n}}}{{Of{c}}}Hh}0{{{Of{c}}{Bl{e}}}{{Of{c}}}Hh{{Gn{Il}}}}{{{Of{c}}{Bl{{Dn{Hf}}}}}{{Of{c}}}Hh}{{{Of{c}}{Bl{{Dn{{Fh{Db}}}}}}}{{Of{c}}}Hh}4{{{Of{c}}{Bl{{b{hj}}}}}{{Of{c}}}Hh}{{{Of{c}}Hl}{{Of{c}}}Hh}{{{Of{c}}{b{D`}}}{{Of{c}}}Hh}{{Nn{Bl{On}}}Nn}{{{b{Nn}}{Bl{On}}}{{Hj{O`}}}}1``````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}0{{{b{hc}}}{{b{he}}}{}{}}0{{{b{A@j}}}A@j}{{{b{c}}{b{he}}}f{}{}}{{{b{c}}}f{}}{{{b{A@j}}n}A@l}``{n{{b{c}}}{}}0{n{{b{hc}}}{}}0{{{b{Oh}}{b{A@n}}}{{A`{AA`A@h}}}}`{nf}0{{{b{AA`}}{b{AA`}}}Ad}{{{b{AA`}}{b{hAn}}}{{A`{fCn}}}}{{{b{A@j}}{b{hAn}}}{{A`{fCn}}}}{cc{}}{AAbAA`}1{{}n}0{ce{}{}}0{A@jAAd}{{{b{A@j}}}{{b{{Bl{{Dd{AAf}}}}}}}}``````{{{b{A@j}}}{{b{AAh}}}}`{{{b{c}}}e{}{}}{c{{A`{e}}}{}{}}0{AAd{{A`{A@jAAj}}}}11{{{b{c}}}C`{}}0`77`````````{{{b{c}}d}f{}}0{{{AAl{c}}n}{{Aj{AAn}}}Hh}{{AB`n}{{Aj{AAn}}}}{{{b{c}}}{{b{e}}}{}{}}0000{{{b{hc}}}{{b{he}}}{}{}}0000{{{AAl{c}}{b{Cf}}}{{Aj{{AAl{c}}}}}Hh}{{AB`{b{Cf}}}{{Aj{AB`}}}}{{{b{ABb}}}ABb}{{{b{ABd}}}ABd}{{{b{c}}{b{he}}}f{}{}}0{{{b{c}}}f{}}000{{}ABd}{n{{b{c}}}{}}0000{n{{b{hc}}}{}}0000{c{{A`{ABb}}}Ab}{c{{A`{ABd}}}Ab}{nf}0000{{{b{ABb}}{b{ABb}}}Ad}{{{b{ABd}}{b{ABd}}}Ad}{{{b{c}}{b{e}}}Ad{}{}}00000{{{AAl{c}}}{{Aj{Ah}}}Hh}{AB`{{Aj{Ah}}}}{{{b{AAn}}n}Ad}{{{b{ABb}}{b{hAn}}}B`}{{{b{ABd}}{b{hAn}}}B`}{cc{}}0000{{{b{Df}}{Bl{{b{Dh}}}}{Bl{ABf}}}{{Aj{AB`}}}}{{{b{h{AAl{c}}}}}{{Aj{{b{ABf}}}}}Hh}{{{b{hAB`}}}{{Aj{{b{ABf}}}}}}{{{b{ABb}}{b{hc}}}fBb}{{{b{ABd}}{b{hc}}}fBb}{{}n}0000{ce{}{}}0000{{{b{AAn}}}Ad}``{{{Bl{{b{{Fh{n}}}}}}{b{Cf}}{Bl{{b{{Fh{Jh}}}}}}{Bl{{b{j}}}}}Ah}`{c{{AAl{c}}}Hh}{{{b{hAAn}}n}{{Aj{{Bl{{Dd{Ah}}}}}}}}{{{b{h{AAl{c}}}}}{{Aj{n}}}Hh}{{{b{hAB`}}}{{Aj{n}}}}`{{{AAl{c}}ABd}{{AAl{c}}}Hh}{{AB`ABd}AB`}{{{b{AAn}}}{{b{Ml}}}}{{{b{h{AAl{c}}}}}{{Aj{Ml}}}Hh}{{{b{hAB`}}}{{Aj{Ml}}}}{{{b{ABb}}c}A`Bn}{{{b{ABd}}c}A`Bn}{{{AAl{c}}Ad}{{AAl{c}}}Hh}0{{AB`Ad}AB`}{{{b{c}}}e{}{}}0{c{{A`{e}}}{}{}}000000000{{{b{c}}}C`{}}000043`{ce{}{}}0000{{{AAl{c}}{Bl{{Dd{Db}}}}}{{AAl{c}}}Hh}{{{AAl{c}}{Bl{{Dd{Jh}}}}}{{AAl{c}}}Hh}{{AB`{Bl{{Dd{Jh}}}}}AB`}{{{AAl{c}}{Bl{{E`{{Dn{Df}}{Dn{Df}}}}}}}{{AAl{c}}}Hh}{{AB`{Bl{{E`{{Dn{Df}}{Dn{Df}}}}}}}AB`}{{{AAl{c}}{Bl{{Dn{Hf}}}}}{{AAl{c}}}Hh}{{AB`{Bl{{Dn{Hf}}}}}AB`}{{{AAl{c}}{Bl{{Dd{n}}}}}{{AAl{c}}}Hh}{{AB`{Bl{{Dd{n}}}}}AB`}{{{AAl{c}}{Bl{j}}}{{AAl{c}}}Hh}{{AB`{Bl{j}}}AB`}{{{AAl{c}}{Bl{{E`{nn}}}}}{{AAl{c}}}Hh}{{AB`{Bl{{E`{nn}}}}}AB`}````````````````{{{b{c}}d}f{}}00000{{{ABh{c}}{b{D`}}}{{Aj{{ABj{c}}}}}Bf}{{{b{c}}}{{b{e}}}{}{}}0000000{{{b{hc}}}{{b{he}}}{}{}}0000000{{{b{ABl}}}ABl}{{{b{ABn}}}ABn}{{{b{AC`}}}AC`}{{{b{ACb}}}ACb}{{{b{ACd}}}ACd}{{{b{ACf}}}ACf}{{{b{c}}{b{he}}}f{}{}}00000{{{b{c}}}f{}}00000000000``{{}ABl}{{}ABn}{{}ACf}{n{{b{c}}}{}}0000000{n{{b{hc}}}{}}0000000{c{{A`{ABl}}}Ab}{c{{A`{ABn}}}Ab}{c{{A`{AC`}}}Ab}{c{{A`{ACb}}}Ab}{c{{A`{ACd}}}Ab}{c{{A`{ACf}}}Ab}`{nf}00000009{{{b{{ABj{c}}}}{b{Ah}}}{{`{{ACj{}{{H`{{Aj{{ACh{A@h}}}}}}}}}}}Bf}{{{b{ABl}}{b{ABl}}}Ad}{{{b{ABn}}{b{ABn}}}Ad}{{{b{AC`}}{b{AC`}}}Ad}{{{b{ACb}}{b{ACb}}}Ad}{{{b{ACd}}{b{ACd}}}Ad}{{{b{ACf}}{b{ACf}}}Ad}{{{b{c}}{b{e}}}Ad{}{}}00000000000000000{{{b{{ABj{c}}}}}{{Aj{Kj}}}Bf}{{{ABh{c}}{b{hAh}}}{{Aj{Kj}}}Bf}{{{b{ABl}}{b{hAn}}}B`}{{{b{ABn}}{b{hAn}}}B`}{{{b{AC`}}{b{hAn}}}B`}{{{b{ACb}}{b{hAn}}}B`}{{{b{ACd}}{b{hAn}}}B`}{{{b{ACf}}{b{hAn}}}{{A`{fCn}}}}{cc{}}0000000{{}ACf}{{{b{{ABj{c}}}}}{{b{{ACn{{ACl{c}}}}}}}Bf}{{{b{ABl}}{b{hc}}}fBb}{{{b{ABn}}{b{hc}}}fBb}{{{b{AC`}}{b{hc}}}fBb}{{{b{ACb}}{b{hc}}}fBb}{{{b{ACd}}{b{hc}}}fBb}{{{b{ACf}}{b{hc}}}fBb}{{}n}0000000{ce{}{}}0000000{{{b{ACf}}}Ad}0```{c{{ABh{c}}}{BfBf}}``{{{b{ABl}}c}A`Bn}{{{b{ABn}}c}A`Bn}{{{b{AC`}}c}A`Bn}{{{b{ACb}}c}A`Bn}{{{b{ACd}}c}A`Bn}{{{b{ACf}}c}A`Bn}{{{ABh{c}}Ad}{{ABh{c}}}Bf}`{{{b{c}}}e{}{}}00000{{{b{ABl}}c}{{ABh{c}}}Bf}{c{{A`{e}}}{}{}}000000000000000{G`{{Aj{AC`}}}}{AD`{{Aj{ACb}}}}{ADb{{Aj{ACd}}}}{{{b{c}}}C`{}}0000000{ce{}{}}0000000{{{ABh{c}}ABn}{{ABh{c}}}Bf}{{{ABh{c}}{Bl{n}}}{{ABh{c}}}Bf}0{{{ABh{c}}ACf}{{ABh{c}}}Bf}{{{b{h{ABj{c}}}}{b{Ah}}}{{Aj{f}}}Bf}{{{b{ABl}}Ahc}{{Aj{f}}}Bf}{{{b{{ABj{c}}}}{Dd{{ACh{A@h}}}}}{{Aj{f}}}Bf}{{{b{hAh}}{b{ADd}}{b{{Fh{c}}}}{b{e}}n}{{Aj{f}}}{{Gl{Df}}}{CbLfADf}}`{{{b{{Fh{Il}}}}Ad{Bl{{b{Dh}}}}}{{Aj{{Dn{{Fh{Il}}}}}}}}{{{b{{Fh{Il}}}}Ad{Bl{{b{Dh}}}}Ad}{{Aj{{E`{{Dn{{Fh{Il}}}}n}}}}}}{{{b{{Fh{c}}}}{b{{Fh{c}}}}}Ad{{Gl{ADd}}}}{{{b{{Fh{G`}}}}}{{Bl{n}}}}{cAd{{Gl{ADd}}}}{{{b{ADd}}}Il}``{{{b{ADh}}c}{}ADj}{{{b{ADh}}c}{}{ADjLf}}{{{b{c}}}{{b{e}}}{}{}}{{{b{hc}}}{{b{he}}}{}{}}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{cc{}}{{}{{b{ADh}}}}{{}n}{ce{}{}}{{{b{ADl}}}Kj}{{{b{ADh}}c}ADn{ADjLf}}{{{b{ADh}}e}{{ADn{c}}}Lf{{Fn{}{{Fl{c}}}}Lf}}{c{{A`{e}}}{}{}}0{{AD`e}{}ADj{{Fn{}{{Fl{c}}}}}}{{{b{c}}}C`{}}61````{{{b{c}}d}f{}}0{{{b{hAh}}{Bl{{b{Hf}}}}Ad}{{Aj{f}}}}{{{b{Hf}}}{{Bl{{b{AE`}}}}}}{{{b{c}}}{{b{e}}}{}{}}0{{{b{hc}}}{{b{he}}}{}{}}0{{{b{AEb}}}AEb}{{{b{AEd}}}AEd}{{{b{c}}{b{he}}}f{}{}}0{{{b{c}}}f{}}0{{{b{AEd}}}{{b{{Fh{AEb}}}}}}{n{{b{c}}}{}}0{n{{b{hc}}}{}}0{c{{A`{AEb}}}Ab}{c{{A`{AEd}}}Ab}{nf}0{{{b{AEb}}}{{b{Jd}}}}{{{b{Hf}}{b{Ah}}}{{Aj{Jh}}}}{{{b{AEb}}}{{b{AEf}}}}{{{b{AEb}}{b{hAn}}}B`}{{{b{AEd}}{b{hAn}}}B`}{cc{}}0{JhAEb}{AEhAEb}{{{b{AEb}}}{{Bl{{b{Jh}}}}}}00{{{b{AEd}}{b{Df}}}{{Aj{{b{AEb}}}}}}{{}n}0{ce{}{}}0{{AEh{Bl{Jh}}{Bl{Jh}}{Bl{Jh}}}AEb}{{Hl{Dd{AEb}}{Bl{n}}}AEd}{{{b{AEb}}}{{Bl{n}}}}{{{b{AEd}}}{{Bl{n}}}}{{{b{AEd}}}{{b{Hl}}}}{{{b{AEb}}c}A`Bn}{{{b{AEd}}c}A`Bn}{{{b{AE`}}{b{AEd}}}{{Aj{Ad}}}}{{{b{hAEd}}{b{{Fh{n}}}}}f}<<{{{b{AEb}}}{{Bl{Jh}}}}{{{b{c}}}e{}{}}0{c{{A`{e}}}{}{}}000{{{b{c}}}C`{}}0=={{{b{hAEd}}Hl}f}```{Af{{Aj{Ah}}}}{{{b{hAl}}{b{hAh}}}{{Aj{f}}}}{cAfBd}{cAlBf}{{AfAd}Af}00```````{{{b{hc}}}{{Aj{Jl}}}{BdHhAEj}}`{{{Bl{{b{{Fh{Db}}}}}}{b{D`}}{Bl{{b{{Fh{Jh}}}}}}Ad}{{Bl{{Dd{n}}}}}}{{{b{{Fh{G`}}}}{b{h{Dd{G`}}}}}{{Aj{{b{{Fh{G`}}}}}}}}{{{b{hD`}}{b{D`}}}{{Aj{f}}}}`{{{b{{Fh{G`}}}}}Ad}``````{{{b{hn}}nnn}{{E`{nn}}}}","D":"CMb","p":[[1,"reference"],[5,"Private",1976],[1,"unit"],[0,"mut"],[5,"RowIndex",0,1977],[5,"HiveOptions",0,1977],[1,"usize"],[6,"Result",1978],[10,"Deserializer",1979],[1,"bool"],[10,"SerReader",1945,1980],[5,"DataFrame",1981],[8,"PolarsResult",1982],[10,"SerWriter",1945,1980],[5,"Formatter",1983],[8,"Result",1983],[10,"Hasher",1984],[10,"Read",1985],[10,"Write",1985],[10,"ArrowReader",0,1980],[8,"RecordBatch",1986],[6,"Option",1987],[10,"Serializer",1988],[5,"TypeId",1989],[10,"WriteDataFrameToFile",0,1980],[5,"AvroReader",86,1990],[5,"ArrowSchema",1991],[10,"Seek",1985],[6,"AvroCompression",86],[5,"AvroWriter",86,1992],[5,"Error",1983],[5,"Schema",1993],[5,"String",1994],[5,"Vec",1995],[1,"str"],[5,"CloudOptions",227],[5,"CloudLocation",154,1996],[10,"ObjectStore",1997],[5,"Arc",1998],[1,"tuple"],[5,"PolarsObjectStore",154,1999],[5,"Path",2000],[10,"AsyncWrite",2001],[10,"Unpin",2002],[5,"CloudWriter",154,2003],[5,"Error",2004],[10,"Command",2005],[8,"Result",2004],[5,"Url",2006],[5,"Bytes",2007],[5,"Range",2008],[1,"slice"],[5,"ObjectMeta",1997],[17,"Output"],[10,"FnOnce",2009],[1,"u8"],[10,"VarInt",2010],[6,"AmazonS3ConfigKey",227,2011],[6,"AzureConfigKey",227,2012],[6,"GoogleConfigKey",227,2013],[6,"CloudType",227],[10,"AsRef",2014],[10,"Into",2014],[17,"Item"],[10,"IntoIterator",2015],[5,"CsvReader",419,2016],[10,"PhysicalIoExpr",1878],[10,"MmapBytesReader",1291],[5,"Box",2017],[8,"SchemaRef",1993],[5,"OwnedBatchedCsvReader",419,2018],[5,"BatchedCsvReader",419,2018],[5,"CsvReadOptions",419,2019],[5,"CsvParseOptions",419,2019],[6,"CsvEncoding",419,2019],[6,"CommentPrefix",419,2019],[6,"NullValues",419,2019],[5,"PathBuf",2020],[10,"Fn",2009],[5,"File",2021],[5,"SchemaInferenceResult",757],[6,"DataType",2022],[6,"Buffer",680],[5,"Series",2023],[8,"PlHashSet",2024],[6,"ReaderBytes",1291],[5,"CsvWriter",784,2025],[5,"BatchedWriter",784,2025],[5,"CsvWriterOptions",784,2026],[5,"SerializeOptions",784,2026],[6,"QuoteStyle",784,2026],[8,"NonZeroUsize",2027],[1,"u64"],[5,"FileCacheEntry",930,2028],[5,"IpcStreamReader",951,2029],[5,"IpcWriter",951,2030],[5,"BatchedWriter",951,2030],[10,"AsyncWrite",2031],[10,"Send",2002],[5,"IpcScanOptions",951,2032],[5,"IpcReadOptions",951,2033],[5,"IpcWriterOptions",951,2030],[6,"IpcCompression",951,2030],[5,"IpcReaderAsync",951,2033],[5,"FileMetadata",2034],[1,"i64"],[5,"IpcStreamWriterOption",951,2029],[5,"IpcReader",951,2032],[5,"IpcStreamWriter",951,2029],[8,"ArrowSchemaRef",1991],[5,"CompatLevel",2022],[5,"JsonWriterOptions",1193],[5,"JsonWriter",1193],[5,"JsonReader",1193],[5,"BatchedWriter",1193],[6,"JsonFormat",1193],[5,"MemSlice",2035],[10,"BufRead",1985],[5,"StructArray",1316,2036],[10,"Array",2037],[6,"ArrowDataType",2038],[10,"Any",1989],[5,"JsonLineReader",1316],[5,"Field",2039],[5,"GrowableStruct",2040],[5,"MutableStructArray",2041],[5,"Bitmap",2042],[10,"Scalar",2043],[5,"StructValueIter",2044],[5,"BitmapIter",2045],[6,"ZipValidity",2046],[6,"PolarsError",1982],[5,"FileMetaData",1423,2047],[6,"ColumnOrder",2048],[5,"RowGroupMetaData",2049],[5,"ParquetStatistics",1423],[5,"MutableStatistics",2050],[5,"FileMetaData",2051],[5,"KeyValue",2051],[5,"SchemaDescriptor",2052],[6,"ParquetError",2053],[5,"ParquetReader",1476,2054],[5,"BatchedParquetReader",1476,2055],[5,"ParquetAsyncReader",1476,2054],[5,"ParquetOptions",1476,2056],[6,"ParallelStrategy",1476,2056],[8,"FileMetaDataRef",1423],[5,"ParquetWriter",1618,2057],[5,"BatchedWriter",1618,2058],[5,"ParquetWriteOptions",1618,2059],[6,"ParquetCompression",1618,2059],[5,"GzipLevel",1618,2059],[5,"BrotliLevel",1618,2059],[5,"ZstdLevel",1618,2059],[5,"StatisticsOptions",1618,2060],[8,"RowGroupIterColumns",1618,2061],[10,"Iterator",2062],[5,"FileWriter",2063],[5,"Mutex",2064],[1,"u32"],[1,"i32"],[5,"Path",2020],[10,"Sync",2002],[5,"RuntimeManager",1856],[10,"Future",2065],[10,"GetSize",1856],[5,"JoinHandle",2066],[10,"StatsEvaluator",1878],[5,"ColumnStats",1878],[5,"BatchStats",1878],[8,"String",2067],[5,"Field",2068],[10,"Sized",2002],[5,"Utf8Field",680],[5,"CategoricalField",680],[5,"DatetimeField",680],[15,"Datetime",754]],"r":[[0,1980],[1,1977],[2,1977],[3,1980],[4,1980],[5,1980],[87,1990],[88,1992],[89,2069],[154,1996],[155,2003],[156,1999],[165,2070],[194,1996],[206,2070],[230,2011],[235,2012],[259,2013],[421,2018],[422,2019],[423,2019],[424,2019],[425,2019],[426,2016],[430,2019],[431,2018],[478,2071],[559,757],[785,2025],[786,2025],[787,2026],[791,2026],[792,2026],[930,2072],[931,2073],[932,2028],[939,2072],[941,2073],[951,2030],[952,2030],[953,2033],[954,2032],[955,2033],[956,2032],[957,2029],[958,2029],[959,2029],[960,2030],[961,2030],[1317,2036],[1423,2047],[1441,2050],[1477,2055],[1480,2056],[1481,2054],[1482,2056],[1483,2054],[1563,2074],[1618,2058],[1620,2059],[1622,2059],[1625,2059],[1626,2059],[1627,2057],[1628,2061],[1630,2060],[1633,2059],[1945,1980],[1946,1980],[1947,0],[1955,1848],[1956,2075],[1957,2075],[1958,2075],[1959,2075],[1962,2075],[1963,1968],[1964,2075],[1965,2075],[1966,2075]],"b":[[1321,"impl-ArrayFromIter%3C()%3E-for-StructArray"],[1322,"impl-ArrayFromIter%3COption%3C()%3E%3E-for-StructArray"],[1323,"impl-ArrayFromIterDtype%3COption%3C()%3E%3E-for-StructArray"],[1324,"impl-ArrayFromIterDtype%3C()%3E-for-StructArray"],[1344,"impl-PartialEq%3C%26dyn+Array%3E-for-StructArray"],[1345,"impl-PartialEq-for-StructArray"],[1351,"impl-From%3CGrowableStruct%3C\'a%3E%3E-for-StructArray"],[1352,"impl-From%3CMutableStructArray%3E-for-StructArray"],[1372,"impl-StructArray"],[1373,"impl-Array-for-StructArray"],[1376,"impl-Array-for-StructArray"],[1377,"impl-StructArray"],[1389,"impl-ArrayFromIter%3C()%3E-for-StructArray"],[1390,"impl-ArrayFromIter%3COption%3C()%3E%3E-for-StructArray"],[1391,"impl-ArrayFromIterDtype%3COption%3C()%3E%3E-for-StructArray"],[1392,"impl-ArrayFromIterDtype%3C()%3E-for-StructArray"],[1400,"impl-Array-for-StructArray"],[1401,"impl-StructArray"],[1417,"impl-StructArray"],[1418,"impl-Array-for-StructArray"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAM8FrAAAAAEAAwARABcACAAhAAgAKwACADAABQA4AAAAOgACAD4AAgBDABMAXwAAAGEAGQB+AAMAhQABAIgADQCZAAAAngAGAKcADwC5AAIAvwADAMUAAgDNAAAA0AAAANUADgDqAAEA9gAAAAIBAQAFAQEAGwEQAC8BOQBuAQMAcwEIAIEBHACmAQQArwEBALMBKwDgATgAGgIEACYCAAAoAhEAQwIAAEUCAgBMAisAeQIIAIMCBwCbAgAAqQISAL0CFwDZAgQA4gIgAAQDAQAIAwAACgMGABIDAAAaAxgANQMhAFgDAABaAwIAYgMCAGYDAABoAwUAdAMCAHsDAwCAAxYAowMHAKwDAgCwAwEAtAMEALoDAAC9AwAAwAMAAMIDAADFAwMAygMlAPEDNgApBAMAOAQOAFMEAABVBAYAXgQ1AJYEAQCcBAEAoAQAAKMEAACmBAEAqQQBALAEJQDXBAAA3QQAAN8EBADrBBgABgUBAAwFAQAPBQkAGgUAABwFCQAnBQEAKgUJADUFDQBEBQEASAUBAEsFAABNBQIAUwUAAFUFAABeBQMAZQUBAGgFDQB3BQIAfQUBAIEFCACLBQEAkQUAAJMFBwCeBQMApAUEAKoFAACsBQEAugUCAL4FAwDDBQEAxgUAAMkFAADLBQAAzgUNAN0FJwAKBgkAGQYAABsGAgAfBgAAIQYBACQGAQAnBgIAKwYSAEAGBQBHBgUATgYAAFAGAQBTBgEAVgYAAFgGAQBbBgAAXQYBAGAGAQBjBi4AlAY7ANIGBQDgBg8A+AYBAPsGAQD+BgAAAAcFAAgHKQA3BwEAOgcAAEEHAgBFBwQASwcBAE4HAABQBwYAWQcEAF8HCQBqBwcAdAcCAH8HAQCIBwMAjwcNAJ4HAACgBwAApAcJAK8HAQCyBwUA"}],\
["polars_lazy",{"t":"CQCCCPPPGPPPPPPPPPPPPPFPPPPPPPPKPGPPPPGFPPPFFPPPPPPPPPPPPPPPPPPPPPPFPPPPPPPPPFPPPPPPPPPGPPPPGKFPPPPPPPFIPPPPPPPPPGKPPPPPIPPPPPPPPPPPPPPKPPPPPPPPPPPPPPPFPPPPPPPPPPPFKPPPPPPPPPPPPPPFPPPPPPPPPPPPPPPPPPGPPPPPPGPPPPPPPPPPGPPPPPPPPPPPKPPPPPPPPPPFPPPPPPPPGPKKPPPPPPPPPPFPPPPPPPGPPPPPPFPGFPPPPPPPGPFPPPPPPPPPPPPPPPPPPPKPPPPFPPPPFPPGGPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNHOONNNNHNNHNNNHNHNNNNNNNNNNNNNNHNHNONNNHHNCNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOMNMMNHNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHHNNNNNNNNHNHNNNHNNNNHHHHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNHHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOOHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOCNCNNNNNNNNMMNNMNNNNNNNNNNNNNNNNNNNNNNNNNOONHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNHNHNNNNNNNNNHNNHNNNHNNNNNNNNNHNNNNNNNNNNHNNHNNNNNNHNNNHHNNHHNNNNOOOHNNNHOOONONNNNNONNONNNNNNNNNNNNHNHNONNNNNNNNNHNNNNNNCNNHNNNHNNNHNNNNNONNNNNNHHNNNNNNNNNNNNNNNNNNNNNNOONNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNONCNNNNNHNNNHNNNNNHNNHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHNNONNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOFNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPPPPPPPPGPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPGPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPCCCCCOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOGPPPGPPPPPGPPPPNNNNNNNNNNNNNNNNNNNNNNNNPPPPGPPPNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPPPPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFHHOHHHHHHHHHHHHHHHHHHHHHHHHHHOOHHHHHOOHHHHHHHHHOOOHOOOOHHHHHHHOOHHHHOOOOOJJFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFOOOOOITTTTTTFKFFKFFFTFTTTTTTFFFTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNOONOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNOONONNNNNONNMNNOOOONNNNNNNNNOMNNCNNMNNOONNNNNMNNOOONNNNNNONNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNMNNNNNNMNNNMNNNNNNNNNNNNNNNNNNNHHKFFPPPPPPPFPPPPPPGFPFPPPPPPPPPPPPPPPPFPFGGFPKGPPPPPSFPPPPFKPPGFPFPPPPPPPPPPPPPPPFNNNNNNNNNNNNNNNNNNNNNNMONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONONOONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNONMNNNNNNNNNNNNNNNOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOMNNNOOOONONNNONNNNNNNOOOONONOOOHOMOMNONNNNNNNNNNNNNNNNONOOOONONNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNONNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO","n":["dsl","fallible","frame","physical_plan","prelude","Abs","Add","Agg","AggExpr","AggGroups","Alias","All","AllHorizontal","And","AnonymousFunction","Any","AnyHorizontal","ApproxNUnique","ArgUnique","ArgWhere","Array","ArrayExpr","ArrayNameSpace","AsStruct","Atan2","BackwardFill","Base64Decode","Base64Encode","BaseUtcOffset","BinaryExpr","BinaryExpr","BinaryUdfOutputField","Boolean","BooleanFunction","Business","Cast","CastTimeUnit","Categorical","CategoricalFunction","CategoricalNameSpace","Cbrt","Ceil","Century","ChainedThen","ChainedWhen","Clip","Coalesce","Column","Columns","Combine","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","ConvertTimeZone","Correlation","Count","CountMatches","CumCount","CumMax","CumMin","CumProd","CumSum","Cut","DSTOffset","Date","Datetime","DatetimeArgs","DatetimeFunction","Day","Diff","Divide","DropNans","DropNulls","Dtype","DtypeColumn","Duration","DurationArgs","EndsWith","Entropy","Eq","EqValidity","EwmMean","EwmMeanBy","EwmStd","EwmVar","Exclude","Excluded","ExclusiveOr","Exp","Explode","Explode","Expr","ExprEvalExtension","ExprNameNameSpace","ExtendConstant","Extract","ExtractAll","ExtractGroups","Field","FieldByIndex","FieldByName","FieldsMapper","FieldsNameMapper","FillNull","FillNullWithStrategy","Filter","Find","First","Floor","FloorDivide","ForwardFill","Function","FunctionExpr","FunctionOutputField","Fused","Gather","GatherEvery","Generic","GetCategories","GetOutput","GroupsToRows","Gt","GtEq","Hash","Head","HexDecode","HexEncode","Hist","Hour","Implode","IndexColumn","InterSect","Interpolate","InterpolateBy","IntoListNameSpace","IsBetween","IsDuplicated","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLeapYear","IsNan","IsNotNan","IsNotNull","IsNull","IsUnique","IsoYear","Join","JoinOptions","JsonDecode","JsonEncode","JsonPathMatch","KeepName","Kurtosis","Last","Len","LenBytes","LenChars","List","ListExpr","ListNameSpace","ListNameSpaceExtension","Literal","Log","Log1p","LogicalAnd","LogicalOr","LowerBound","Lowercase","Lt","LtEq","Max","MaxHorizontal","Mean","MeanHorizontal","Median","MetaNameSpace","Microsecond","Millennium","Millisecond","Min","MinHorizontal","Minus","Minute","Mode","Modulus","Month","MonthEnd","MonthStart","MultipleFields","Multiply","NUnique","Name","Nanosecond","Negate","NestedType","Not","NotEq","NotEqValidity","Nth","NullCount","OffsetBy","Operator","Or","OrdinalDay","Over","PadEnd","PadStart","PctChange","PeakMax","PeakMin","Plus","Pow","PowFunction","PrefixFields","QCut","Quantile","Quarter","RLE","RLEID","Random","Range","Rank","Reinterpret","RenameAlias","RenameAliasFn","RenameFields","RepeatBy","Replace","Replace","ReplaceStrict","ReplaceTimeZone","Reshape","Reverse","Reverse","Rolling","RollingCovOptions","RollingExpr","RollingExprBy","Root","Round","Round","RoundSF","SearchSorted","Second","Selector","Selector","SeriesBinaryUdf","SeriesUdf","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Sign","Skew","Slice","Slice","Sort","SortBy","SpecialEq","Split","SplitExact","SplitN","Sqrt","StartsWith","Std","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StrptimeOptions","StructExpr","StructFunction","StructNameSpace","Sub","SubPlan","SuffixFields","Sum","SumHorizontal","Tail","TemporalExpr","TemporalFunction","Ternary","Then","Time","TimeStamp","Titlecase","ToDecimal","ToInteger","ToPhysical","ToString","TopK","TopKBy","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","Trigonometry","TrueDivide","Truncate","UdfSchema","Unique","UniqueCounts","UpperBound","Uppercase","UserDefinedFunction","ValueCounts","Var","Week","WeekDay","When","Wildcard","Window","WindowMapping","WindowType","WithFields","WithTimeUnit","Xor","Year","ZFill","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_into_selector","_selector_add","_selector_and","_selector_sub","_selector_xor","abs","add","add","agg_groups","alias","all","all","all","all","all_horizontal","allow_parallel","ambiguous","and","any","any","any","any_horizontal","append","apply","apply_binary","apply_children","apply_many","apply_many_private","apply_multiple","approx_n_unique","arange","arccos","arccosh","arcsin","arcsinh","arctan","arctan2","arctanh","arg_max","arg_max","arg_max","arg_min","arg_min","arg_min","arg_sort","arg_sort_by","arg_unique","arg_where","args","args","arr","as_any","as_ref","as_struct","avg","backward_fill","binary","binary","binary_expr","bitand","bitxor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom_k","bottom_k_by","business_day_count","cache","call","call","call_udf","call_udf","call_unchecked","cast","cast","cast_with_options","cat","cat","cbrt","ceil","clip","clip_max","clip_min","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","coalesce","col","cols","concat_expr","concat_list","concat_str","contains","contains","cos","cosh","cot","count","count_matches","count_matches","cov","cum_count","cum_fold_exprs","cum_max","cum_min","cum_prod","cum_reduce_exprs","cum_sum","cumulative_eval","cumulative_eval","cut","date_ranges","datetime","datetime_range","datetime_ranges","day","days","ddof","default","default","default","default","default","default","default","default","default","default","degrees","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","diff","diff","div","dot","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_nans","drop_nulls","drop_nulls","dt","dt","dtype_col","dtype_cols","duration","entropy","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","eval","eval","ewm_mean","ewm_mean_by","ewm_std","ewm_var","exact","exclude","exclude_dtype","exp","explode","extend_constant","field_by_index","field_by_name","field_by_names","fill_nan","fill_null","fill_null_with_strategy","filter","first","first","first","flatten","float_type","floor","floor_div","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fold_exprs","force_parallel","format","format_str","forward_fill","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_type","fun","function_expr","function_with_options","functions","gather","gather","gather_every","gather_every","get","get","get","get_categories","get_field","get_field","get_fields_lens","get_output","get_schema","gt","gt_eq","has_multiple_outputs","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","head","head","hist","hour","hours","implode","index_cols","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","input_fields","int_range","int_ranges","interpolate","interpolate_by","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_list_name_space","into_list_name_space","into_tree_formatter","is_arithmetic","is_between","is_column","is_column_selection","is_duplicated","is_finite","is_first_distinct","is_in","is_infinite","is_last_distinct","is_nan","is_not_nan","is_not_null","is_not_null","is_null","is_null","is_regex_projection","is_simple_projection","is_unique","join","join","json_encode","keep","kurtosis","last","last","last","len","len","len","list","lit","log","log1p","logical_and","logical_or","lower_bound","lt","lt_eq","map","map","map_binary","map_children","map_datetime_dtype_timezone","map_dtype","map_dtype","map_dtypes","map_expr","map_field","map_fields","map_fields","map_list","map_list_multiple","map_many","map_many_private","map_multiple","map_numeric_to_float_dtype","map_python","map_to_float_dtype","map_to_list_and_array_inner_dtype","map_to_list_supertype","map_to_supertype","max","max","max","max","max_horizontal","mean","mean","mean","mean_horizontal","median","median","median","median","meta","microsecond","microseconds","milliseconds","min","min","min","min","min_horizontal","min_periods","minute","minutes","mode","month","mul","n_unique","n_unique","n_unique","name","name","nan_max","nan_min","nanoseconds","neg","neq","neq_missing","nested_sum_type","new","new","new","new","new","new","nodes","nodes_owned","not","not","nth","null_count","options","or","otherwise","otherwise","output_name","over","over_with_options","pct_change","peak_max","peak_min","pearson_corr","pi","pop","pow","prefix","prefix_fields","product","python_udf","qcut","qcut_uniform","quantile","quantile","radians","rank","reduce_exprs","reinterpret","rem","rename_fields","repeat","repeat_by","replace","replace_dtype","replace_strict","reshape","return_type","reverse","reverse","reverse","rle","rle_id","rolling","rolling_corr","rolling_cov","rolling_map","rolling_map_float","rolling_max","rolling_max_by","rolling_mean","rolling_mean_by","rolling_median","rolling_median_by","rolling_min","rolling_min_by","rolling_quantile","rolling_quantile_by","rolling_skew","rolling_std","rolling_std_by","rolling_sum","rolling_sum_by","rolling_var","rolling_var_by","root_names","round","round_sig_figs","rows_left","rows_right","same_type","sample_frac","sample_fraction","sample_n","sample_n","search_sorted","second","seconds","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set_difference","set_intersection","set_sorted_flag","set_symmetric_difference","shift","shift","shift","shift_and_fill","shrink_dtype","shuffle","sign","sin","sinh","skew","slice","slice","sort","sort","sort","sort_by","spearman_rank_corr","sqrt","std","std","std","str","strict","strict_cast","string","struct_","sub","sub","suffix","suffix_fields","sum","sum","sum","sum","sum_horizontal","super_type","tail","tail","tan","tanh","ternary_expr","then","then","time_ranges","time_unit","time_unit","time_zone","to_array","to_field","to_list","to_lowercase","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_struct","to_struct","to_uppercase","top_k","top_k_by","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_map_dtype","try_map_dtypes","try_map_expr","try_map_field","try_serialize","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","udf","undo_aliases","union","unique","unique","unique","unique_counts","unique_stable","unique_stable","unique_stable","upper_bound","value_counts","var","var","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weeks","when","when","when","window_size","with_ambiguous","with_day","with_days","with_dtype","with_fields","with_fractional_seconds","with_hms","with_hms","with_hour","with_hours","with_microsecond","with_microseconds","with_milliseconds","with_minute","with_minutes","with_month","with_nanoseconds","with_opt_dtype","with_same_dtype","with_second","with_seconds","with_time_unit","with_time_zone","with_weeks","with_year","xor","year","expr","input","input","interpol","propagate_nans","propagate_nans","quantile","closed","ignore_nulls","ignore_nulls","by","by","data_type","expr","expr","expr","expr","expr","falsy","function","function","function","function","idx","input","input","input","input","left","length","offset","op","options","options","options","options","options","order_by","output_type","partition_by","predicate","returns_scalar","right","sort_options","truthy","allow_duplicates","base","base","bin_count","breaks","ddof","decimals","descending","descending","digits","half_life","has_max","has_min","include_breakpoint","include_breaks","include_breaks","include_category","labels","labels","left_closed","left_closed","limit","limit","method","method","n","name","normalize","normalize","offset","options","options","options","options","parallel","probs","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","delimiter","delimiter","dtype","dtype","fill_char","fill_char","ignore_nulls","ignore_nulls","inclusive","infer_schema_len","length","length","literal","literal","literal","n","n","pat","strict","strict","time_unit","time_zone","BinaryNameSpace","base64_decode","base64_encode","borrow","borrow_mut","contains_literal","deref","deref_mut","drop","ends_with","from","hex_decode","hex_encode","init","into","size_bytes","starts_with","try_from","try_into","type_id","vzip","CategoricalNameSpace","DateLikeNameSpace","add_business_days","base_utc_offset","borrow","borrow_mut","cast_time_unit","century","combine","convert_time_zone","date","datetime","day","deref","deref_mut","drop","dst_offset","from","hour","init","into","is_leap_year","iso_year","microsecond","millennium","millisecond","minute","month","month_end","month_start","nanosecond","offset_by","ordinal_day","quarter","replace_time_zone","round","second","strftime","time","timestamp","to_string","total_days","total_hours","total_microseconds","total_milliseconds","total_minutes","total_nanoseconds","total_seconds","truncate","try_from","try_into","type_id","vzip","week","weekday","with_time_unit","year","Abs","All","AllHorizontal","Any","AnyHorizontal","ApproxNUnique","ArgUnique","ArgWhere","ArrayExpr","AsStruct","Atan2","BackwardFill","Base64Decode","Base64Encode","BaseUtcOffset","BinaryExpr","Boolean","BooleanFunction","Business","CastTimeUnit","Categorical","CategoricalFunction","Cbrt","Ceil","Century","Clip","Coalesce","Combine","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","ConvertTimeZone","Correlation","CountMatches","CumCount","CumMax","CumMin","CumProd","CumSum","Cut","DSTOffset","Date","Datetime","DatetimeFunction","Day","Diff","DropNans","DropNulls","Duration","EndsWith","Entropy","EwmMean","EwmMeanBy","EwmStd","EwmVar","Exp","ExtendConstant","Extract","ExtractAll","ExtractGroups","FieldByIndex","FieldByName","FillNull","FillNullWithStrategy","Find","Floor","ForwardFill","FunctionExpr","Fused","GatherEvery","Generic","GetCategories","Hash","Head","HexDecode","HexEncode","Hist","Hour","Interpolate","InterpolateBy","IsBetween","IsDuplicated","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLeapYear","IsNan","IsNotNan","IsNotNull","IsNull","IsUnique","IsoYear","JsonDecode","JsonEncode","JsonPathMatch","Kurtosis","LenBytes","LenChars","ListExpr","Log","Log1p","LowerBound","Lowercase","MaxHorizontal","MeanHorizontal","Microsecond","Millennium","Millisecond","MinHorizontal","Minute","Mode","Month","MonthEnd","MonthStart","MultipleFields","Nanosecond","Negate","Not","NullCount","OffsetBy","OrdinalDay","PadEnd","PadStart","PctChange","PeakMax","PeakMin","Pow","PowFunction","PrefixFields","QCut","Quarter","RLE","RLEID","Random","Range","Rank","Reinterpret","RenameFields","RepeatBy","Replace","Replace","ReplaceStrict","ReplaceTimeZone","Reshape","Reverse","Reverse","RollingExpr","RollingExprBy","Round","Round","RoundSF","SearchSorted","Second","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Sign","Skew","Slice","Split","SplitExact","SplitN","Sqrt","StartsWith","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StructExpr","StructFunction","SuffixFields","SumHorizontal","Tail","TemporalExpr","TemporalFunction","Time","TimeStamp","Titlecase","ToDecimal","ToInteger","ToPhysical","ToString","TopK","TopKBy","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","Trigonometry","Truncate","Unique","UniqueCounts","UpperBound","Uppercase","ValueCounts","Week","WeekDay","WithFields","WithTimeUnit","Year","ZFill","cat","pow","rolling","rolling_by","trigonometry","closed","ignore_nulls","ignore_nulls","allow_duplicates","base","base","bin_count","breaks","ddof","decimals","descending","descending","digits","half_life","has_max","has_min","include_breakpoint","include_breaks","include_breaks","include_category","labels","labels","left_closed","left_closed","limit","limit","method","method","n","name","normalize","normalize","offset","options","options","options","options","parallel","probs","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","delimiter","delimiter","dtype","dtype","fill_char","fill_char","ignore_nulls","ignore_nulls","inclusive","infer_schema_len","length","length","literal","literal","literal","n","n","pat","strict","strict","time_unit","time_zone","CategoricalFunction","GetCategories","Cbrt","Generic","PowFunction","Sqrt","Max","Mean","Min","Quantile","RollingFunction","Skew","Std","Sum","Var","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deserialize","drop","eq","fmt","fmt","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","MaxBy","MeanBy","MinBy","QuantileBy","RollingFunctionBy","StdBy","SumBy","VarBy","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deserialize","drop","eq","fmt","fmt","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","ArcCos","ArcCosh","ArcSin","ArcSinh","ArcTan","ArcTanh","Cos","Cosh","Cot","Degrees","Radians","Sin","Sinh","Tan","Tanh","TrigonometricFunction","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","fmt","fmt","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","DatetimeArgs","DurationArgs","all","all_horizontal","ambiguous","any_horizontal","apply_binary","arange","arg_sort_by","arg_where","as_struct","avg","cast","coalesce","col","collect_all","cols","concat","concat_expr","concat_lf_diagonal","concat_lf_horizontal","concat_list","concat_str","cov","cum_fold_exprs","cum_reduce_exprs","date_range","date_ranges","datetime","datetime_range","datetime_ranges","day","days","dtype_col","dtype_cols","duration","fold_exprs","format_str","hour","hours","index_cols","int_range","int_ranges","is_not_null","is_null","map_binary","max","mean","median","microsecond","microseconds","milliseconds","min","minute","minutes","month","nanoseconds","not","pearson_corr","quantile","reduce_exprs","repeat","rolling_corr","rolling_cov","second","seconds","spearman_rank_corr","sum","time_range","time_ranges","time_unit","time_unit","time_zone","weeks","year","CALL_DF_UDF_PYTHON","CALL_SERIES_UDF_PYTHON","PythonFunction","PythonUdfExpression","__clone_box","borrow","borrow","borrow_mut","borrow_mut","call_udf","call_udf","clone","clone_into","clone_to_uninit","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","get_output","init","init","into","into","new","serialize","to_owned","try_from","try_from","try_into","try_into","try_serialize","type_id","type_id","vzip","vzip","StringNameSpace","base64_decode","base64_encode","borrow","borrow_mut","contains","contains_literal","count_matches","deref","deref_mut","drop","ends_with","extract","extract_all","extract_groups","find","find_literal","from","head","hex_decode","hex_encode","init","into","join","json_decode","json_path_match","len_bytes","len_chars","pad_end","pad_start","replace","replace_all","replace_n","reverse","slice","split","split_exact","split_exact_inclusive","split_inclusive","splitn","starts_with","strip_chars","strip_chars_end","strip_chars_start","strip_prefix","strip_suffix","strptime","tail","to_date","to_datetime","to_decimal","to_integer","to_lowercase","to_time","to_titlecase","to_uppercase","try_from","try_into","type_id","vzip","zfill","UserDefinedFunction","fun","input_fields","name","options","return_type","AllowedOptimizations","CLUSTER_WITH_COLUMNS","COMM_SUBEXPR_ELIM","COMM_SUBPLAN_ELIM","EAGER","FAST_PROJECTION","FILE_CACHING","InProcessQuery","IntoLazy","JoinBuilder","LazyCsvReader","LazyFileListReader","LazyFrame","LazyGroupBy","LazyJsonLineReader","NEW_STREAMING","OptState","PREDICATE_PUSHDOWN","PROJECTION_PUSHDOWN","ROW_ESTIMATE","SIMPLIFY_EXPR","SLICE_PUSHDOWN","STREAMING","ScanArgsAnonymous","ScanArgsIpc","ScanArgsParquet","TYPE_COERCION","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_collect_post_opt","_with_eager","agg","all","allow_parallel","anonymous_scan","anti_join","apply","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom_k","cache","cache","cache","cancel","cast","cast_all","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","cloud_options","cloud_options","cloud_options","cloud_options","cloud_options","cloud_options","coalesce","collect","collect_concurrently","complement","concat_impl","concat_impl","concat_impl","contains","count","cross_join","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","describe_optimized_plan","describe_optimized_plan_tree","describe_plan","describe_plan_tree","difference","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_no_validate","drop_nulls","empty","explain","explode","extend","fetch","fetch","fetch_blocking","fill_nan","fill_null","filter","finish","finish","finish","finish","finish","finish_no_glob","finish_no_glob","finish_no_glob","first","fmt","fmt","fmt","fmt","fmt","force_parallel","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_fallible_iter","from_iter","from_name","full_join","get_current_optimizations","glob","glob","glob","glob","group_by","group_by_dynamic","group_by_stable","head","hive_options","hive_options","how","include_file_paths","include_file_paths","infer_schema_length","init","init","init","init","init","init","init","init","init","init","inner_join","insert","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into_iter","is_all","is_empty","iter","iter_names","join","join_builder","join_nulls","last","lazy","lazy","left_join","left_on","limit","logical_plan","logical_plan","low_memory","low_memory","map","map_python","max","mean","median","memory_map","merge_sorted","min","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","name","new","new","new","new_paths","new_paths","not","null_count","on","optimize","parallel","paths","paths","paths","pivot","profile","quantile","rechunk","rechunk","rechunk","rechunk","rechunk","remove","rename","reverse","right_on","rolling","row_index","row_index","row_index","row_index","row_index","row_index","scan_from_python_function","scan_ipc","scan_ipc_files","scan_parquet","scan_parquet_files","schema","schema","schema_with_arenas","select","select_seq","semi_join","set","set_cached_arena","shift","shift_and_fill","sink_csv","sink_ipc","sink_ipc_cloud","sink_json","sink_parquet","sink_parquet_cloud","skip_rows","slice","sort","sort_by_exprs","std","sub","sub_assign","suffix","sum","symmetric_difference","tail","tail","to_alp","to_alp_optimized","to_dot","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","top_k","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","unique","unique_stable","unnest","unpivot","use_statistics","validate","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with","with_batch_size","with_cache","with_cloud_options","with_cloud_options","with_cluster_with_columns","with_column","with_columns","with_columns_seq","with_comm_subexpr_elim","with_comm_subplan_elim","with_comment_prefix","with_context","with_decimal_comma","with_dtype_overwrite","with_encoding","with_eol_char","with_glob","with_has_header","with_ignore_errors","with_ignore_errors","with_include_file_paths","with_include_file_paths","with_infer_schema_length","with_infer_schema_length","with_low_memory","with_missing_is_null","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_new_streaming","with_null_values","with_optimizations","with_paths","with_paths","with_paths","with_predicate_pushdown","with_projection_pushdown","with_quote_char","with_raise_if_empty","with_rechunk","with_rechunk","with_rechunk","with_row_estimate","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_schema","with_schema","with_schema_modify","with_schema_overwrite","with_separator","with_simplify_expr","with_skip_rows","with_skip_rows_after_header","with_slice_pushdown","with_streaming","with_truncate_ragged_lines","with_try_parse_dates","with_type_coercion","without_optimizations","pivot","pivot_stable","AnonymousScan","AnonymousScanArgs","AnonymousScanOptions","Anti","AsOf","Average","Binary","Boolean","Cache","Cross","CsvWriterOptions","DataFrameScan","Date","DateTime","Decimal","Dense","Distinct","DslPlan","Duration","Duration","DynamicGroupOptions","ExtContext","Filter","Float","Float32","Float64","Full","GroupBy","HConcat","HStack","IR","Inner","Int","Int16","Int32","Int64","Int8","IpcWriterOptions","Join","JoinArgs","JoinType","JoinValidation","JsonWriterOptions","Left","Literal","LiteralValue","ManyToMany","ManyToOne","MapFunction","Max","Min","NULL","Null","Null","OneToMany","OneToOne","Ordinal","ParquetWriteOptions","PolarsTemporalGroupby","PythonScan","Range","RankMethod","RankOptions","Right","RollingGroupOptions","Scan","Select","Semi","Series","Sink","Slice","Sort","StrCat","String","Time","UInt16","UInt32","UInt64","UInt8","Union","UnionArgs","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","add_ms","add_ns","add_us","allows_predicate_pushdown","allows_projection_pushdown","allows_slice_pushdown","as_any","batch_size","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","closed_window","closed_window","cmp","coalesce","compare","compression","compression","compute_schema","data_page_size","days","days_only","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","descending","describe","describe_tree_format","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","diagonal","display","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","every","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_str","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_partitioned_ds","get_datatype","group_by_dynamic","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","how","include_bom","include_boundaries","include_header","index_column","index_column","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","is_asof","is_constant_duration","is_full_days","is_valid_join","is_zero","join_nulls","label","lit","lit","lit","lit","maintain_order","maintain_order","maintain_order","maintain_order","materialize","method","months","months_only","mul","n_rows","nanoseconds","needs_checks","neg","negative","new","new","next_batch","offset","offset","output_schema","parallel","parse","parsed_int","partial_cmp","period","period","predicate","prepare_cloud_plan","rechunk","rolling","row_group_size","scan","schema","schema","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize_options","should_coalesce","skip_rows","slice","start_by","statistics","suffix","suffix","to_alp","to_any_value","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_supertypes","to_writer","to_writer","truncate_impl","truncate_ms","truncate_ns","truncate_us","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validation","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weeks","weeks_only","with_coalesce","with_columns","with_suffix","write_df_to_file","write_df_to_file","aggs","apply","args","by_column","cache_hits","contexts","df","dsl","expr","exprs","file_info","file_options","filter","function","hive_parts","id","input","input","input","input","input","input","input","input","input","input","input","input_left","input_right","inputs","inputs","keys","left_on","len","maintain_order","node","offset","options","options","options","options","options","options","options","output_schema","paths","payload","predicate","predicate","right_on","scan_type","schema","slice","sort_options","version","data_type","high","low"],"q":[[0,"polars_lazy"],[5,"polars_lazy::dsl"],[1571,"polars_lazy::dsl::AggExpr"],[1578,"polars_lazy::dsl::BooleanFunction"],[1581,"polars_lazy::dsl::Expr"],[1616,"polars_lazy::dsl::FunctionExpr"],[1661,"polars_lazy::dsl::StringFunction"],[1681,"polars_lazy::dsl::TemporalFunction"],[1683,"polars_lazy::dsl::binary"],[1704,"polars_lazy::dsl::cat"],[1705,"polars_lazy::dsl::dt"],[1761,"polars_lazy::dsl::function_expr"],[1978,"polars_lazy::dsl::function_expr::BooleanFunction"],[1981,"polars_lazy::dsl::function_expr::FunctionExpr"],[2026,"polars_lazy::dsl::function_expr::StringFunction"],[2046,"polars_lazy::dsl::function_expr::TemporalFunction"],[2048,"polars_lazy::dsl::function_expr::cat"],[2050,"polars_lazy::dsl::function_expr::pow"],[2054,"polars_lazy::dsl::function_expr::rolling"],[2087,"polars_lazy::dsl::function_expr::rolling_by"],[2119,"polars_lazy::dsl::function_expr::trigonometry"],[2163,"polars_lazy::dsl::functions"],[2238,"polars_lazy::dsl::python_udf"],[2284,"polars_lazy::dsl::string"],[2345,"polars_lazy::dsl::udf"],[2351,"polars_lazy::frame"],[2828,"polars_lazy::frame::pivot"],[2830,"polars_lazy::prelude"],[3455,"polars_lazy::prelude::DslPlan"],[3510,"polars_lazy::prelude::LiteralValue"],[3513,"dyn_clone::sealed"],[3514,"polars_plan::dsl::meta"],[3515,"polars_plan::dsl::expr"],[3516,"polars_error"],[3517,"core::result"],[3518,"polars_plan::dsl::selector"],[3519,"polars_plan::dsl::array"],[3520,"polars_plan::dsl::list"],[3521,"core::convert"],[3522,"polars_plan::dsl::expr_dyn_fn"],[3523,"alloc::sync"],[3524,"polars_core::series"],[3525,"core::option"],[3526,"core::ops::function"],[3527,"core::marker"],[3528,"polars_plan::plans::visitor"],[3529,"polars_plan::dsl::function_expr"],[3530,"polars_core::datatypes::dtype"],[3531,"polars_core::chunked_array::ops::sort::options"],[3532,"polars_plan::dsl::function_expr::schema"],[3533,"polars_core::datatypes::field"],[3534,"core::any"],[3535,"alloc::vec"],[3536,"polars_plan::dsl::binary"],[3537,"core::clone"],[3538,"alloc::string"],[3539,"polars_plan::dsl::udf"],[3540,"polars_core::chunked_array::cast"],[3541,"polars_plan::dsl::cat"],[3542,"polars_plan::dsl::arity"],[3543,"polars_plan::dsl::function_expr::boolean"],[3544,"polars_plan::dsl::function_expr::cat"],[3545,"polars_plan::dsl::function_expr::datetime"],[3546,"polars_plan::dsl::function_expr::pow"],[3547,"polars_plan::dsl::function_expr::strings"],[3548,"polars_plan::dsl::function_expr::struct_"],[3549,"polars_plan::dsl::functions::temporal"],[3550,"polars_plan::dsl::options"],[3551,"polars_core::utils"],[3552,"polars_lazy::dsl::eval"],[3553,"polars_time::windows::duration"],[3554,"polars_time::windows::group_by"],[3555,"polars_core::datatypes::time_unit"],[3556,"serde::de"],[3557,"polars_plan::plans"],[3558,"polars_core::series::ops"],[3559,"polars_plan::dsl::dt"],[3560,"polars_lazy::dsl::list"],[3561,"polars_arrow::legacy::kernels::ewm"],[3562,"polars_plan::dsl::struct_"],[3563,"polars_core::chunked_array::ops"],[3564,"core::fmt"],[3565,"polars_plan::plans::apply"],[3566,"polars_plan::dsl::function_expr::binary"],[3567,"polars_plan::dsl::function_expr::array"],[3568,"polars_plan::dsl::function_expr::business"],[3569,"polars_plan::dsl::function_expr::list"],[3570,"polars_plan::dsl::function_expr::range"],[3571,"polars_plan::plans::options"],[3572,"polars_core::schema"],[3573,"core::hash"],[3574,"polars_ops::series::ops::interpolation::interpolate"],[3575,"polars_ops::series::ops::is_between"],[3576,"polars_plan::dsl::name"],[3577,"polars_plan::plans::lit"],[3578,"polars_plan::dsl::python_udf"],[3579,"polars_utils::idx_vec"],[3580,"polars_arrow::legacy::kernels::rolling::no_nulls"],[3581,"polars_ops::series::ops::rank"],[3582,"polars_time::group_by::dynamic"],[3583,"polars_core::chunked_array::ops::rolling_window"],[3584,"polars_core::datatypes"],[3585,"polars_core::chunked_array"],[3586,"polars_time::chunkedarray::rolling_window"],[3587,"polars_core::chunked_array::ops::search_sorted"],[3588,"serde::ser"],[3589,"polars_core::series::series_trait"],[3590,"polars_plan::dsl::string"],[3591,"polars_ops::chunked_array::list::to_struct"],[3592,"polars_ops::series::ops::business"],[3593,"polars_arrow::legacy::kernels::time"],[3594,"polars_plan::dsl::function_expr::rolling"],[3595,"polars_plan::dsl::function_expr::rolling_by"],[3596,"polars_plan::dsl::function_expr::trigonometry"],[3597,"polars_core::frame"],[3598,"rayon::iter"],[3599,"pyo3::types::any"],[3600,"pyo3::instance"],[3601,"polars_utils::arena"],[3602,"polars_plan::plans::ir"],[3603,"polars_plan::plans::aexpr"],[3604,"polars_plan::frame::opt_state"],[3605,"polars_plan::plans::anonymous_scan"],[3606,"polars_lazy::scan::anonymous_scan"],[3607,"polars_utils::index"],[3608,"polars_lazy::frame::exitable"],[3609,"polars_utils::aliases"],[3610,"polars_lazy::scan::csv"],[3611,"polars_lazy::scan::ipc"],[3612,"polars_lazy::scan::ndjson"],[3613,"polars_lazy::scan::parquet"],[3614,"polars_lazy::scan::file_list_reader"],[3615,"polars_io::cloud::options"],[3616,"polars_ops::frame::join::args"],[3617,"core::iter::traits::collect"],[3618,"polars_utils::iter::fallible"],[3619,"bitflags::iter"],[3620,"std::path"],[3621,"polars_io::options"],[3622,"polars_io::csv::write::options"],[3623,"polars_io::ipc::write"],[3624,"polars_io::json"],[3625,"polars_io::parquet::write::options"],[3626,"smartstring::alias"],[3627,"polars_core::frame::explode"],[3628,"core::num::nonzero"],[3629,"polars_io::csv::read::options"],[3630,"chrono_tz::timezones"],[3631,"core::cmp"],[3632,"polars_core::frame::group_by::proxy"],[3633,"polars_core::datatypes::any_value"],[3634,"std::io"],[3635,"polars_io::parquet::write::writer"],[3636,"chrono::naive::datetime"],[3637,"polars_plan::dsl::functions::selectors"],[3638,"polars_plan::dsl::functions::horizontal"],[3639,"polars_plan::dsl::functions::arity"],[3640,"polars_plan::dsl"],[3641,"polars_plan::dsl::functions::range"],[3642,"polars_plan::dsl::functions::index"],[3643,"polars_plan::dsl::functions::coerce"],[3644,"polars_plan::dsl::functions::syntactic_sugar"],[3645,"polars_plan::dsl::functions::business"],[3646,"polars_plan::dsl::functions::concat"],[3647,"polars_plan::dsl::functions::correlation"],[3648,"polars_plan::dsl::functions::repeat"],[3649,"polars_plan::client"]],"i":[0,0,0,0,0,28,8,5,0,37,5,56,56,41,5,56,56,28,28,28,69,28,0,28,28,28,60,60,58,5,28,0,28,0,28,5,58,28,0,0,59,28,58,0,0,28,28,5,5,58,28,60,60,60,58,28,37,60,28,28,28,28,28,28,58,58,58,0,58,58,28,41,28,28,55,5,58,0,60,28,41,41,28,28,28,28,5,0,8,28,5,68,0,0,0,28,60,60,60,5,61,61,0,0,28,28,5,60,37,28,41,28,5,0,0,28,5,28,59,57,0,68,41,41,28,60,60,60,28,58,37,5,8,28,28,0,56,56,56,56,56,56,56,58,56,56,56,56,56,58,68,0,60,61,60,5,28,37,5,60,60,69,28,0,0,5,28,28,41,41,28,60,41,41,37,28,37,28,37,0,58,58,58,37,28,41,58,28,41,58,58,58,61,41,37,55,58,28,0,56,41,41,5,28,58,0,41,58,67,60,60,28,28,28,41,28,0,61,28,37,58,28,28,28,28,28,28,5,0,61,28,60,28,28,58,28,60,28,67,0,28,28,8,58,28,28,28,58,0,5,0,0,28,28,28,28,28,28,5,60,5,5,0,60,60,60,59,60,37,28,0,60,60,60,60,60,60,0,28,0,0,8,5,61,37,28,60,28,0,5,0,58,58,60,60,60,28,58,28,28,58,58,58,58,58,58,58,28,41,58,0,28,28,28,60,0,28,37,58,58,0,5,5,0,0,61,58,41,58,60,51,52,53,54,37,5,55,41,18,56,57,58,59,60,61,28,62,63,64,65,66,67,68,69,8,47,4,4,4,4,4,5,5,8,5,5,0,10,11,5,0,66,62,5,10,11,5,0,5,5,0,5,5,5,0,5,0,5,5,5,5,5,5,5,10,11,5,10,11,5,5,0,5,0,33,66,5,35,37,0,0,5,0,5,0,8,8,50,10,33,11,4,109,86,51,52,53,54,37,5,55,41,18,56,57,58,59,60,61,28,62,63,64,65,66,67,68,69,8,47,50,10,33,11,4,109,86,51,52,53,54,37,5,55,41,18,56,57,58,59,60,61,28,62,63,64,65,66,67,68,69,8,47,5,5,0,65,45,47,35,48,47,0,5,5,0,5,5,5,5,5,5,51,52,53,54,37,5,55,41,18,56,57,58,59,60,61,28,62,63,64,65,66,67,68,69,8,47,51,52,53,54,37,5,55,41,18,56,57,58,59,60,61,28,62,63,64,65,66,67,68,69,8,47,51,52,53,54,37,5,55,41,41,18,56,57,58,59,59,60,61,28,62,63,64,64,65,66,67,68,68,69,8,47,0,0,0,0,0,0,10,11,5,5,5,5,10,11,0,5,0,5,5,5,0,5,72,72,5,0,0,0,0,62,63,64,5,18,18,18,62,63,65,66,67,68,5,50,10,33,11,4,109,86,51,52,53,54,37,5,55,41,18,18,56,57,58,59,60,61,28,62,63,64,65,66,67,68,69,8,47,50,10,33,11,4,109,86,51,52,53,54,37,5,55,41,18,56,57,58,59,60,61,28,62,63,64,65,66,67,68,69,8,47,37,5,55,41,18,18,18,56,57,58,59,60,61,28,64,65,66,67,68,69,8,11,5,5,5,50,10,33,11,4,109,86,51,52,53,54,37,5,55,41,18,56,57,58,59,60,61,28,62,63,64,65,66,67,68,69,8,47,5,11,5,0,5,0,0,0,5,37,5,5,55,41,18,18,56,57,58,59,60,61,28,64,65,66,67,68,69,8,5,5,5,5,55,55,55,41,41,41,56,56,56,57,57,57,58,58,58,59,59,59,60,60,60,61,61,61,64,64,64,65,65,65,66,66,66,67,67,67,68,68,68,69,69,69,84,84,5,5,5,5,65,5,5,5,5,5,86,86,86,5,5,5,5,0,11,5,5,18,5,5,35,48,45,90,5,5,55,41,41,18,56,56,57,57,58,58,59,59,60,60,61,61,28,28,62,63,64,65,66,67,68,69,47,0,66,65,0,5,50,10,33,11,4,109,86,51,52,53,54,37,5,5,5,5,5,5,5,5,5,5,5,5,5,5,55,41,18,18,18,18,18,18,18,18,18,18,18,18,56,57,58,59,60,61,28,28,28,28,28,62,63,64,65,66,67,67,68,69,8,8,8,8,8,47,18,47,0,5,0,11,5,11,5,10,11,5,50,78,16,33,35,90,5,5,4,37,5,5,55,41,56,57,58,59,60,61,28,64,65,66,67,68,69,8,11,5,5,62,63,5,0,50,10,33,11,4,109,86,51,52,53,54,37,5,55,41,18,56,57,58,59,60,61,28,62,63,64,65,66,67,68,69,8,47,47,0,0,5,5,50,10,33,11,4,109,86,51,52,53,54,37,5,55,41,18,56,57,58,59,60,61,28,62,63,64,65,66,67,68,69,8,47,5,106,11,4,41,5,4,4,5,5,5,5,5,5,5,5,0,5,0,5,4,4,5,10,11,86,109,5,0,11,5,0,11,5,5,0,5,5,5,5,5,5,5,109,5,0,5,33,33,18,18,5,18,109,18,5,0,5,5,0,33,5,33,33,33,33,0,10,11,5,0,0,11,5,0,0,10,11,5,5,62,63,63,0,10,11,5,0,64,62,63,5,62,5,10,11,5,5,47,5,5,63,5,5,5,33,33,18,62,63,8,47,5,5,0,5,0,5,47,5,52,54,4,5,5,5,5,5,0,5,4,5,109,109,5,0,5,5,0,5,5,5,0,5,5,86,0,5,5,33,5,5,47,10,11,5,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,5,5,66,66,18,5,11,11,5,5,62,63,37,5,55,41,18,18,18,56,57,58,59,60,61,28,64,65,66,67,68,69,8,11,11,5,11,10,11,5,5,5,5,5,5,5,5,11,5,10,11,5,5,0,5,10,11,5,5,65,5,0,5,5,8,109,109,0,10,11,5,0,18,11,5,5,5,0,51,53,0,62,63,62,11,5,10,109,51,52,53,54,37,5,55,41,18,56,57,58,59,60,61,28,62,63,64,65,66,67,68,69,8,47,5,33,5,41,56,57,58,59,60,61,28,10,11,109,5,5,50,10,33,11,4,109,86,51,52,53,54,37,5,55,41,18,56,57,58,59,60,61,28,62,63,64,65,66,67,68,69,8,47,50,10,33,11,4,109,86,51,52,53,54,37,5,55,41,18,56,57,58,59,60,61,28,62,63,64,65,66,67,68,69,8,47,33,33,5,33,35,50,10,33,11,4,109,86,51,52,53,54,37,5,55,41,18,56,57,58,59,60,61,28,62,63,64,65,66,67,68,69,8,47,0,4,11,10,11,5,5,10,11,5,5,5,10,11,5,50,10,33,11,4,109,86,51,52,53,54,37,5,55,41,18,56,57,58,59,60,61,28,62,63,64,65,66,67,68,69,8,47,63,0,52,54,64,62,62,63,33,86,63,62,63,62,63,62,63,63,62,63,62,63,33,33,62,63,62,62,63,62,5,62,203,204,205,203,204,205,203,206,207,208,209,210,211,211,212,213,209,214,215,216,217,218,214,213,216,210,219,218,220,219,219,220,211,212,216,217,218,217,218,217,215,213,220,209,215,221,222,223,224,225,226,227,228,229,230,231,232,232,224,225,221,224,225,221,225,221,233,234,226,235,236,237,237,222,236,238,239,240,241,237,221,242,243,244,245,246,247,238,235,237,248,249,250,251,252,253,248,249,254,251,252,253,255,256,257,257,254,250,255,256,258,258,0,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,0,0,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,28,56,56,56,56,28,28,28,28,28,28,28,60,60,58,28,28,0,28,58,28,0,59,28,58,28,28,58,28,60,60,60,58,28,60,28,28,28,28,28,28,58,58,58,58,58,28,28,28,58,60,28,28,28,28,28,28,28,60,60,60,61,61,28,28,60,28,28,0,28,28,59,57,28,60,60,60,28,58,28,28,56,56,56,56,56,56,56,58,56,56,56,56,56,58,60,61,60,28,60,60,28,28,28,28,60,28,28,58,58,58,28,58,28,58,58,58,61,58,28,56,28,58,58,60,60,28,28,28,28,0,61,28,58,28,28,28,28,28,28,61,28,60,28,28,58,28,60,28,28,28,58,28,28,28,58,28,28,28,28,28,28,60,60,60,60,59,60,28,0,60,60,60,60,60,60,28,0,61,28,60,28,0,58,58,60,60,60,28,58,28,28,58,58,58,58,58,58,58,28,58,28,28,28,60,28,58,58,61,58,58,60,0,0,0,0,0,206,207,208,221,222,223,224,225,226,227,228,229,230,231,232,232,224,225,221,224,225,221,225,221,233,234,226,235,236,237,237,222,236,238,239,240,241,237,221,242,243,244,245,246,247,238,235,237,248,249,250,251,252,253,248,249,254,251,252,253,255,256,257,257,254,250,255,256,258,258,0,57,59,59,0,59,131,131,131,131,0,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,132,132,132,132,0,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,0,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,0,0,0,0,62,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,62,63,0,0,0,0,0,62,63,0,0,0,0,0,0,0,0,0,62,63,63,0,62,63,62,63,0,0,0,0,0,0,0,62,63,0,0,0,0,62,63,62,63,62,0,0,0,0,140,112,140,112,140,112,140,140,140,140,112,140,112,140,140,112,140,140,140,140,140,140,112,140,140,112,112,140,112,140,112,140,140,112,140,112,140,112,112,140,112,140,0,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,0,47,47,47,47,47,0,149,149,149,149,149,149,0,0,0,0,0,0,0,0,149,0,149,149,149,149,149,149,0,0,0,149,155,137,148,152,157,158,159,160,149,137,137,148,149,150,137,137,148,149,149,149,149,149,149,149,149,150,155,137,148,152,157,158,159,160,149,150,155,137,148,152,157,158,159,160,149,137,137,158,160,155,137,137,155,137,148,152,157,158,159,160,149,155,137,148,152,157,158,159,160,149,155,137,148,152,157,158,159,160,149,149,161,161,157,159,158,160,150,137,137,149,161,161,157,149,137,137,137,152,158,160,149,150,155,137,148,152,157,158,159,160,149,150,155,137,148,152,157,158,159,160,149,137,137,137,137,149,150,155,155,137,137,148,152,157,158,159,160,149,137,137,149,137,137,149,155,137,155,137,137,137,150,161,161,157,159,161,157,159,137,149,149,149,149,149,150,150,155,137,137,137,148,152,157,158,159,160,149,149,149,149,149,149,149,149,137,137,161,161,157,160,137,137,137,148,158,160,150,158,160,152,150,155,137,148,152,157,158,159,160,149,137,149,149,149,150,155,137,148,152,157,158,159,160,149,149,149,149,149,149,137,137,150,137,171,137,137,150,137,137,148,159,160,137,137,137,137,137,158,137,137,161,157,159,152,158,160,152,150,157,159,157,159,149,137,150,137,160,161,157,159,0,137,137,161,157,159,158,160,149,137,137,150,137,161,157,159,152,158,160,137,137,137,137,137,137,152,137,137,137,137,149,137,137,137,137,137,137,137,137,137,152,137,137,137,137,149,149,150,137,149,137,148,137,137,137,155,137,148,152,157,158,159,160,149,149,137,150,155,137,148,152,157,158,159,160,149,150,155,137,148,152,157,158,159,160,149,150,155,137,148,152,157,158,159,160,149,149,137,137,137,137,160,150,137,150,155,137,148,152,157,158,159,160,149,150,159,157,157,159,137,137,137,137,137,137,157,137,157,157,157,157,157,157,157,159,157,159,157,159,157,157,161,157,157,159,159,137,157,137,161,157,159,137,137,157,157,161,157,159,137,161,137,157,157,159,159,157,159,157,159,157,137,157,157,137,137,157,157,137,137,0,0,0,0,0,167,167,190,191,191,80,167,0,80,191,191,191,190,80,0,0,191,0,80,80,191,191,191,167,80,80,80,80,167,191,191,191,191,191,0,80,0,0,0,0,167,0,0,185,185,80,190,190,0,0,191,185,185,190,0,0,80,191,0,0,167,0,80,80,167,191,80,80,80,191,191,191,191,191,191,191,80,0,166,117,75,170,167,185,177,190,178,116,179,180,191,192,139,80,75,75,75,151,151,151,151,177,166,117,75,197,170,167,185,177,196,190,178,116,179,180,191,192,139,80,166,117,75,197,170,167,185,177,196,190,178,116,179,180,191,192,139,80,166,117,75,170,167,185,177,190,178,116,179,180,191,192,139,80,166,117,75,170,167,185,177,190,178,116,179,180,191,192,139,80,166,117,75,75,170,167,185,185,177,190,190,178,178,116,116,179,179,180,180,191,192,139,139,80,166,117,75,170,75,178,180,80,180,75,75,166,117,170,185,177,178,116,179,180,192,139,80,166,117,75,197,170,167,185,177,196,190,178,116,179,180,191,192,139,80,166,117,75,197,170,167,185,177,196,190,178,116,179,180,191,192,139,80,116,80,80,166,117,75,170,167,185,177,190,178,116,179,180,191,192,139,80,139,80,166,117,75,197,170,167,185,177,196,190,178,116,179,180,191,192,139,80,166,117,75,170,167,185,177,190,178,116,179,180,191,192,139,166,166,166,117,117,117,75,75,75,170,170,170,167,167,167,185,185,185,177,177,177,178,178,178,179,179,179,180,180,180,192,192,192,139,139,139,166,166,117,75,75,151,170,167,167,185,185,177,190,178,116,179,180,191,192,139,192,166,117,75,197,170,170,167,185,177,196,190,178,116,179,180,191,192,139,80,139,191,194,166,117,75,170,167,185,177,190,178,116,179,180,191,192,139,170,177,166,177,166,117,166,117,75,197,170,167,185,177,196,190,178,116,179,180,191,192,139,80,166,117,75,197,170,167,185,177,196,190,178,116,179,180,191,192,139,80,80,167,75,75,185,75,170,166,110,75,196,191,177,178,179,180,191,116,75,75,75,197,75,185,75,75,75,170,151,166,117,197,139,75,75,75,166,117,197,0,139,194,180,151,151,197,166,117,75,170,167,185,177,190,178,116,179,180,191,192,139,80,177,170,192,170,166,180,170,170,80,191,166,117,75,170,167,185,177,190,178,116,179,180,191,192,139,80,75,167,185,139,178,180,75,75,75,75,166,117,75,197,170,167,185,177,196,190,178,116,179,180,191,191,192,139,80,166,117,75,197,170,167,185,177,196,190,178,116,179,180,191,192,139,80,166,117,75,197,170,167,185,177,196,190,178,116,179,180,191,192,139,80,170,166,117,75,197,170,167,185,177,196,190,178,116,179,180,191,192,139,80,75,75,170,197,170,178,180,259,259,260,261,262,263,264,265,266,267,268,268,264,269,268,262,270,262,266,259,267,271,261,272,269,263,273,274,274,260,275,259,274,272,259,265,272,276,266,259,274,267,271,275,264,268,273,270,268,274,268,264,261,261,265,277,277,277],"f":"``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{b{c}}d}f{}}0000000000000000000000000{hj}{{hj}{{n{jl}}}}000{jj}{{jj}}{{A`A`}}2{{j{b{Ab}}}j}{{}j}{Adj}{Afj}{{jAh}j}{c{{n{jl}}}{{Al{{Aj{j}}}}}}``{{jc}j{{An{j}}}}4321{{jcAh}j{{An{j}}}}{{jc{Bd{{Bb{B`}}}}}j{{Bl{Bf}{{Bh{{n{{Bj{Bf}}l}}}}}}BnC`}}{{jjc{Bd{{Bb{B`}}}}}j{{Bl{BfBf}{{Bh{{n{{Bj{Bf}}l}}}}}}BnC`}}{{{b{j}}{b{Cbc}}b}{{n{Cdl}}}{{Cf{{b{j}}b}{{Bh{{n{Cdl}}}}}}}}{{jc{b{{Aj{j}}}}{Bd{{Bb{B`}}}}}j{{Bl{{b{Cb{Aj{Bf}}}}}{{Bh{{n{{Bj{Bf}}l}}}}}}BnC`}}{{jCh{b{{Aj{j}}}}AhAh}j}{{ce{Bd{{Bb{B`}}}}Ah}j{{Bl{{b{Cb{Aj{Bf}}}}}{{Bh{{n{{Bj{Bf}}l}}}}}}BnC`}{{Al{{Aj{j}}}}}}{jj}{{jjCjCl}j}11111{{jj}j}2>=2>=2{{jCn}j}{{cD`}j{{Al{{Aj{j}}}}}}4{cj{{An{j}}}}{{{b{Db}}}{{b{{Aj{Dd}}}}}}`{jAd}{{{b{Df}}}{{b{Dh}}}}{{{b{Dj}}}{{b{j}}}}{{{Dl{j}}}j}{{{b{Ab}}}j}{{j{Bj{Dn}}}j}`{jE`}{{jEbj}j}{{A`A`}}0{{{b{c}}}{{b{e}}}{}{}}00000000000000000000000000000000{{{b{Cbc}}}{{b{Cbe}}}{}{}}00000000000000000000000000000000?{{jcg{Dl{Ah}}}j{{An{j}}}{{An{j}}Ed}{{Al{{Aj{e}}}}}}{{jj{Ef{Ah}}{Dl{Eh}}}j}`{{{b{Ej}}{b{Ab}}}{{n{Ell}}}}{{En{Dl{j}}}{{n{jl}}}}{{{b{Df}}{b{Cb{Aj{Bf}}}}}{{n{{Bj{Bf}}l}}}}{{{b{F`}}BfBf}{{n{Bfl}}}}{{En{Dl{j}}}j}{{jCl}j}0{{jClFb}j}`{jFd}{jj}0{{jjj}j}{{jj}j}0{{{b{Ff}}}Ff}{{{b{Fh}}}Fh}{{{b{Fj}}}Fj}{{{b{Fl}}}Fl}{{{b{Dj}}}Dj}{{{b{j}}}j}{{{b{Fn}}}Fn}{{{b{Eb}}}Eb}{{{b{{Bd{c}}}}}{{Bd{c}}}Ed}{{{b{G`}}}G`}{{{b{Gb}}}Gb}{{{b{Gd}}}Gd}{{{b{Gf}}}Gf}{{{b{Gh}}}Gh}{{{b{Gj}}}Gj}{{{b{Ch}}}Ch}{{{b{Gl}}}Gl}{{{b{Gn}}}Gn}{{{b{H`}}}H`}{{{b{Hb}}}Hb}{{{b{Hd}}}Hd}{{{b{Hf}}}Hf}{{{b{Hh}}}Hh}{{{b{Hj}}}Hj}{{{b{A`}}}A`}{{{b{En}}}En}{{{b{c}}{b{Cbe}}}f{}{}}0000000000000000000000000{{{b{c}}}f{}}00000000000000000000000000000{{{b{{Aj{j}}}}}j}{{{b{Ab}}}j}{cj{{Hl{El}}}}{{eAh}{{n{jl}}}{{An{j}}Ed}{{Al{{Aj{c}}}}}}{e{{n{jl}}}{{An{j}}Ed}{{Al{{Aj{c}}}}}}{{c{b{Ab}}Ah}j{{Al{{Aj{j}}}}}}{{Adc}j{{An{j}}}}{{Afc}j{{An{j}}}}{jj}00021{{jjHn}j}{{jAh}j}{{jceAh}j{{Bl{BfBf}{{Bh{{n{{Bj{Bf}}l}}}}}}BnC`Ed}{{Al{{Aj{j}}}}}}111{{ce}j{{Bl{BfBf}{{Bh{{n{{Bj{Bf}}l}}}}}}BnC`Ed}{{Al{{Aj{j}}}}}}2{{I`jIbAh}j}0{{j{Dl{Id}}{Bj{{Dl{El}}}}AhAh}j}{{jjIfIh}j}{Glj}{{jjIfIh{Bj{Ij}}{Bj{El}}}j}0```{{}j}{{}{{Bd{{Bb{F`}}}}}}{{}{{Bd{{Bb{Il}}}}}}{{}{{Bd{{Bb{B`}}}}}}{{}Gl}{{}Gn}{{}Hb}{{}Hd}{{}Hf}{{}Hh}{jj}{Ib{{b{c}}}{}}00000000000000{{{b{{Bd{c}}}}}b{}}111111111111111111{Ib{{b{Cbc}}}{}}00000000000000000000000000000000{c{{n{Dj}}}In}{c{{n{j}}}In}{c{{n{Fn}}}In}{c{{n{Eb}}}In}{c{{n{{Bd{Bf}}}}}In}{c{{n{{Bd{{Bb{Df}}}}}}}In}{c{{n{{Bd{{Bb{J`}}}}}}}In}{c{{n{G`}}}In}{c{{n{Gb}}}In}{c{{n{Gd}}}In}{c{{n{Gf}}}In}{c{{n{Gh}}}In}{c{{n{Gj}}}In}{c{{n{Ch}}}In}{c{{n{H`}}}In}{c{{n{Hb}}}In}{c{{n{Hd}}}In}{c{{n{Hf}}}In}{c{{n{Hh}}}In}{c{{n{Hj}}}In}{c{{n{A`}}}In}{{AfCjJb}j}{{jCjJb}j}{{jj}}{{jc}j{{An{j}}}}{Ibf}00000000000000000000000000000000{jj}{Afj}1`{jJd}{{{b{Cl}}}j}{cj{{Al{{Aj{Cl}}}}}}{Gnj}{{jIdAh}j}{{{b{Dj}}{b{Dj}}}Ah}{{{b{j}}{b{j}}}Ah}:{{{b{Fn}}{b{Fn}}}Ah}{{{b{Eb}}{b{Eb}}}Ah}{{{b{{Bd{{Bb{c}}}}}}{b{{Bd{{Bb{c}}}}}}}AhJf}{{{b{{Bd{Bf}}}}{b{{Bd{Bf}}}}}Ah}{{{b{G`}}{b{G`}}}Ah}{{{b{Gb}}{b{Gb}}}Ah}{{{b{Gd}}{b{Gd}}}Ah}{{{b{Gf}}{b{Gf}}}Ah}{{{b{Gh}}{b{Gh}}}Ah}{{{b{Gj}}{b{Gj}}}Ah}{{{b{Ch}}{b{Ch}}}Ah}{{{b{H`}}{b{H`}}}Ah}{{{b{Hb}}{b{Hb}}}Ah}{{{b{Hd}}{b{Hd}}}Ah}{{{b{Hf}}{b{Hf}}}Ah}{{{b{Hh}}{b{Hh}}}Ah}{{{b{Hj}}{b{Hj}}}Ah}{{{b{A`}}{b{A`}}}Ah}{{jc}j{{An{j}}}}{{{b{c}}{b{e}}}Ah{}{}}00000000000000000000000000000000000000000000{{JhjAh}j}0{{jJj}j}{{jjIf}j}11`{{jc}j{{Hl{El}}}}{{jc}j{{Al{{Aj{Cl}}}}}}{jj}0{{jjj}j}{{JlCj}j}{{Jl{b{Ab}}}j}{{Jl{b{{Aj{c}}}}}j{{Al{Ab}}}};;{{jJn}j}<{{}j}{Afj}77{{}{{Bd{{Bb{B`}}}}}}8{{jj}j}{{{b{Df}}{b{CbK`}}}{{n{fKb}}}}{{{b{F`}}{b{CbK`}}}{{n{fKb}}}}{{{b{Ej}}{b{CbK`}}}{{n{fKb}}}}{{{b{Kd}}{b{CbK`}}}{{n{fKb}}}}{{{b{j}}{b{CbK`}}}{{n{fKb}}}}0{{{b{Fn}}{b{CbK`}}}{{n{fKb}}}}{{{b{Eb}}{b{CbK`}}}{{n{fKb}}}}0{{{b{{Bd{c}}}}{b{CbK`}}}{{n{fKb}}}{}}{{{b{G`}}{b{CbK`}}}{{n{fKb}}}}0{{{b{Gb}}{b{CbK`}}}{{n{fKb}}}}0{{{b{Gd}}{b{CbK`}}}{{n{fKb}}}}0{{{b{Gf}}{b{CbK`}}}{{n{fKb}}}}0{{{b{Gh}}{b{CbK`}}}{{n{fKb}}}}0{{{b{Gj}}{b{CbK`}}}{{n{fKb}}}}0{{{b{Ch}}{b{CbK`}}}{{n{fKb}}}}0{{{b{Gl}}{b{CbK`}}}{{n{fKb}}}}{{{b{Gn}}{b{CbK`}}}{{n{fKb}}}}{{{b{H`}}{b{CbK`}}}{{n{fKb}}}}{{{b{Hb}}{b{CbK`}}}{{n{fKb}}}}{{{b{Hd}}{b{CbK`}}}{{n{fKb}}}}{{{b{Hf}}{b{CbK`}}}{{n{fKb}}}}{{{b{Hh}}{b{CbK`}}}{{n{fKb}}}}{{{b{Hj}}{b{CbK`}}}{{n{fKb}}}}{{{b{En}}{b{CbK`}}}{{n{fKb}}}}{{jce}j{{Bl{BfBf}{{Bh{{n{{Bj{Bf}}l}}}}}}BnC`Ed}{{Al{{Aj{j}}}}}}``{{{b{Ab}}c}{{n{jl}}}{{Al{{Aj{j}}}}}}{{j{Bj{Dn}}}j}{cc{}}00000000000{Kfj}{Hnj}{Cjj}{Ehj}{{{b{Ab}}}j}{Khj}6{Kjj}{Dnj}{Ahj}{Klj}{Djj}{Idj}{Knj}=={G`{{Bd{{Bb{Df}}}}}}{Gh{{Bd{{Bb{Df}}}}}}{L`{{Bd{{Bb{Df}}}}}}{Gj{{Bd{{Bb{Df}}}}}}{Gd{{Bd{{Bb{Df}}}}}}{Ch{{Bd{{Bb{Df}}}}}}{Lb{{Bd{{Bb{Df}}}}}}{Ld{{Bd{{Bb{Df}}}}}}{cc{}}{Gb{{Bd{{Bb{Df}}}}}}{Lf{{Bd{{Bb{Df}}}}}}{Lh{{Bd{{Bb{Df}}}}}}333333{GbCh}{G`Ch}{L`Ch}{GhCh}777777{HhHf}888{{{Bb{Ab}}}A`}9{ElA`}{{{b{Ab}}}A`}{jA`}<{Cl{{Bd{{Bb{B`}}}}}}``{{jc{Bd{{Bb{B`}}}}Lj}j{{Bl{Bf}{{Bh{{n{{Bj{Bf}}l}}}}}}BnC`}}`{{AfjAh}j}{{jc}j{{An{j}}}}{{Afjj}j}{{jIbIb}j}{{AdjAh}j}43{Fdj}{{{b{Il}}{b{Ll}}Ln{b{Dd}}{b{Dd}}}{{Bj{Dd}}}}{{{b{B`}}{b{Ll}}Ln{b{{Aj{Dd}}}}}{{n{Ddl}}}}{{{b{Db}}}Ib}{{{b{Df}}}{{Bj{{Bd{{Bb{B`}}}}}}}}{{{b{Kd}}{b{Ll}}}{{n{{Bb{Ll}}l}}}}99{{{b{h}}}Ah}{{{b{Dj}}{b{Cbc}}}fM`}{{jDnDnDnDn}j}{{{b{j}}{b{Cbc}}}fM`}{{{b{Fn}}{b{Cbc}}}fM`}{{{b{Eb}}{b{Cbc}}}fM`}{{{b{G`}}{b{Cbc}}}fM`}{{{b{Gb}}{b{Cbc}}}fM`}{{{b{Gd}}{b{Cbc}}}fM`}{{{b{Gf}}{b{Cbc}}}fM`}{{{b{Gh}}{b{Cbc}}}fM`}{{{b{Gj}}{b{Cbc}}}fM`}{{{b{Ch}}{b{Cbc}}}fM`}{{{b{H`}}{b{Cbc}}}fM`}{{{b{Hb}}{b{Cbc}}}fM`}{{{b{Hd}}{b{Cbc}}}fM`}{{{b{Hf}}{b{Cbc}}}fM`}{{{b{Hh}}{b{Cbc}}}fM`}{{{b{Hj}}{b{Cbc}}}fM`}{{{b{A`}}{b{Cbc}}}fM`}{{Afj}j}{{j{Bj{Ib}}}j}{{j{Bj{j}}{Bj{Ib}}AhAh}j}``{jj}{cj{{Al{{Aj{Cj}}}}}}{{}Ib}00000000000000000000000000000000`{{jjCjCl}j}{{jjj}j}{{jMb}j}{{jj}j}{ce{}{}}00000000000000000000000000000000{{{b{j}}}}{MdAf}{AfAf}{h{{n{{`{Mf}}l}}}}{{{b{Eb}}}Ah}{{jccMh}j{{An{j}}}}{{{b{h}}}Ah}{{{b{h}}Ah}Ah}???{{jc}j{{An{j}}}}{jj}0000000330{{AdjAh}j}{{AfjAh}j}{Jlj}{Mjj}{{jAhAh}j}{{}j}{Afj}7107{jAf}{cjMl}{{jId}j}:;;:;;{{Mjc}j{{Bl{{b{Ab}}}{{Bh{{n{Ell}}}}}}BnC`}}{{jc{Bd{{Bb{B`}}}}}j{{Bl{Bf}{{Bh{{n{{Bj{Bf}}l}}}}}}BnC`}}{{jjc{Bd{{Bb{B`}}}}}j{{Bl{BfBf}{{Bh{{n{{Bj{Bf}}l}}}}}}BnC`}}{{j{b{Cbc}}{b{Cb}}}{{n{jl}}}{{Cf{j{b{Cb}}}{{Bh{{n{jl}}}}}}}}{{{b{Db}}{Bj{{b{El}}}}}{{n{Ddl}}}}{{{b{Db}}c}{{n{Ddl}}}{{Mn{{b{Cl}}}{{Bh{Cl}}}}}}{c{{Bd{{Bb{B`}}}}}{{Bl{{b{Cl}}}{{Bh{{n{Cll}}}}}}BnC`}}{c{{Bd{{Bb{B`}}}}}{{Bl{{b{{Aj{{b{Cl}}}}}}}{{Bh{{n{Cll}}}}}}BnC`}}{{jc}j{{Cf{j}{{Bh{j}}}}}}{c{{Bd{{Bb{B`}}}}}{{Bl{{b{Dd}}}{{Bh{{n{Ddl}}}}}}BnC`}}{{Mj{Bb{Bl}}}j}{c{{Bd{{Bb{B`}}}}}{{Bl{{b{{Aj{Dd}}}}}{{Bh{{n{Ddl}}}}}}BnC`}}:{{ce{Bd{{Bb{B`}}}}}j{{Bl{{b{Cb{Aj{Bf}}}}}{{Bh{{n{{Bj{Bf}}l}}}}}}BnC`}{{Al{{Aj{j}}}}}}{{jc{b{{Aj{j}}}}{Bd{{Bb{B`}}}}}j{{Bl{{b{Cb{Aj{Bf}}}}}{{Bh{{n{{Bj{Bf}}l}}}}}}BnC`}}{{jCh{b{{Aj{j}}}}AhAh}j}2{{{b{Db}}}{{n{Ddl}}}}{{jN`Ah}j}1111{{{b{Ab}}}j}{Adj}{Afj}{jj}{c{{n{jl}}}{{Al{{Aj{j}}}}}}42104321{jh}```54321```2`{{jj}}543{jMj}`44`{j}{{jc}j{{An{j}}}}0;{{{b{{Aj{Dd}}}}}Db}{c{{Bd{c}}}{}}{{jjj}Gl}{{}Gn}{jA`}{{{b{Ab}}{Dl{Dd}}{Bd{{Bb{B`}}}}c}EnDf}{{{b{j}}{b{Cb{Nb{{b{j}}}}}}}f}{{j{b{Cb{Nb{j}}}}}f}>>{Cjj}?`9{{Fhc}j{{An{j}}}}{{Flc}j{{An{j}}}}{{{b{h}}}{{n{{Bb{Ab}}l}}}}{{je}j{{An{j}}Ed}{{Al{{Aj{c}}}}}}{{je{Bj{{Nd{eCn}}}}Hh}j{{An{j}}Ed}{{Al{{Aj{c}}}}}}{{jj}j}{jj}0{{jjHn}j}{{}j}{h{{Dl{j}}}}{{jc}j{{An{j}}}}{{Mj{b{Ab}}}j}05`{{j{Dl{Id}}{Bj{{Dl{El}}}}AhAhAh}j}{{jIb{Bj{{Dl{El}}}}AhAhAh}j}{{{b{Ab}}jNf}j}{{jjNf}j}9{{jNh{Bj{Dn}}}j}{{ce}j{{Bl{BfBf}{{Bh{{n{{Bj{Bf}}l}}}}}}BnC`Ed}{{Al{{Aj{j}}}}}}{{jAh}j}{{jj}}{{Jl{Dl{El}}}j}{{cj}j{{An{j}}}};{{jcc}j{{An{j}}}}{{{b{Db}}{Bj{Cl}}}{{n{Ddl}}}}{{jcc{Bj{c}}{Bj{Cl}}}j{{An{j}}}}{{j{b{{Aj{Cj}}}}Hj}j}`{Adj}{Afj}{jj}00{{jNj}j}{{jjH`}j}0{{j{Bb{Bl}}{Bd{{Bb{B`}}}}Nl}j}{{jIbc}j{{Cf{{b{Cb{O`{Nn}}}}}{{Bh{{Bj{Id}}}}}}BnC`Ob}}{{jNl}j}{{jjOd}j}101010{{jNfIdNl}j}{{jjNfIdOd}j}{{jIbAh}j}434343{{{b{h}}}{{Dl{{Bb{Ab}}}}}}{{jKj}j}{{jEh}j}``{{}{{Bd{{Bb{B`}}}}}}{{jjAhAh{Bj{Dn}}}j}{{AfjAhAh{Bj{Dn}}}j}01{{jcOf}j{{An{j}}}}``{{{b{Dj}}c}nOh}{{{b{j}}c}nOh}{{{b{Fn}}c}nOh}{{{b{Eb}}c}nOh}{{{b{{Bd{{Bb{Df}}}}}}c}nOh}{{{b{{Bd{{Bb{J`}}}}}}c}nOh}{{{b{{Bd{Bf}}}}c}nOh}{{{b{G`}}c}nOh}{{{b{Gb}}c}nOh}{{{b{Gd}}c}nOh}{{{b{Gf}}c}nOh}{{{b{Gh}}c}nOh}{{{b{Gj}}c}nOh}{{{b{Ch}}c}nOh}{{{b{H`}}c}nOh}{{{b{Hb}}c}nOh}{{{b{Hd}}c}nOh}{{{b{Hf}}c}nOh}{{{b{Hh}}c}nOh}{{{b{Hj}}c}nOh}{{{b{A`}}c}nOh}{{Afc}j{{An{j}}}}0{{jOj}j}1{{Adj}j}{{Afj}j}{{jj}j}{{jce}j{{An{j}}}{{An{j}}}}{jj}{{j{Bj{Dn}}}j}111{{jAh}j}{{Afjj}j}4{{AdCn}j}{{AfCn}j}{{jCn}j}{{jeD`}j{{An{j}}Ed}{{Al{{Aj{c}}}}}}{{jjHnAh}j}8{{AdHn}j}{{AfHn}j}{{jHn}j}{jOl}`{{jCl}j}`{jJl}{{jj}}{{A`A`}}{{Mj{b{Ab}}}j}0{{{b{Ab}}}j}{Adj}{Afj}{jj}{c{{n{jl}}}{{Al{{Aj{j}}}}}}{{}{{Bd{{Bb{B`}}}}}}{{Afj}j}{{j{Bj{Ib}}}j}44{{jjj}j}{{Ffc}Fh{{An{j}}}}{{Fjc}Fl{{An{j}}}}{{jjIfIh}j}```{{AfIb}j}{{{b{j}}{b{Ll}}Ln}{{n{Ddl}}}}<{Mjj}{{{b{c}}}e{}{}}0000000000000000000000000<{{{b{Db}}}{{n{Ddl}}}}{{{b{c}}}El{}}00000000{{Ad{Bj{{Bb{Bl}}}}}j}{{AfOn{Bj{{Bb{Bl}}}}Ib}j}5{{jj}j}{{jcg{Dl{Ah}}}j{{An{j}}}{{An{j}}Ed}{{Al{{Aj{e}}}}}}{c{{n{e}}}{}{}}00000000000000000000000000000000000000000000000000000000000000000{{{b{Db}}c}{{n{Ddl}}}{{Mn{{b{Cl}}}{{Bh{{n{Cll}}}}}}}}{{{b{Db}}c}{{n{Ddl}}}{{Mn{{b{{Aj{{b{Cl}}}}}}}{{Bh{{n{Cll}}}}}}}}{{jc}{{n{jl}}}{{Cf{j}{{Bh{{n{jl}}}}}}}}{{{b{Db}}c}{{n{Ddl}}}{{Mn{{b{Dd}}}{{Bh{{n{Ddl}}}}}}}}{{{b{Df}}{b{Cb{Dl{Hn}}}}}{{n{fl}}}}{{{b{c}}}A@`{}}00000000000000000000000000000000`{hj}{{Afc}j{{An{j}}}}{Adj}{Afj}{jj}02100{{jAhAhElAh}j}{{AdHn}j}{{AfHn}j}{{jHn}j}{ce{}{}}00000000000000000000000000000000`{cFf{{An{j}}}}{{Fhc}Fj{{An{j}}}}{{Flc}Fj{{An{j}}}}`{{Glj}Gl}0{{Gnj}Gn}{{{b{Db}}Cl}{{n{Ddl}}}}{{Jl{Dl{j}}}{{n{jl}}}}{{Gnjjj}Gn}{{Gljjj}Gl}1545445454{{{b{Db}}{Bj{Cl}}}{{n{Ddl}}}}{{{b{Db}}}{{n{Ddl}}}}76{{GlIj}Gl}{{Gl{Bj{El}}}Gl}89{{jc}j{{An{j}}}}``````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{E`Ah}j}{E`j}{{{b{c}}}{{b{e}}}{}{}}{{{b{Cbc}}}{{b{Cbe}}}{}{}}{{E`j}j}{Ib{{b{c}}}{}}{Ib{{b{Cbc}}}{}}{Ibf}3{cc{}}87{{}Ib}{ce{}{}}96{c{{n{e}}}{}{}}0{{{b{c}}}A@`{}}2``{{Jdj{Ef{Ah}}{Dl{Eh}}A@b}j}{Jdj}<;{{JdIj}j}1{{JdjIj}j}{{JdEl}j}333<;:393873333333333{{Jdj}j}44{{Jd{Bj{El}}jA@d}j}15{{Jd{b{Ab}}}j}65066666662998:6656``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{Cbc}}}{{b{Cbe}}}{}{}}{{{b{A@f}}}A@f}{{{b{c}}{b{Cbe}}}f{}{}}{{{b{c}}}f{}}{Ib{{b{c}}}{}}{Ib{{b{Cbc}}}{}}{c{{n{A@f}}}In}{Ibf}{{{b{A@f}}{b{A@f}}}Ah}{{{b{A@f}}{b{CbK`}}}{{n{fKb}}}}0{cc{}}{{{b{A@f}}{b{Cbc}}}fM`}{{}Ib}{ce{}{}}{{{b{A@f}}c}nOh}{{{b{c}}}e{}{}}{{{b{c}}}El{}}{c{{n{e}}}{}{}}0{{{b{c}}}A@`{}}5````````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{Cbc}}}{{b{Cbe}}}{}{}}{{{b{A@h}}}A@h}{{{b{c}}{b{Cbe}}}f{}{}}{{{b{c}}}f{}}{Ib{{b{c}}}{}}{Ib{{b{Cbc}}}{}}{c{{n{A@h}}}In}{Ibf}{{{b{A@h}}{b{A@h}}}Ah}{{{b{A@h}}{b{CbK`}}}{{n{fKb}}}}0{cc{}}{{{b{A@h}}{b{Cbc}}}fM`}{{}Ib}{ce{}{}}{{{b{A@h}}c}nOh}{{{b{c}}}e{}{}}{{{b{c}}}El{}}{c{{n{e}}}{}{}}0{{{b{c}}}A@`{}}5````````````````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{Cbc}}}{{b{Cbe}}}{}{}}{{{b{A@j}}}A@j}{{{b{c}}{b{Cbe}}}f{}{}}{{{b{c}}}f{}}0{Ib{{b{c}}}{}}{Ib{{b{Cbc}}}{}}{c{{n{A@j}}}In}{Ibf}{{{b{A@j}}{b{A@j}}}Ah}{{{b{c}}{b{e}}}Ah{}{}}00{{{b{A@j}}{b{CbK`}}}{{n{fKb}}}}0{cc{}}{{{b{A@j}}{b{Cbc}}}fM`}{{}Ib}{ce{}{}}{{{b{A@j}}c}nOh}{{{b{c}}}e{}{}}{{{b{c}}}El{}}{c{{n{e}}}{}{}}0{{{b{c}}}A@`{}}5``{{}j}{c{{n{jl}}}{{Al{{Aj{j}}}}}}`0{{jjc{Bd{{Bb{B`}}}}}j{{Bl{BfBf}{{Bh{{n{{Bj{Bf}}l}}}}}}BnC`}}{{jjCjCl}j}{{cD`}j{{Al{{Aj{j}}}}}}{cj{{An{j}}}}{{{Dl{j}}}j}{{{b{Ab}}}j}{{jCl}j}{{{b{{Aj{j}}}}}j}2{c{{A@n{{Dl{A@l}}}}}{{AAd{}{{AA`{AAb}}}}}}{cj{{Hl{El}}}}{{cAAf}{{A@n{AAb}}}{{Al{{Aj{AAb}}}}}}{{eAh}{{n{jl}}}{{An{j}}Ed}{{Al{{Aj{c}}}}}}11{e{{n{jl}}}{{An{j}}Ed}{{Al{{Aj{c}}}}}}{{c{b{Ab}}Ah}j{{Al{{Aj{j}}}}}}{{jjHn}j}{{jceAh}j{{Bl{BfBf}{{Bh{{n{{Bj{Bf}}l}}}}}}BnC`Ed}{{Al{{Aj{j}}}}}}{{ce}j{{Bl{BfBf}{{Bh{{n{{Bj{Bf}}l}}}}}}BnC`Ed}{{Al{{Aj{j}}}}}}{{jjIfIh}j}0{Glj}{{jjIfIh{Bj{Ij}}{Bj{El}}}j}0``{{{b{Cl}}}j}{cj{{Al{{Aj{Cl}}}}}}{Gnj}{{jce}j{{Bl{BfBf}{{Bh{{n{{Bj{Bf}}l}}}}}}BnC`Ed}{{Al{{Aj{j}}}}}}{{{b{Ab}}c}{{n{jl}}}{{Al{{Aj{j}}}}}}``{cj{{Al{{Aj{Cj}}}}}}{{jjCjCl}j}{{jjj}j}{jj}0{{jjc{Bd{{Bb{B`}}}}}j{{Bl{BfBf}{{Bh{{n{{Bj{Bf}}l}}}}}}BnC`}}{{{b{Ab}}}j}00```0````2{{jjHn}j}{{{b{Ab}}jNf}j}{{ce}j{{Bl{BfBf}{{Bh{{n{{Bj{Bf}}l}}}}}}BnC`Ed}{{Al{{Aj{j}}}}}}{{cj}j{{An{j}}}}{{jjH`}j}0``{{jjHnAh}j}6{{jjIfIh}j}0`````````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}0{{{b{Cbc}}}{{b{Cbe}}}{}{}}0{{{b{N`}}{b{Cb{Aj{Bf}}}}}{{n{{Bj{Bf}}l}}}}{{{b{AAh}}A@l}{{n{A@ll}}}}{{{b{AAh}}}AAh}{{{b{c}}{b{Cbe}}}f{}{}}{{{b{c}}}f{}}{Ib{{b{c}}}{}}0{Ib{{b{Cbc}}}{}}0{c{{n{AAh}}}In}{Ibf}0{{{b{AAh}}{b{AAh}}}Ah}{{{b{c}}{b{e}}}Ah{}{}}00{{{b{AAh}}{b{CbK`}}}{{n{fKb}}}}{cc{}}0{{{AAl{AAj}}}AAh}{{{b{N`}}}{{Bj{{Bd{{Bb{B`}}}}}}}}{{}Ib}0{ce{}{}}0{{{AAl{AAj}}{Bj{Cl}}AhAh}N`}{{{b{AAh}}c}nOh}{{{b{c}}}e{}{}}{c{{n{e}}}{}{}}000{{{b{N`}}{b{Cb{Dl{Hn}}}}}{{n{fl}}}}{{{b{c}}}A@`{}}066`{{OlAh}j}{Olj}{{{b{c}}}{{b{e}}}{}{}}{{{b{Cbc}}}{{b{Cbe}}}{}{}}{{OljAh}j}{{Olj}j}1{Ib{{b{c}}}{}}{Ib{{b{Cbc}}}{}}{Ibf}3{{OljIb}j}4{{Ol{b{Ab}}}{{n{jl}}}}65{cc{}}6;:{{}Ib}{ce{}{}}{{Ol{b{Ab}}Ah}j}{{Ol{Bj{Cl}}{Bj{Ib}}}j}:>>{{OlIbAAn}j}0{{OljjAh}j}0{{OljjAhCj}j}{Olj}{{Oljj}j}?;;?;??????{{OlClHbj}j}{{Olj}j}{{OlHb}j}{{Ol{Bj{Ij}}{Bj{El}}Hbj}j}{{OlIb}j}{{OljAh}j}7377{c{{n{e}}}{}{}}0{{{b{c}}}A@`{}}?6`````````````````````````````````{{{b{c}}d}f{}}00000000{{AAbc}{{A@n{A@l}}}{{Bl{AB`{b{Cb{ABd{ABb}}}}{b{Cb{ABd{ABf}}}}}{{Bh{{A@n{f}}}}}}}}{{AAbAh}AAb}{{ABhc}AAb{{Al{{Aj{j}}}}}}{{}ABj}{{ABlAh}ABl}{{{Bb{ABn}}AC`}{{A@n{AAb}}}}{{AAbAAbcc}AAb{{An{j}}}}{{ABhcACb}AAb{{Bl{A@l}{{Bh{{A@n{A@l}}}}}}BnC`}}{{ABjABj}ABj}{{{b{CbABj}}ABj}f}10{{{b{ABj}}}Kj}021{{{b{c}}}{{b{e}}}{}{}}000000000{{{b{Cbc}}}{{b{Cbe}}}{}{}}000000000{{AAbACdcD`}AAb{{Al{{Aj{j}}}}}}{AAbAAb}``{{{b{ACf}}}f}{{AAb{ACh{{b{Ab}}Cl}}Ah}AAb}{{AAbClAh}AAb}{{{b{ACf}}}ACf}{{{b{AAb}}}AAb}{{{b{ABh}}}ABh}{{{b{AC`}}}AC`}{{{b{ACj}}}ACj}{{{b{ACl}}}ACl}{{{b{ACn}}}ACn}{{{b{AD`}}}AD`}{{{b{ABj}}}ABj}{{{b{c}}{b{Cbe}}}f{}{}}00000000{{{b{c}}}f{}}000000000{{{b{ADb}}}{{Bj{{b{ADd}}}}}}0{{{b{ACj}}}{{Bj{{b{ADd}}}}}}{{{b{ACn}}}{{Bj{{b{ADd}}}}}}``{{ABlADf}ABl}{AAb{{A@n{A@l}}}}{AAb{{A@n{ACf}}}}{ABjABj}{{{b{ADb}}{Dl{AAb}}}{{A@n{AAb}}}}0{{{b{ACj}}{Dl{AAb}}}{{A@n{AAb}}}}{{{b{ABj}}ABj}Ah}{AAbAAb}{{AAbAAb{Bj{El}}}AAb}{{}AAb}{{}AC`}{{}ACl}{{}AD`}{{}ABj}{Ib{{b{c}}}{}}000000000{Ib{{b{Cbc}}}{}}000000000{{{b{AAb}}}{{A@n{El}}}}000{{ABjABj}ABj}{Ibf}{{{b{CbACf}}}f}11{{AAbe}AAb{{An{A`}}}{{ADh{}{{AA`{c}}}}}}22222220{{AAb{Bj{{Dl{j}}}}}AAb}8{{{b{AAb}}Ah}{{A@n{El}}}}{{AAbe}AAb{{An{j}}Ed}{{Al{{Aj{c}}}}}}{{{b{CbABj}}c}f{{ADh{}{{AA`{ABj}}}}}}{{{b{ACf}}}{{Bj{{A@n{A@l}}}}}}{{AAbIb}{{A@n{A@l}}}}{{{b{ACf}}}{{A@n{A@l}}}}{{AAbc}AAb{{An{j}}}}0{{AAbj}AAb}{ABlAAb}{ADb{{A@n{AAb}}}}0{ACj{{A@n{AAb}}}}{ACn{{A@n{AAb}}}}210{AAbAAb}{{{b{ABj}}{b{CbK`}}}{{n{fKb}}}}0000{{ABlAh}ABl}{cc{}}0{J`AAb}1{ABhAAb}2222222{Kj{{Bj{ABj}}}}{KjABj}00{g{{n{ic}}}{}{}{{ADj{c}{{AA`{e}}}}}{}}{cABj{{ADh{}{{AA`{ABj}}}}}}{{{b{Ab}}}{{Bj{ABj}}}}{{AAbAAbcc}AAb{{An{j}}}}{{{b{AAb}}}ABj}{{{b{ADb}}}Ah}0{{{b{ACj}}}Ah}`{{AAbe}ABh{{An{j}}Ed}{{Al{{Aj{c}}}}}}{{AAbjcADl}ABh{{Al{{Aj{j}}}}}}1{{ABh{Bj{Ib}}}AAb}``{{ABlADn}ABl}```{{}Ib}0000000008{{{b{CbABj}}ABj}f}{{ABjABj}ABj}{{{b{ABj}}ABj}Ah}{ce{}{}}000000000{ABj}{{{b{ABj}}}Ah}0{{{b{ABj}}}{{AE`{ABj}}}}{{{b{ABj}}}{{AEb{ABj}}}}{{AAbAAbccAEd}AAb{{Al{{Aj{j}}}}}}{AAbABl}{{ABlAh}ABl}{AAbAAb}{AEfAAb}1{{AAbAAbcc}AAb{{An{j}}}}{{ABlc}ABl{{Al{{Aj{j}}}}}}{{AAbACd}AAb}``{{ACnAh}ACn}`{{AAbcAEh{Bj{{Bb{Kd}}}}{Bj{{b{Ab}}}}}AAb{{Bl{A@l}{{Bh{{A@n{A@l}}}}}}BnC`}}{{AAbAAhAEh{Bj{ACb}}Ah}AAb}777`{{AAbAAb{b{Ab}}}{{A@n{AAb}}}}8{{{b{ADb}}}{{Bj{Ib}}}}{{{b{ACj}}}{{Bj{Ib}}}}{{{b{ACn}}}{{Bj{Ib}}}}````={cACj{{Al{AEj}}}}{cACn{{Al{AEj}}}}{{{Bb{{Aj{AEl}}}}}ACj}{{{Bb{{Aj{AEl}}}}}ACn}{ABjABj}{AAbAAb}>{{AAb{b{Cb{ABd{ABb}}}}{b{Cb{ABd{ABf}}}}}{{A@n{AB`}}}}`{{{b{ADb}}}{{b{{Aj{AEl}}}}}}{{{b{ACj}}}{{b{{Aj{AEl}}}}}}{{{b{ACn}}}{{b{{Aj{AEl}}}}}}`{AAb{{A@n{{Nd{A@lA@l}}}}}}{{AAbjNf}AAb}{{{b{ADb}}}Ah}{{{b{ACj}}}Ah}{{{b{ACn}}}Ah}``{{{b{CbABj}}ABj}f}{{AAbei}AAb{{Al{Ab}}}{{ADh{}{{AA`{c}}}}}{{Al{Ab}}}{{ADh{}{{AA`{g}}}}}};{{ABlc}ABl{{Al{{Aj{j}}}}}}{{AAbjcNj}ABh{{Al{{Aj{j}}}}}}{{{b{ADb}}}{{Bj{{b{AEn}}}}}}{{{b{ACj}}}{{Bj{{b{AEn}}}}}}{{{b{ACn}}}{{Bj{{b{AEn}}}}}}```{{LlAF`Ah}AAb}{{cACl}{{A@n{AAb}}}{{Al{AEj}}}}{{{Bb{{Aj{AEl}}}}ACl}{{A@n{AAb}}}}{{cAD`}{{A@n{AAb}}}{{Al{AEj}}}}{{{Bb{{Aj{AEl}}}}AD`}{{A@n{AAb}}}}{{{b{CbAAb}}}{{A@n{ACb}}}}`{{{b{CbAAb}}{b{Cb{ABd{ABb}}}}{b{Cb{ABd{ABf}}}}}{{A@n{ACb}}}}{{AAbc}AAb{{Al{{Aj{j}}}}}}0{{AAbAAbcc}AAb{{An{j}}}}{{{b{CbABj}}ABjAh}f}{{{b{AAb}}{ABd{ABb}}{ABd{ABf}}}f}{{AAbc}AAb{{An{j}}}}{{AAbce}AAb{{An{j}}}{{An{j}}}}{{AAbcAFb}{{A@n{f}}}{{Al{AEj}}}}{{AAbcAFd}{{A@n{f}}}{{Al{AEj}}}}{{AAbEl{Bj{ADd}}AFd}{{A@n{f}}}}{{AAbcAFf}{{A@n{f}}}{{Al{AEj}}}}{{AAbcAFh}{{A@n{f}}}{{Al{AEj}}}}{{AAbEl{Bj{ADd}}AFh}{{A@n{f}}}}`{{AAbCjACd}AAb}{{AAbcD`}AAb{{Hl{AFj}}}}{{AAbcD`}AAb{{Al{{Aj{j}}}}}}{{AAbHn}AAb}{{ABjABj}ABj}{{{b{CbABj}}ABj}f}{{ABlc}ABl{{Al{Ab}}}}{AAbAAb}3{{AAbACd}AAb}{{ABh{Bj{Ib}}}AAb}{AAb{{A@n{AFl}}}}0{{{b{AAb}}Ah}{{A@n{El}}}}{{{b{c}}}e{}{}}000000007{{AAbACdcD`}AAb{{Al{{Aj{j}}}}}}{c{{n{e}}}{}{}}0000000000000000000{{{b{c}}}A@`{}}000000000;{{AAb{Bj{{Dl{El}}}}AFn}AAb}0{{AAbe}AAb{{Al{Ab}}}{{ADh{}{{AA`{c}}}}}}{{AAbAG`}AAb}`{{ABlAGb}ABl}{{AAbHn}AAb}{ce{}{}}000000000{{ABlAAb}ABl}{{ACn{Bj{AGd}}}ACn}{{ACjAh}ACj}{{ACj{Bj{ADd}}}ACj}{{ACn{Bj{ADd}}}ACn}{{AAbAh}AAb}{{AAbj}AAb}{{AAbc}AAb{{Al{{Aj{j}}}}}}022{{ACj{Bj{{b{Ab}}}}}ACj}{{AAbc}AAb{{Al{{Aj{AAb}}}}}}7{{ACj{Bj{ACb}}}ACj}{{ACjAGf}ACj}{{ACjHn}ACj}:::{{ACnAh}ACn}{{ACj{Bj{{Bb{Ab}}}}}ACj}{{ACn{Bj{{Bb{Ab}}}}}ACn}{{ACj{Bj{Ib}}}ACj}?>>{{ADbc}ADb{{An{{Bj{Ib}}}}}}{{ACjc}ACj{{An{{Bj{Ib}}}}}}2{{ACnc}ACn{{An{{Bj{Ib}}}}}}{{ACn{Bj{Ib}}}ACn}?{{ACj{Bj{AGh}}}ACj}{{AAbABj}AAb}{{ADb{Bb{{Aj{AEl}}}}}ADb}{{ACj{Bb{{Aj{AEl}}}}}ACj}{{ACn{Bb{{Aj{AEl}}}}}ACn}{{AAbAh}AAb}0{{ACj{Bj{Hn}}}ACj}{{ACjAh}ACj}{{ADbAh}ADb}1{{ACnAh}ACn}4{{ADbc}ADb{{An{{Bj{AEn}}}}}}{{AAb{b{Ab}}{Bj{ACd}}}AAb}{{ACj{Bj{AEn}}}ACj}{{ACjc}ACj{{An{{Bj{AEn}}}}}}{{ACn{Bj{AEn}}}ACn}{{ACnc}ACn{{An{{Bj{AEn}}}}}}{{ACj{Bj{ACb}}}ACj}{{ACn{Bj{ACb}}}ACn}{{ACjc}{{A@n{ACj}}}{{Bl{Ll}{{Bh{{A@n{Ll}}}}}}}}1{{ACjHn}ACj}>{{ACjIb}ACj}0??==?{AAbAAb}{{{b{A@l}}e{Bj{i}}{Bj{m}}Ah{Bj{j}}{Bj{{b{Ab}}}}}{{A@n{A@l}}}{{Al{Ab}}}{{ADh{}{{AA`{c}}}}}{{Al{Ab}}}{{ADh{}{{AA`{g}}}}}{{Al{Ab}}}{{ADh{}{{AA`{k}}}}}}0`````````````````````````````````````````````````````````````````````````````````{{{b{c}}d}f{}}000000000000000{{{b{If}}Cj{Bj{{b{AGj}}}}}{{n{Cjl}}}}00{{{b{ABn}}}Ah}00{{{b{ABn}}}{{b{Dh}}}}`{{{b{c}}}{{b{e}}}{}{}}00000000000000000{{{b{Cbc}}}{{b{Cbe}}}{}{}}00000000000000000{{{b{ADl}}}ADl}{{{b{Nj}}}Nj}{{{b{If}}}If}{{{b{AEd}}}AEd}{{{b{ADn}}}ADn}{{{b{AGb}}}AGb}{{{b{AFb}}}AFb}{{{b{AGl}}}AGl}{{{b{AFd}}}AFd}{{{b{Nh}}}Nh}{{{b{AFf}}}AFf}{{{b{AFh}}}AFh}{{{b{AGn}}}AGn}{{{b{AH`}}}AH`}{{{b{AAf}}}AAf}{{{b{J`}}}J`}{{{b{c}}{b{Cbe}}}f{}{}}000000000000000{{{b{c}}}f{}}00000000000000000000000``{{{b{If}}{b{If}}}AHb}`{{{b{c}}{b{e}}}AHb{}{}}``{{{b{J`}}}{{n{{Bb{Ll}}l}}}}`{{{b{If}}}Cj}{{{b{If}}}Ah}{{}ADl}{{}Nj}{{}AEd}{{}AGb}{{}AFb}{{}AFd}{{}Nh}{{}AFf}{{}AFh}{{}AH`}{{}AAf}{{}J`}{Ib{{b{c}}}{}}00000000000000000{Ib{{b{Cbc}}}{}}00000000000000000`{{{b{J`}}}{{n{Ell}}}}0{c{{n{ADl}}}In}{c{{n{Nj}}}In}{c{{n{If}}}In}{c{{n{AEd}}}In}{c{{n{ADn}}}In}{c{{n{AGb}}}In}{c{{n{AFb}}}In}{c{{n{AGl}}}In}{c{{n{AFd}}}In}{c{{n{Nh}}}In}{c{{n{AFf}}}In}{c{{n{AFh}}}In}{c{{n{AGn}}}In}{c{{n{AH`}}}In}{c{{n{AAf}}}In}{c{{n{J`}}}In}`{{{b{J`}}}{{n{{`{Mf}}l}}}}{Ibf}00000000000000000{{{b{ADl}}{b{ADl}}}Ah}{{{b{Nj}}{b{Nj}}}Ah}{{{b{If}}{b{If}}}Ah}{{{b{AEd}}{b{AEd}}}Ah}{{{b{ADn}}{b{ADn}}}Ah}{{{b{AGb}}{b{AGb}}}Ah}{{{b{AFb}}{b{AFb}}}Ah}{{{b{AGl}}{b{AGl}}}Ah}{{{b{AFd}}{b{AFd}}}Ah}{{{b{Nh}}{b{Nh}}}Ah}{{{b{AFf}}{b{AFf}}}Ah}{{{b{AFh}}{b{AFh}}}Ah}{{{b{AGn}}{b{AGn}}}Ah}{{{b{AH`}}{b{AH`}}}Ah}{{{b{AAf}}{b{AAf}}}Ah}{{{b{c}}{b{e}}}Ah{}{}}00000000000000000000000000000000000`{{{b{ADl}}{b{CbK`}}}{{n{fKb}}}}{{{b{Nj}}{b{CbK`}}}{{n{fKb}}}}{{{b{If}}{b{CbK`}}}{{n{fKb}}}}0{{{b{ABn}}{b{CbK`}}}{{n{fKb}}}}{{{b{AEd}}{b{CbK`}}}{{n{fKb}}}}{{{b{ADn}}{b{CbK`}}}{{n{fKb}}}}0{{{b{AGb}}{b{CbK`}}}{{n{fKb}}}}0{{{b{AFb}}{b{CbK`}}}{{n{fKb}}}}{{{b{AGl}}{b{CbK`}}}{{n{fKb}}}}{{{b{AFd}}{b{CbK`}}}{{n{fKb}}}}{{{b{Nh}}{b{CbK`}}}{{n{fKb}}}}{{{b{AFf}}{b{CbK`}}}{{n{fKb}}}}{{{b{AFh}}{b{CbK`}}}{{n{fKb}}}}{{{b{AGn}}{b{CbK`}}}{{n{fKb}}}}{{{b{AH`}}{b{CbK`}}}{{n{fKb}}}}{{{b{AAf}}{b{CbK`}}}{{n{fKb}}}}`{cc{}}000{ADnAEd}11111111111111`{{{b{AGn}}}Cl}{{{b{AHd}}{Dl{Bf}}{b{ADl}}}{{n{{Nd{Bf{Dl{Bf}}AHf}}l}}}}{{{b{ADl}}{b{Cbc}}}fM`}{{{b{Nj}}{b{Cbc}}}fM`}{{{b{If}}{b{Cbc}}}fM`}{{{b{AEd}}{b{Cbc}}}fM`}{{{b{ADn}}{b{Cbc}}}fM`}{{{b{AGb}}{b{Cbc}}}fM`}{{{b{AFb}}{b{Cbc}}}fM`}{{{b{AGl}}{b{Cbc}}}fM`}{{{b{AFd}}{b{Cbc}}}fM`}{{{b{Nh}}{b{Cbc}}}fM`}{{{b{AFf}}{b{Cbc}}}fM`}{{{b{AFh}}{b{Cbc}}}fM`}{{{b{AGn}}{b{Cbc}}}fM`}{{{b{AH`}}{b{Cbc}}}fM`}{{{b{AAf}}{b{Cbc}}}fM`}``````{{}Ib}00000000000000000{ce{}{}}00000000000000000{{{b{J`}}}}{{{b{ADn}}}Ah}{{{b{If}}{Bj{{b{Ab}}}}}Ah}{{{b{If}}}Ah}{{{b{AGb}}{b{ADn}}}{{n{fl}}}}1``{Mlj}{Ifj}{AHhj}{AGnj}````{AGnAGn}`{{{b{If}}}Cj}7{{IfCj}If}`1{{{b{AGb}}}Ah}{If}:{CjIf}{ADnAEd}{{{b{ABn}}AHj}{{n{{Bj{A@l}}l}}}}````{{{b{Ab}}}If}`{{{b{If}}{b{If}}}{{Bj{AHb}}}}```{{J`El}{{n{{Dl{Hn}}l}}}}`{{{b{AHd}}{Dl{Bf}}{b{Nj}}}{{n{{Nd{Bf{Dl{Bf}}AHf}}l}}}}`{{{b{ABn}}AHj}{{n{A@ll}}}}{{{b{ABn}}{Bj{Ib}}}{{n{{Bb{Ll}}l}}}}`{{{b{ADl}}c}nOh}{{{b{Nj}}c}nOh}{{{b{If}}c}nOh}{{{b{AEd}}c}nOh}{{{b{ADn}}c}nOh}{{{b{AGb}}c}nOh}{{{b{AFb}}c}nOh}{{{b{AGl}}c}nOh}{{{b{AFd}}c}nOh}{{{b{Nh}}c}nOh}{{{b{AFf}}c}nOh}{{{b{AFh}}c}nOh}{{{b{AGn}}c}nOh}{{{b{AH`}}c}nOh}{{{b{AAf}}c}nOh}{{{b{J`}}c}nOh}`{{{b{AEd}}}Ah}````{{{b{AEd}}}{{b{Ab}}}}`{J`{{n{AFll}}}}{{{b{AGn}}}{{Bj{AHl}}}}{{{b{c}}}e{}{}}000000000000000{{{b{c}}}El{}}00`{{{b{AFd}}c}{{AHn{c}}}AI`}{{{b{AFh}}c}{{AIb{c}}}AI`}{{{b{If}}Cj{Bj{{b{AGj}}}}ceg}{{n{Cjl}}}{{Bl{Cj}{{Bh{Cj}}}}}{{Bl{Cj}{{Bh{AId}}}}}{{Bl{AId}{{Bh{Cj}}}}}}{{{b{If}}Cj{Bj{{b{AGj}}}}}{{n{Cjl}}}}00{c{{n{e}}}{}{}}00000000000000{AHl{{n{AGnl}}}}111111111111111111111{{{b{c}}}A@`{}}00000000000000000`{ce{}{}}00000000000000000{{{b{If}}}Cj}{{{b{If}}}Ah}{{AEdADf}AEd}`{{AEd{Bj{El}}}AEd}{{{b{AFd}}A@lc}{{n{fl}}}AI`}{{{b{AFh}}A@lc}{{n{fl}}}AI`}``````````````````````````````````````````````````````````","D":"GHn","p":[[1,"reference"],[5,"Private",3513],[1,"unit"],[5,"MetaNameSpace",5,3514],[6,"Expr",5,3515],[6,"PolarsError",3516],[6,"Result",3517],[6,"Selector",5,3518],[1,"str"],[5,"ArrayNameSpace",5,3519],[5,"ListNameSpace",5,3520],[1,"bool"],[1,"slice"],[10,"AsRef",3521],[10,"Into",3521],[10,"FunctionOutputField",5,3522],[5,"Arc",3523],[5,"SpecialEq",5,3522],[5,"Series",3524],[17,"Output"],[6,"Option",3525],[10,"Fn",3526],[10,"Send",3527],[10,"Sync",3527],[0,"mut"],[6,"VisitRecursion",3528],[10,"FnMut",3526],[6,"FunctionExpr",5,3529],[1,"i64"],[6,"DataType",3530],[5,"SortOptions",3531],[5,"SortMultipleOptions",3531],[5,"FieldsMapper",5,3532],[5,"Field",3533],[10,"SeriesUdf",5,3522],[10,"Any",3534],[6,"AggExpr",5,3515],[5,"Vec",3535],[1,"u64"],[5,"BinaryNameSpace",1683,3536],[6,"Operator",5,3515],[10,"Clone",3537],[1,"array"],[1,"i32"],[10,"RenameAliasFn",5,3522],[5,"String",3538],[5,"UserDefinedFunction",5,3539],[10,"SeriesBinaryUdf",5,3522],[6,"CastOptions",3540],[5,"CategoricalNameSpace",5,3541],[5,"When",5,3542],[5,"Then",5,3542],[5,"ChainedWhen",5,3542],[5,"ChainedThen",5,3542],[6,"Excluded",5,3515],[6,"BooleanFunction",5,3543],[6,"CategoricalFunction",5,3544],[6,"TemporalFunction",5,3545],[6,"PowFunction",5,3546],[6,"StringFunction",5,3547],[6,"StructFunction",5,3548],[5,"DatetimeArgs",5,3549],[5,"DurationArgs",5,3549],[5,"RollingCovOptions",5,3550],[5,"StrptimeOptions",5,3550],[5,"JoinOptions",5,3550],[6,"WindowType",5,3550],[6,"WindowMapping",5,3550],[6,"NestedType",5,3550],[10,"IntoVec",3551],[1,"u8"],[10,"ExprEvalExtension",5,3552],[1,"usize"],[1,"f64"],[5,"Duration",2830,3553],[6,"ClosedWindow",3554],[6,"TimeUnit",3555],[10,"BinaryUdfOutputField",5,3522],[10,"Deserializer",3556],[6,"DslPlan",2830,3557],[6,"NullBehavior",3558],[5,"DateLikeNameSpace",1705,3559],[10,"Sized",3527],[10,"ListNameSpaceExtension",5,3560],[5,"EWMOptions",3561],[5,"StructNameSpace",5,3562],[6,"FillNullStrategy",3563],[5,"Formatter",3564],[5,"Error",3564],[10,"UdfSchema",5,3565],[1,"i16"],[1,"u16"],[1,"u32"],[1,"i8"],[1,"f32"],[6,"BinaryFunction",3566],[6,"ArrayFunction",3567],[6,"BusinessFunction",3568],[6,"ListFunction",3569],[6,"RangeFunction",3570],[5,"FunctionOptions",3571],[5,"Schema",3572],[6,"Context",3557],[10,"Hasher",3573],[6,"InterpolationMethod",3574],[10,"IntoListNameSpace",5,3560],[10,"Display",3564],[6,"ClosedInterval",3575],[5,"ExprNameNameSpace",5,3576],[10,"Literal",2830,3577],[10,"FnOnce",3526],[5,"PythonUdfExpression",2238,3578],[5,"UnitVec",3579],[1,"tuple"],[6,"QuantileInterpolOptions",3580],[5,"RankOptions",2830,3581],[5,"RollingGroupOptions",2830,3582],[5,"RollingOptionsFixedWindow",3583],[5,"Float64Type",3584],[5,"ChunkedArray",3585],[10,"Copy",3527],[5,"RollingOptionsDynamicWindow",3586],[6,"SearchSortedSide",3587],[10,"Serializer",3588],[6,"IsSorted",3589],[5,"StringNameSpace",2284,3590],[6,"ListToStructWidthStrategy",3591],[5,"TypeId",3534],[6,"Roll",3592],[6,"NonExistent",3593],[6,"RollingFunction",2054,3594],[6,"RollingFunctionBy",2087,3595],[6,"TrigonometricFunction",2119,3596],[5,"DataFrame",3597],[8,"PolarsResult",3516],[17,"Item"],[5,"LazyFrame",2351],[10,"IntoParallelIterator",3598],[5,"UnionArgs",2830,3571],[5,"PythonFunction",2238,3578],[5,"PyAny",3599],[5,"Py",3600],[1,"char"],[5,"Node",3601],[6,"IR",3602],[5,"Arena",3601],[6,"AExpr",3603],[5,"LazyGroupBy",2351],[5,"OptState",2351,3604],[5,"JoinBuilder",2351],[10,"AnonymousScan",2830,3605],[5,"ScanArgsAnonymous",2351,3606],[8,"SchemaRef",3572],[8,"IdxSize",3607],[5,"InProcessQuery",2351,3608],[8,"PlHashMap",3609],[5,"LazyCsvReader",2351,3610],[5,"ScanArgsIpc",2351,3611],[5,"LazyJsonLineReader",2351,3612],[5,"ScanArgsParquet",2351,3613],[10,"LazyFileListReader",2351,3614],[5,"CloudOptions",3615],[6,"JoinCoalesce",3616],[10,"IntoIterator",3617],[10,"FallibleIterator",3618],[5,"DynamicGroupOptions",2830,3582],[6,"JoinType",2830,3616],[5,"Iter",3619],[5,"IterNames",3619],[5,"JoinArgs",2830,3616],[10,"IntoLazy",2351],[8,"AllowedOptimizations",2351,3604],[5,"Path",3620],[5,"PathBuf",3620],[5,"RowIndex",3621],[8,"PyObject",3600],[5,"CsvWriterOptions",2830,3622],[5,"IpcWriterOptions",2830,3623],[5,"JsonWriterOptions",2830,3624],[5,"ParquetWriteOptions",2830,3625],[8,"String",3626],[5,"IRPlan",3602],[6,"UniqueKeepStrategy",3597],[5,"UnpivotArgs",3627],[6,"JoinValidation",2830,3616],[8,"NonZeroUsize",3628],[6,"CsvEncoding",3629],[6,"NullValues",3629],[6,"Tz",3630],[6,"RankMethod",2830,3581],[6,"LiteralValue",2830,3577],[5,"AnonymousScanOptions",2830,3571],[6,"Ordering",3631],[10,"PolarsTemporalGroupby",2830,3582],[6,"GroupsProxy",3632],[5,"Null",2830,3577],[5,"AnonymousScanArgs",2830,3605],[6,"AnyValue",3633],[5,"IpcWriter",3623],[10,"Write",3634],[5,"ParquetWriter",3635],[5,"NaiveDateTime",3636],[15,"Quantile",1571],[15,"Min",1571],[15,"Max",1571],[15,"IsBetween",1978],[15,"Any",1978],[15,"All",1978],[15,"SortBy",1581],[15,"Filter",1581],[15,"Cast",1581],[15,"Sort",1581],[15,"Gather",1581],[15,"RenameAlias",1581],[15,"Ternary",1581],[15,"Function",1581],[15,"Window",1581],[15,"AnonymousFunction",1581],[15,"Slice",1581],[15,"BinaryExpr",1581],[15,"QCut",1981],[15,"Entropy",1981],[15,"Log",1981],[15,"Hist",1981],[15,"Cut",1981],[15,"Correlation",1981],[15,"Round",1981],[15,"TopK",1981],[15,"TopKBy",1981],[15,"RoundSF",1981],[15,"EwmMeanBy",1981],[15,"Clip",1981],[15,"BackwardFill",1981],[15,"ForwardFill",1981],[15,"Random",1981],[15,"GatherEvery",1981],[15,"ValueCounts",1981],[15,"Rank",1981],[15,"EwmMean",1981],[15,"EwmStd",1981],[15,"EwmVar",1981],[15,"ReplaceStrict",1981],[15,"CumCount",1981],[15,"CumSum",1981],[15,"CumProd",1981],[15,"CumMin",1981],[15,"CumMax",1981],[15,"ConcatHorizontal",2026],[15,"ConcatVertical",2026],[15,"ExtractGroups",2026],[15,"JsonDecode",2026],[15,"PadStart",2026],[15,"PadEnd",2026],[15,"SplitExact",2026],[15,"Contains",2026],[15,"Find",2026],[15,"Replace",2026],[15,"DatetimeFunction",2046],[15,"GroupBy",3455],[15,"Union",3455],[15,"Sort",3455],[15,"Cache",3455],[15,"ExtContext",3455],[15,"DataFrameScan",3455],[15,"IR",3455],[15,"Select",3455],[15,"HStack",3455],[15,"Scan",3455],[15,"MapFunction",3455],[15,"Filter",3455],[15,"Distinct",3455],[15,"Slice",3455],[15,"Sink",3455],[15,"Join",3455],[15,"HConcat",3455],[15,"PythonScan",3455],[15,"Range",3510]],"r":[[8,3515],[22,3519],[31,3522],[33,3543],[38,3544],[39,3541],[43,3542],[44,3542],[67,3549],[77,3549],[87,3515],[92,3515],[93,3552],[94,3576],[102,3532],[103,3576],[113,3529],[114,3522],[120,3522],[135,3560],[151,3550],[163,3520],[164,3560],[179,3514],[198,3550],[205,3515],[216,3546],[228,3522],[239,3550],[248,3518],[250,3522],[251,3522],[262,3522],[270,3547],[277,3550],[279,3548],[280,3562],[288,3545],[290,3542],[310,3565],[315,3539],[320,3542],[323,3550],[324,3550],[366,3637],[370,3638],[377,3638],[380,3639],[384,3640],[386,3641],[401,3642],[403,3642],[409,3643],[410,3644],[412,3640],[414,3542],[485,3645],[492,3644],[495,3640],[584,3638],[585,3637],[586,3637],[587,3646],[588,3646],[589,3646],[598,3647],[600,3638],[604,3638],[609,3641],[610,3549],[611,3641],[612,3641],[755,3640],[757,3637],[758,3637],[759,3549],[847,3640],[887,3638],[890,3646],[960,3640],[1004,3637],[1039,3641],[1040,3641],[1092,3644],[1094,3644],[1104,3640],[1107,3640],[1111,3577],[1121,3639],[1132,3640],[1135,3640],[1142,3644],[1146,3638],[1147,3644],[1150,3638],[1151,3644],[1159,3644],[1163,3638],[1190,3644],[1192,3640],[1204,3647],[1211,3640],[1214,3644],[1218,3638],[1222,3648],[1235,3647],[1236,3647],[1310,3647],[1318,3640],[1324,3644],[1328,3638],[1334,3542],[1337,3641],[1491,3640],[1540,3542],[1683,3536],[1704,3541],[1705,3559],[1778,3543],[1782,3544],[1829,3529],[1891,3546],[1930,3547],[1938,3548],[1943,3545],[1973,3529],[1974,3529],[1975,3529],[1976,3529],[1977,3529],[2048,3544],[2052,3546],[2058,3594],[2091,3595],[2134,3596],[2163,3549],[2164,3549],[2165,3637],[2166,3638],[2168,3638],[2169,3639],[2170,3641],[2171,3642],[2172,3642],[2173,3643],[2174,3644],[2175,3644],[2176,3638],[2177,3637],[2179,3637],[2181,3646],[2184,3646],[2185,3646],[2186,3647],[2187,3638],[2188,3638],[2189,3641],[2190,3641],[2191,3549],[2192,3641],[2193,3641],[2196,3637],[2197,3637],[2198,3549],[2199,3638],[2200,3646],[2203,3637],[2204,3641],[2205,3641],[2206,3644],[2207,3644],[2208,3639],[2209,3644],[2210,3644],[2211,3644],[2215,3644],[2220,3644],[2221,3647],[2222,3644],[2223,3638],[2224,3648],[2225,3647],[2226,3647],[2229,3647],[2230,3644],[2231,3641],[2232,3641],[2238,3578],[2239,3578],[2240,3578],[2241,3578],[2284,3590],[2345,3539],[2351,3604],[2358,3608],[2361,3610],[2362,3614],[2365,3612],[2367,3604],[2374,3606],[2375,3611],[2376,3613],[2830,3605],[2831,3605],[2832,3571],[2840,3622],[2847,3557],[2848,3553],[2850,3582],[2867,3623],[2869,3616],[2870,3616],[2871,3616],[2872,3624],[2874,3577],[2875,3577],[2881,3577],[2882,3577],[2887,3625],[2888,3582],[2891,3581],[2892,3581],[2894,3582],[2910,3571],[3315,3649]],"b":[[617,"impl-Default-for-SpecialEq%3CArc%3Cdyn+SeriesBinaryUdf%3E%3E"],[618,"impl-Default-for-SpecialEq%3CArc%3Cdyn+BinaryUdfOutputField%3E%3E"],[619,"impl-Default-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[698,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CSeries%3E"],[699,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[700,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3CDslPlan%3E%3E"],[762,"impl-PartialEq-for-Expr"],[763,"impl-Expr"],[766,"impl-PartialEq-for-SpecialEq%3CArc%3CT%3E%3E"],[767,"impl-PartialEq-for-SpecialEq%3CSeries%3E"],[858,"impl-Display-for-Expr"],[859,"impl-Debug-for-Expr"],[861,"impl-Display-for-Operator"],[862,"impl-Debug-for-Operator"],[864,"impl-Debug-for-BooleanFunction"],[865,"impl-Display-for-BooleanFunction"],[866,"impl-Debug-for-CategoricalFunction"],[867,"impl-Display-for-CategoricalFunction"],[868,"impl-Display-for-TemporalFunction"],[869,"impl-Debug-for-TemporalFunction"],[870,"impl-Debug-for-PowFunction"],[871,"impl-Display-for-PowFunction"],[872,"impl-Display-for-StringFunction"],[873,"impl-Debug-for-StringFunction"],[874,"impl-Debug-for-StructFunction"],[875,"impl-Display-for-StructFunction"],[876,"impl-Display-for-FunctionExpr"],[877,"impl-Debug-for-FunctionExpr"],[904,"impl-From%3Ci16%3E-for-Expr"],[905,"impl-From%3Cu8%3E-for-Expr"],[906,"impl-From%3Ci64%3E-for-Expr"],[907,"impl-From%3Ci32%3E-for-Expr"],[908,"impl-From%3C%26str%3E-for-Expr"],[909,"impl-From%3Cu16%3E-for-Expr"],[911,"impl-From%3Cu32%3E-for-Expr"],[912,"impl-From%3Cu64%3E-for-Expr"],[913,"impl-From%3Cbool%3E-for-Expr"],[914,"impl-From%3Ci8%3E-for-Expr"],[915,"impl-From%3CAggExpr%3E-for-Expr"],[916,"impl-From%3Cf64%3E-for-Expr"],[917,"impl-From%3Cf32%3E-for-Expr"],[920,"impl-From%3CBooleanFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[921,"impl-From%3CStringFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[922,"impl-From%3CBinaryFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[923,"impl-From%3CStructFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[924,"impl-From%3CTemporalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[925,"impl-From%3CFunctionExpr%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[926,"impl-From%3CArrayFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[927,"impl-From%3CBusinessFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[929,"impl-From%3CCategoricalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[930,"impl-From%3CListFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[931,"impl-From%3CRangeFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[938,"impl-From%3CCategoricalFunction%3E-for-FunctionExpr"],[939,"impl-From%3CBooleanFunction%3E-for-FunctionExpr"],[940,"impl-From%3CBinaryFunction%3E-for-FunctionExpr"],[941,"impl-From%3CStringFunction%3E-for-FunctionExpr"],[952,"impl-From%3CArc%3Cstr%3E%3E-for-Selector"],[954,"impl-From%3CString%3E-for-Selector"],[955,"impl-From%3C%26str%3E-for-Selector"],[956,"impl-From%3CExpr%3E-for-Selector"],[980,"impl-Expr"],[981,"impl-Hash-for-Expr"],[1273,"impl-Serialize-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[1274,"impl-Serialize-for-SpecialEq%3CArc%3CDslPlan%3E%3E"],[1275,"impl-Serialize-for-SpecialEq%3CSeries%3E"],[2074,"impl-Display-for-RollingFunction"],[2075,"impl-Debug-for-RollingFunction"],[2106,"impl-Debug-for-RollingFunctionBy"],[2107,"impl-Display-for-RollingFunctionBy"],[2150,"impl-Display-for-TrigonometricFunction"],[2151,"impl-Debug-for-TrigonometricFunction"],[2399,"impl-OptState"],[2400,"impl-Flags-for-OptState"],[2537,"impl-Octal-for-OptState"],[2538,"impl-LowerHex-for-OptState"],[2539,"impl-UpperHex-for-OptState"],[2540,"impl-Binary-for-OptState"],[2541,"impl-Debug-for-OptState"],[2545,"impl-From%3CDslPlan%3E-for-LazyFrame"],[2547,"impl-From%3CLazyGroupBy%3E-for-LazyFrame"],[2556,"impl-OptState"],[2557,"impl-Flags-for-OptState"],[2790,"impl-LazyFileListReader-for-LazyCsvReader"],[2791,"impl-LazyCsvReader"],[2792,"impl-LazyFileListReader-for-LazyJsonLineReader"],[2793,"impl-LazyJsonLineReader"],[2810,"impl-LazyCsvReader"],[2811,"impl-LazyFileListReader-for-LazyCsvReader"],[2812,"impl-LazyJsonLineReader"],[2813,"impl-LazyFileListReader-for-LazyJsonLineReader"],[3179,"impl-Debug-for-Duration"],[3180,"impl-Display-for-Duration"],[3183,"impl-Debug-for-JoinType"],[3184,"impl-Display-for-JoinType"],[3185,"impl-Display-for-JoinValidation"],[3186,"impl-Debug-for-JoinValidation"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAPIJ/QAEABIAGAAPACkAAgAuABUARQAIAE8ABwBYAAMAXgAAAGAAGQB7ABsAmAADAJ0ABgClAA4AtQAVAMwABADSACcA/QAJAAgBEAAaAQcAJAEXAD0BAwBCAQAARAElAGsBAQBxAQAAdAEBAHgBAAB+AQAAgAEAAIsBAACOAQAAlQEBAJgBAQCdAQAAoAFDAOYBAADoAQAA6gEBAPABAAD3AVEATAIAAGYCDAB0AlcAzgIAANACIADyAgAA9AIAAPoCAQD9AhEAEAMsAEUDAABIAwEATgMAAFQDAABXAyAAeQMAAIkDBQCQAwYAmQMHAKIDAgCrAwMAtQMAALkDAAC7AwIAvwMAAMEDAADGAwEAywMFANQDAADWAxAA6gMBAO4DIAA1BAIAOQQBAE4EAABWBAAAYwQAAGYEBQBvBAAAcgQAAIIEAACFBAIAjQQCAJEEAwCaBAEAngQCAKMEAAClBAEAsQQAALMEAQC6BAAAvAQAAMQEAQDKBAAAzAQAAM4EAADTBAIA7QQFAPQEFgAUBQAAGwUAACIFAAAnBQAAKQUBACwFAAAyBQAANwUAADkFAAA7BQIAQgUaAF4FCQBsBUEAsAUAALIFIgDhBQAA4wUhAAgGAQANBgAAGgYAAB4GAQAjBhMAOgYBAD0GAQBABgEAQwYGAEsGSACVBgMAmgYCAJ8GAgClBgMArQYBALYGAgC8BgAAvgYAAMsGAADaBgMA4gY6AR4IAQAhCBsAPggBAEEIJwBqCAEAbQgGAHgIAACGCAAAkwgBAJoIAQClCAIAqQgDALIIAwC6CB4A2wgDAOEICwDuCAMA9QgCAPsIAAAACQIABQkBACUJAwA3CQMAPgkBAEcJAgBLCQkAWQkAAGEJAABkCRQAegkBAH8JGwCfCQEAowkAAKcJAACrCRgAyQkDAM4JBgDlCQAA5wkBAOoJBADyCQAA9AkAAP4JAAAACgAABQoCAA0KAQAQCgwAKwoAADQKAQA5CgEAPAoAAD4KAABCCgEASAoDAE0KAwBUCgQAXQoDAGkKAwBuCgAAcgoBAHUKAAB4CgAAgQoAAI0KAQCQCggAmgoeAL4KAQDBCgkAzAoAAM4KAQDXCgEA4AoBAOcKAADpCgAA6woAAO8KAQD8CgAA/goAAA0LBwAYCwAAGwsBAB4LAAAgCwMAJgsAACkLAAAtCwIANAsAADYLBgBACwIARAsAAEcLCQBSCwIAVwsAAFkLAABfCxMAdgtiAN0LiwBqDBMAggwAAJEMAACTDBEApgwAAKkMEQDNDAIA0QwAANMMAADWDAMA3QwFAOQMAQDoDAAA6wwCAO8MAQDzDAAA9QwBAPoMFQARDagA"}],\
["polars_ops",{"t":"CCCCKKKMNNNNNNNNCMNNNNNNCKKMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKMKKCMIIPPKKPPIFGKPGGPPIPPPPPKNNNNHNNENNHNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNONNNHNONONNNNNNNNNNNNNNNNNNONNEEPKPPGKKNMMMNNHHHNNNNHHNNNNNNNNNNNNNNNHNNHHHHHHHNNNNNN","n":["chunked_array","frame","prelude","series","AsBinary","BinaryNameSpaceImpl","ChunkedSet","as_binary","contains","contains","contains_chunked","contains_chunked","ends_with","ends_with","ends_with_chunked","ends_with_chunked","list","scatter","size_bytes","size_bytes","starts_with","starts_with","starts_with_chunked","starts_with_chunked","strings","AsList","ListNameSpaceImpl","as_list","join_literal","join_literal","join_many","join_many","lst_arg_max","lst_arg_max","lst_arg_min","lst_arg_min","lst_concat","lst_concat","lst_get","lst_get","lst_join","lst_join","lst_lengths","lst_lengths","lst_max","lst_max","lst_mean","lst_mean","lst_median","lst_median","lst_min","lst_min","lst_n_unique","lst_n_unique","lst_reverse","lst_reverse","lst_shift","lst_shift","lst_slice","lst_slice","lst_sort","lst_sort","lst_std","lst_std","lst_sum","lst_sum","lst_unique","lst_unique","lst_unique_stable","lst_unique_stable","lst_var","lst_var","same_type","same_type","AsString","as_string","DataFrameOps","IntoDf","join","to_df","ChunkJoinIds","ChunkJoinOptIds","CoalesceColumns","Cross","CrossJoin","DataFrameJoinOps","Full","Inner","InnerJoinIds","JoinArgs","JoinCoalesce","JoinDispatch","JoinSpecific","JoinType","JoinValidation","KeepColumns","Left","LeftJoinIds","ManyToMany","ManyToOne","OneToMany","OneToOne","Right","SeriesJoin","__clone_box","__clone_box","__clone_box","__clone_box","_coalesce_full_join","_create_left_df_from_slice","_create_left_df_from_slice","_finish_join","_full_join_from_series","_full_join_from_series","_join_suffix_name","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","coalesce","coalesce","cross_join","cross_join","cross_join_dfs","cross_join_dfs","default","default","default","default_join_ids","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","full_join","hash","hash","hash","hash","hash_join_inner","hash_join_inner","hash_join_outer","hash_join_outer","how","init","init","init","init","inner_join","into","into","into","into","is_asof","is_valid_join","join","join_nulls","left_join","needs_checks","new","private_left_join_multiple_keys","should_coalesce","slice","suffix","suffix","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","validation","with_coalesce","with_suffix","DataFrameJoinOps","DataFrameOps","Any","ArgAgg","Left","Right","SearchSortedSide","SeriesMethods","SeriesSealed","__clone_box","arg_max","arg_min","as_series","borrow","borrow_mut","clip","clip_max","clip_min","clone","clone_into","clone_to_uninit","clone_to_uninit","coalesce_series","convert_to_unsigned_index","default","deref","deref_mut","drop","ensure_sorted_arg","ensure_sorted_arg","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","is_positive_idx_uncertain","is_sorted","is_sorted","max_horizontal","mean_horizontal","min_horizontal","negate","negate_bitwise","new_int_range","sum_horizontal","to_owned","try_from","try_into","type_id","value_counts","value_counts"],"q":[[0,"polars_ops"],[4,"polars_ops::chunked_array"],[25,"polars_ops::chunked_array::list"],[74,"polars_ops::chunked_array::strings"],[76,"polars_ops::frame"],[80,"polars_ops::frame::join"],[238,"polars_ops::prelude"],[240,"polars_ops::series"],[293,"polars_ops::chunked_array::binary"],[294,"polars_core::datatypes"],[295,"polars_ops::chunked_array::binary::namespace"],[296,"polars_ops::chunked_array::scatter"],[297,"polars_utils::index"],[298,"polars_core::series"],[299,"polars_error"],[300,"core::marker"],[301,"core::option"],[302,"core::iter::traits::collect"],[303,"polars_ops::chunked_array::list::namespace"],[304,"polars_core::datatypes::aliases"],[305,"polars_core::chunked_array::ops::sort::options"],[306,"polars_core::frame"],[307,"dyn_clone::sealed"],[308,"polars_ops::frame::join::hash_join"],[309,"polars_ops::frame::join::args"],[310,"alloc::string"],[311,"polars_ops::frame::join::cross_join"],[312,"core::fmt"],[313,"core::convert"],[314,"core::hash"],[315,"polars_ops::frame::join::hash_join::single_keys_dispatch"],[316,"polars_arrow::array::primitive"],[317,"core::result"],[318,"core::any"],[319,"polars_ops::series::ops::arg_min_max"],[320,"polars_ops::series::ops"],[321,"polars_core::chunked_array::ops::search_sorted"],[322,"polars_ops::series::ops::various"],[323,"polars_ops::frame::join::general"],[324,"polars_ops::series::ops::clip"],[325,"polars_ops::series::ops::horizontal"],[326,"polars_ops::series::ops::index"],[327,"polars_ops::series::ops::negate"],[328,"polars_ops::series::ops::not"],[329,"polars_ops::series::ops::int_range"]],"i":[0,0,0,0,0,0,0,1,4,4,4,4,4,4,4,4,0,8,4,4,4,4,4,4,0,0,0,17,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,0,27,0,0,0,28,0,0,36,37,0,0,37,37,0,0,0,0,36,0,0,36,37,0,38,38,38,38,37,0,33,36,37,38,0,32,32,0,32,32,0,33,36,37,38,33,36,37,38,33,36,37,38,33,36,37,38,33,36,36,37,38,38,36,33,39,39,39,39,33,36,38,0,33,36,37,38,33,36,37,38,33,36,37,38,33,36,37,38,33,33,33,36,36,36,37,37,37,38,38,38,33,36,37,37,38,38,33,33,36,37,38,44,33,36,37,38,47,47,47,47,33,33,36,37,38,44,33,36,37,38,37,38,44,33,44,38,33,0,33,33,33,33,33,36,37,38,37,38,33,36,37,38,33,36,37,38,33,36,37,38,33,33,33,0,0,55,0,55,55,0,0,0,55,53,53,54,55,55,0,0,0,55,55,55,55,0,0,55,55,55,55,56,56,55,55,55,55,55,55,55,55,55,0,56,56,0,0,0,0,0,0,0,55,55,55,55,56,56],"f":"```````{{{d{b}}}{{d{f}}}}{{{d{h}}{d{{l{j}}}}}n}0{{{d{h}}{d{f}}}n}01100`{{A`{d{{l{Ab}}}}e}{{Af{Ad}}}Ah{{An{}{{Aj{{Al{c}}}}}}}}{{{d{h}}}B`}03322```{{{d{Bb}}}{{d{Bd}}}}{{{d{Bf}}{d{Bh}}Bj}{{Af{Bl}}}}0{{{d{Bf}}{d{Bl}}Bj}{{Af{Bl}}}}0{{{d{Bf}}}Bn}000{{{d{Bf}}{d{{l{Ad}}}}}{{Af{Bd}}}}0{{{d{Bf}}C`Bj}{{Af{Ad}}}}03322{{{d{Bf}}}{{Af{Ad}}}}0{{{d{Bf}}}Ad}00011{{{d{Bf}}}{{Af{Bn}}}}0{{{d{Bf}}}Bd}0{{{d{Bf}}{d{Ad}}}{{Af{Bd}}}}0{{{d{Bf}}C`Cb}Bd}0{{{d{Bf}}Cd}{{Af{Bd}}}}0{{{d{Bf}}j}Ad}077{{{d{Bf}}}{{Af{Bd}}}}00011{{{d{Bf}}Bd}Bd}0`{{{d{Cf}}}{{d{Bl}}}}```{{{d{Ch}}}{{d{Cj}}}}````````````````````````{{{d{c}}Cl}Cn{}}000{{Cj{d{{l{{d{Bh}}}}}}{d{{l{{d{Bh}}}}}}{Al{{d{Bh}}}}{d{Cj}}}Cj}{{{d{D`}}{d{{l{Ab}}}}BjBj}Cj}0`{{{d{D`}}{d{Cj}}{d{Ad}}{d{Ad}}Db}{{Af{Cj}}}}0{{{d{Bh}}{d{Bh}}}Dd}{{{d{c}}}{{d{e}}}{}{}}000{{{d{Dfc}}}{{d{Dfe}}}{}{}}000{{{d{Db}}}Db}{{{d{Dh}}}Dh}{{{d{Dj}}}Dj}{{{d{Dl}}}Dl}{{{d{c}}{d{Dfe}}}Cn{}{}}000{{{d{c}}}Cn{}}00000{{{d{Dh}}{d{Dj}}}Bj}`{{{d{Dn}}{d{Cj}}{Al{{d{Bh}}}}{Al{{E`{C`Cb}}}}}{{Af{Cj}}}}0{{{d{Dn}}{d{Cj}}{Al{{E`{C`Cb}}}}Bj}{{Af{{E`{CjCj}}}}}}0{{}Db}{{}Dh}{{}Dl}{{}Eb}{Cb{{d{c}}}{}}000{Cb{{d{Dfc}}}{}}000{CbCn}000{{{d{Db}}{d{Db}}}Bj}{{{d{Dh}}{d{Dh}}}Bj}{{{d{Dj}}{d{Dj}}}Bj}{{{d{Dl}}{d{Dl}}}Bj}{{{d{c}}{d{e}}}Bj{}{}}00000000000{{{d{Db}}{d{DfEd}}}Ef}{{{d{Dh}}{d{DfEd}}}Ef}{{{d{Dj}}{d{DfEd}}}Ef}0{{{d{Dl}}{d{DfEd}}}Ef}0{cc{}}{DjDb}111{{{d{Eh}}{d{Cj}}ee}{{Af{Cj}}}{{Ej{Bh}}}{{An{}{{Aj{c}}}}}}{{{d{Db}}{d{Dfc}}}CnEl}{{{d{Dh}}{d{Dfc}}}CnEl}{{{d{Dj}}{d{Dfc}}}CnEl}{{{d{Dl}}{d{Dfc}}}CnEl}{{{d{En}}{d{Ad}}DlBj}{{Af{{E`{F`Bj}}}}}}0{{{d{En}}{d{Ad}}DlBj}{{Af{{E`{{Fb{Ab}}{Fb{Ab}}}}}}}}0`{{}Cb}0007{ce{}{}}000{{{d{Dj}}}Bj}{{{d{Dl}}{d{Dj}}}{{Af{Cn}}}}{{{d{Eh}}{d{Cj}}eeDb}{{Af{Cj}}}{{Ej{Bh}}}{{An{}{{Aj{c}}}}}}`;{{{d{Dl}}}Bj}={{{d{Cj}}{d{Cj}}Bj}{{Af{Fd}}}}{{{d{Db}}}Bj}`{{{d{Db}}}{{d{Bh}}}}`{{{d{c}}}e{}{}}000{{{d{c}}}Dd{}}0{c{{Ff{e}}}{}{}}0000000{{{d{c}}}Fh{}}000`{{DbDh}Db}{{Db{Al{Dd}}}Db}`````````{{{d{c}}Cl}Cn{}}{{{d{Fj}}}{{Al{Cb}}}}0{{{d{Fl}}}{{d{Ad}}}}{{{d{c}}}{{d{e}}}{}{}}{{{d{Dfc}}}{{d{Dfe}}}{}{}}{{{d{Ad}}{d{Ad}}{d{Ad}}}{{Af{Ad}}}}{{{d{Ad}}{d{Ad}}}{{Af{Ad}}}}0{{{d{Fn}}}Fn}{{{d{c}}{d{Dfe}}}Cn{}{}}{{{d{c}}}Cn{}}0{{{d{{l{Ad}}}}}{{Af{Ad}}}}{{{d{Ad}}Cb}{{Af{Bn}}}}{{}Fn}{Cb{{d{c}}}{}}{Cb{{d{Dfc}}}{}}{CbCn}{{{d{G`}}{d{Bh}}}{{Af{Cn}}}}0{{{d{Fn}}{d{Fn}}}Bj}{{{d{c}}{d{e}}}Bj{}{}}00{{{d{Fn}}{d{DfEd}}}{{Ff{CnGb}}}}{cc{}}{{{d{Fn}}{d{Dfc}}}CnEl}{{}Cb}{ce{}{}}{{{d{Ad}}}Bj}{{{d{G`}}Cd}{{Af{Bj}}}}0{{{d{{l{Ad}}}}}{{Af{{Al{Ad}}}}}}00{{{d{Ad}}}{{Af{Ad}}}}0{{C`{d{Bh}}}{{Af{Ad}}}}2{{{d{c}}}e{}{}}{c{{Ff{e}}}{}{}}0{{{d{c}}}Fh{}}{{{d{G`}}BjBjDdBj}{{Af{Cj}}}}0","D":"El","p":[[10,"AsBinary",4,293],[1,"reference"],[8,"BinaryChunked",294],[10,"BinaryNameSpaceImpl",4,295],[1,"u8"],[1,"slice"],[8,"BooleanChunked",294],[10,"ChunkedSet",4,296],[8,"IdxSize",297],[5,"Series",298],[8,"PolarsResult",299],[10,"Copy",300],[17,"Item"],[6,"Option",301],[10,"IntoIterator",302],[8,"UInt32Chunked",294],[10,"AsList",25],[8,"ListChunked",294],[10,"ListNameSpaceImpl",25,303],[1,"str"],[1,"bool"],[8,"StringChunked",294],[8,"IdxCa",304],[1,"i64"],[1,"usize"],[5,"SortOptions",305],[10,"AsString",74],[10,"IntoDf",76],[5,"DataFrame",306],[5,"Private",307],[1,"unit"],[10,"JoinDispatch",80,308],[5,"JoinArgs",80,309],[5,"String",310],[0,"mut"],[6,"JoinCoalesce",80,309],[6,"JoinType",80,309],[6,"JoinValidation",80,309],[10,"CrossJoin",80,311],[1,"tuple"],[8,"ChunkJoinOptIds",80,309],[5,"Formatter",312],[8,"Result",312],[10,"DataFrameJoinOps",80],[10,"AsRef",313],[10,"Hasher",314],[10,"SeriesJoin",80,315],[8,"InnerJoinIds",80,309],[5,"PrimitiveArray",316],[8,"LeftJoinIds",80,309],[6,"Result",317],[5,"TypeId",318],[10,"ArgAgg",240,319],[10,"SeriesSealed",240,320],[6,"SearchSortedSide",240,321],[10,"SeriesMethods",240,322],[5,"Error",312]],"r":[[4,293],[5,295],[6,296],[26,303],[80,309],[81,309],[84,311],[88,309],[89,309],[90,309],[91,308],[93,309],[94,309],[97,309],[103,315],[108,323],[111,323],[114,323],[146,308],[238,80],[239,76],[241,319],[244,321],[245,322],[246,320],[253,324],[254,324],[255,324],[260,325],[261,326],[277,326],[280,325],[281,325],[282,325],[283,327],[284,328],[285,329],[286,325]],"b":[[177,"impl-Debug-for-JoinType"],[178,"impl-Display-for-JoinType"],[179,"impl-Display-for-JoinValidation"],[180,"impl-Debug-for-JoinValidation"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAPcAEgAAAAgACwABAA8AAgAXAA8AKwA3AGcABgBwABsAjgAnALcAAAC8AAwAzgABANEAAADTAB4A8wAFAPsAAgABARAAEwEBABkBCgA="}],\
["polars_sql",{"t":"FNNNNNNNNNNNNCNNNNCNNNNNHNNNNNNNPGPFFKNNNNNNNNONONNNNNNNNOMNNNNNNNNNNNNNNNONNONNNMNNNNNNNNNMNNNNNNNNNNNNNNNHH","n":["SQLContext","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","execute","from","function_registry","get_table_map","get_tables","init","into","keywords","new","new_from_table_map","register","registry","registry_mut","sql_expr","to_owned","try_from","try_into","type_id","unregister","vzip","with_function_registry","Aggregation","Context","Default","DefaultFunctionRegistry","FunctionOptions","FunctionRegistry","__clone_box","__clone_box","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast_to_supertypes","check_lengths","check_lengths","clone","clone","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","collect_groups","contains","contains","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","flags","fmt","fmt","fmt_str","from","from","from","get_udf","get_udf","hash","init","init","init","into","into","into","is_groups_sensitive","register","register","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","all_functions","all_keywords"],"q":[[0,"polars_sql"],[32,"polars_sql::function_registry"],[107,"polars_sql::keywords"],[109,"dyn_clone::sealed"],[110,"polars_sql::context"],[111,"polars_lazy::frame"],[112,"polars_error"],[113,"alloc::string"],[114,"polars_utils::aliases"],[115,"alloc::vec"],[116,"alloc::sync"],[117,"polars_plan::dsl::expr"],[118,"core::convert"],[119,"core::result"],[120,"core::any"],[121,"polars_plan::plans::options"],[122,"polars_plan::plans"],[123,"core::fmt"],[124,"polars_plan::dsl::udf"],[125,"core::option"],[126,"core::hash"],[127,"polars_sql::sql_expr"]],"i":[0,5,5,5,5,5,5,5,5,5,5,5,5,0,5,5,5,5,0,5,5,5,5,5,0,5,5,5,5,5,5,5,21,0,21,0,0,0,19,21,22,19,21,22,19,21,19,19,19,19,21,19,21,19,19,21,21,19,13,22,19,22,19,21,22,19,21,22,19,21,19,19,19,19,19,19,21,19,22,19,21,13,22,19,22,19,21,22,19,21,19,13,22,19,21,22,19,21,22,19,21,22,19,21,22,19,21,0,0],"f":"`{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{hc}}}{{b{he}}}{}{}}{{{b{j}}}j}{{{b{c}}{b{he}}}f{}{}}{{{b{c}}}f{}}{{}j}{l{{b{c}}}{}}{l{{b{hc}}}{}}{lf}{{{b{hj}}{b{n}}}{{Ab{A`}}}}{cc{}}`{{{b{j}}}{{Af{AdA`}}}}{{{b{j}}}{{Ah{Ad}}}}{{}l}{ce{}{}}`9{{{Af{AdA`}}}j}{{{b{hj}}{b{n}}A`}f}{{{b{j}}}{{b{{Al{Aj}}}}}}{{{b{hj}}}{{b{hAj}}}}{c{{Ab{An}}}{{B`{n}}}}{{{b{c}}}e{}{}}{c{{Bb{e}}}{}{}}0{{{b{c}}}Bd{}}{{{b{hj}}{b{n}}}f}9{{j{Al{Aj}}}j}``````{{{b{c}}d}f{}}0{{{b{c}}}{{b{e}}}{}{}}00{{{b{hc}}}{{b{he}}}{}{}}00`{{{b{Bf}}}Bh}`{{{b{Bf}}}Bf}{{{b{Bj}}}Bj}{{{b{c}}{b{he}}}f{}{}}0{{{b{c}}}f{}}000`{{{b{Aj}}{b{n}}}Bh}{{{b{Bl}}{b{n}}}Bh}{{}Bf}{l{{b{c}}}{}}00{l{{b{hc}}}{}}00{lf}00{{{b{Bf}}{b{Bf}}}Bh}{{{b{c}}{b{e}}}Bh{}{}}00`{{{b{Bf}}{b{hBn}}}{{Bb{fC`}}}}{{{b{Bj}}{b{hBn}}}{{Bb{fC`}}}}`{cc{}}00{{{b{Aj}}{b{n}}}{{Ab{{Cd{Cb}}}}}}{{{b{Bl}}{b{n}}}{{Ab{{Cd{Cb}}}}}}{{{b{Bf}}{b{hc}}}fCf}{{}l}00{ce{}{}}00{{{b{Bf}}}Bh}{{{b{hAj}}{b{n}}Cb}{{Ab{f}}}}{{{b{hBl}}{b{n}}Cb}{{Ab{f}}}}{{{b{c}}}e{}{}}0{c{{Bb{e}}}{}{}}00000{{{b{c}}}Bd{}}00666{{}{{Ah{{b{n}}}}}}0","D":"Dd","p":[[1,"reference"],[5,"Private",109],[1,"unit"],[0,"mut"],[5,"SQLContext",0,110],[1,"usize"],[1,"str"],[5,"LazyFrame",111],[8,"PolarsResult",112],[5,"String",113],[8,"PlHashMap",114],[5,"Vec",115],[10,"FunctionRegistry",32],[5,"Arc",116],[6,"Expr",117],[10,"AsRef",118],[6,"Result",119],[5,"TypeId",120],[5,"FunctionOptions",32,121],[1,"bool"],[6,"Context",32,122],[5,"DefaultFunctionRegistry",32],[5,"Formatter",123],[5,"Error",123],[5,"UserDefinedFunction",124],[6,"Option",125],[10,"Hasher",126]],"r":[[0,110],[24,127],[33,122],[36,121]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAEsACgACAAkAEQAAABoAAwAfAAAAIgAAACUAAAAnABIAPAASAFMABABdAA4A"}],\
["polars_time",{"t":"PGFPPKKKPFCHHOOCMCHMMMECKPPPPPGKNMNNNNNNNNNNNNNNNNCNNNNNNNFRKKNNNNNNNNNNHNNONMONNMNNPFFGPPFPGPPPPPPPGPEPPPFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKKMNNNNNNNNNNNNNNNNNN","n":["Both","ClosedWindow","Duration","Left","None","PolarsRound","PolarsTruncate","PolarsUpsample","Right","Window","chunkedarray","date_range","in_nanoseconds_window","offset","parsed_int","prelude","round","series","time_range","truncate","upsample","upsample_stable","StringMethods","string","AsString","DateDMY","DateYMD","DatetimeDMY","DatetimeYMD","DatetimeYMDZ","Pattern","StringMethods","__clone_box","as_string","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","infer","init","into","is_inferable","to_owned","try_from","try_into","type_id","DatetimeInfer","Error","StrpTimeParser","TryFromWithUnit","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","from","infer_pattern_single","init","into","logical_type","parse","parse_bytes","pattern","to_owned","try_from","try_from_with_unit","try_into","type_id","Both","Bounds","BoundsIter","ClosedWindow","DataPoint","DataPoint","Duration","Friday","Label","Left","Left","Monday","None","Right","Right","Saturday","StartBy","Sunday","TemporalMethods","Thursday","Tuesday","Wednesday","Window","WindowBound","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","add_ms","add_ns","add_us","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","cmp","compare","days","days_only","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","ensure_duration_matches_data_type","ensure_is_constant_duration","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get_earliest_bounds_ms","get_earliest_bounds_ns","get_earliest_bounds_us","get_overlapping_bounds_iter","group_by_values","group_by_windows","hash","hash","hash","hash","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_iter","is_constant_duration","is_full_days","is_zero","months","months_only","mul","nanoseconds","neg","negative","new","new","next","offset","parse","parsed_int","partial_cmp","round_ms","round_ns","round_us","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","truncate_impl","truncate_ms","truncate_ms","truncate_ns","truncate_ns","truncate_us","truncate_us","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","weekday","weeks","weeks_only","AsSeries","TemporalMethods","as_series","century","day","hour","is_leap_year","iso_year","millennium","minute","month","nanosecond","ordinal_day","ordinal_year","quarter","second","strftime","to_string","week","weekday","year"],"q":[[0,"polars_time"],[22,"polars_time::chunkedarray"],[24,"polars_time::chunkedarray::string"],[58,"polars_time::chunkedarray::string::infer"],[84,"polars_time::prelude"],[294,"polars_time::series"],[315,"chrono::naive::datetime"],[316,"polars_time::windows::duration"],[317,"polars_time::windows::group_by"],[318,"polars_core::datatypes::time_unit"],[319,"polars_arrow::legacy::time_zone"],[320,"core::option"],[321,"polars_core::chunked_array::logical::datetime"],[322,"polars_error"],[323,"polars_time::round"],[324,"polars_core::datatypes"],[325,"chrono::naive::time"],[326,"polars_core::chunked_array::logical::time"],[327,"polars_time::truncate"],[328,"polars_time::upsample"],[329,"polars_core::frame"],[330,"alloc::string"],[331,"polars_core::utils"],[332,"dyn_clone::sealed"],[333,"polars_time::chunkedarray::string::patterns"],[334,"core::fmt"],[335,"core::hash"],[336,"core::result"],[337,"core::any"],[338,"core::clone"],[339,"polars_time::windows::bounds"],[340,"polars_time::windows::window"],[341,"core::cmp"],[342,"polars_core::datatypes::dtype"],[343,"polars_core::frame::group_by::proxy"],[344,"alloc::vec"],[345,"core::ops::function"],[346,"polars_core::series"],[347,"polars_time::date_range"]],"i":[5,0,0,5,5,0,0,0,5,0,0,0,0,44,4,0,12,0,0,16,17,17,0,0,0,25,25,25,25,25,0,0,25,23,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,0,25,25,25,25,25,25,25,0,39,0,0,32,32,32,32,32,32,32,32,32,32,0,32,32,32,32,35,32,32,32,39,32,32,5,0,0,0,42,43,0,43,0,5,42,43,5,5,42,43,0,43,0,43,43,43,0,43,41,4,5,42,43,44,4,4,4,47,41,4,5,42,43,44,47,41,4,5,42,43,44,41,4,5,42,43,44,41,4,5,42,43,44,41,41,4,4,5,5,42,42,43,43,44,44,4,4,4,4,43,47,41,4,5,42,43,44,47,41,4,5,42,43,44,47,41,4,5,42,43,44,0,0,4,5,42,43,4,4,4,5,5,5,42,42,42,43,43,43,41,4,4,5,42,43,47,41,4,5,42,43,44,44,44,44,44,0,0,4,5,42,43,47,41,4,5,42,43,44,47,41,4,5,42,43,44,47,4,4,4,4,4,4,4,4,4,4,44,47,44,4,4,4,44,44,44,41,4,5,42,43,44,4,4,4,44,4,44,4,44,47,41,4,5,42,43,44,47,41,4,5,42,43,44,47,41,4,5,42,43,44,43,4,4,0,0,55,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57],"f":"```````````{{{d{b}}ffhjl{A`{{d{n}}}}}{{Ad{Ab}}}}{{{d{f}}}Af}```{{{d{Ah}}{d{Aj}}{A`{{d{n}}}}}{{Ad{Ah}}}}`{{{d{b}}AlAlhj}{{Ad{An}}}}{{{d{B`}}{A`{{d{n}}}}{d{Aj}}}{{Ad{B`}}}}{{{d{Bb}}c{d{b}}h}{{Ad{Bd}}}{{Bh{Bf}}}}0``````````{{{d{c}}Bj}Bl{}}{{{d{Bn}}}{{d{Aj}}}}{{{d{c}}}{{d{e}}}{}{}}{{{d{C`c}}}{{d{C`e}}}{}{}}{{{d{Cb}}}Cb}{{{d{c}}{d{C`e}}}Bl{}{}}{{{d{c}}}Bl{}}0{Cd{{d{c}}}{}}{Cd{{d{C`c}}}{}}{CdBl}{{{d{Cb}}{d{Cb}}}Af}{{{d{c}}{d{e}}}Af{}{}}00{{{d{Cb}}{d{C`Cf}}}Ch}{cc{}}{{{d{Cb}}{d{C`c}}}BlCj}`{{}Cd}{ce{}{}}{{{d{Cb}}{d{b}}}Af}{{{d{c}}}e{}{}}{c{{Cl{e}}}{}{}}0{{{d{c}}}Cn{}}````{{{d{c}}Bj}Bl{}}{{{d{c}}}{{d{e}}}{}{}}{{{d{C`c}}}{{d{C`e}}}{}{}}{{{d{{D`{c}}}}}{{D`{c}}}{DbDd}}{{{d{c}}{d{C`e}}}Bl{}{}}{{{d{c}}}Bl{}}{Cd{{d{c}}}{}}{Cd{{d{C`c}}}{}}{CdBl}{cc{}}{{{d{b}}}{{A`{Cb}}}}{{}Cd}{ce{}{}}`{{{d{C`{D`{c}}}}{d{b}}}A`Dd}{{{d{C`Df}}{d{{Dj{Dh}}}}{A`{l}}}{{A`{c}}}{}}`{{{d{c}}}e{}{}}{c{{Cl{e}}}{}{}}{{c{A`{l}}}{{Ad{{Dn{}{{Dl{e}}}}}}}{}{}}1{{{d{c}}}Cn{}}````````````````````````{{{d{c}}Bj}Bl{}}00000{{{d{h}}E`{A`{{d{n}}}}}{{Ad{E`}}}}00{{{d{c}}}{{d{e}}}{}{}}000000{{{d{C`c}}}{{d{C`e}}}{}{}}000000{{{d{Eb}}}Eb}{{{d{h}}}h}{{{d{j}}}j}{{{d{Ed}}}Ed}{{{d{Ef}}}Ef}{{{d{Eh}}}Eh}{{{d{c}}{d{C`e}}}Bl{}{}}00000{{{d{c}}}Bl{}}00000000000{{{d{h}}{d{h}}}Ej}{{{d{c}}{d{e}}}Ej{}{}}{{{d{h}}}E`}{{{d{h}}}Af}{{}Ef}{Cd{{d{c}}}{}}000000{Cd{{d{C`c}}}{}}000000{CdBl}000000{{h{d{El}}{d{b}}}{{Ad{Bl}}}}{{h{A`{{d{b}}}}{d{b}}}{{Ad{Bl}}}}{{{d{h}}{d{h}}}Af}{{{d{j}}{d{j}}}Af}{{{d{Ed}}{d{Ed}}}Af}{{{d{Ef}}{d{Ef}}}Af}{{{d{c}}{d{e}}}Af{}{}}00000000000{{{d{Eb}}{d{C`Cf}}}Ch}{{{d{h}}{d{C`Cf}}}Ch}0{{{d{j}}{d{C`Cf}}}Ch}{{{d{Ed}}{d{C`Cf}}}Ch}{{{d{Ef}}{d{C`Cf}}}Ch}{cc{}}000000{{{d{Eh}}E`j{A`{{d{n}}}}}{{Ad{Eb}}}}00{{{d{Eh}}Ebjl{A`{{d{n}}}}Ef}{{Ad{En}}}}{{hh{d{{Dj{E`}}}}jl{A`{n}}}{{Ad{F`}}}}{{Eh{d{{Dj{E`}}}}jl{d{{A`{Fb}}}}AfAfEf}{{Ff{F`{Fd{E`}}{Fd{E`}}}}}}{{{d{h}}{d{C`c}}}BlCj}{{{d{j}}{d{C`c}}}BlCj}{{{d{Ed}}{d{C`c}}}BlCj}{{{d{Ef}}{d{C`c}}}BlCj}{{}Cd}000000{ce{}{}}0000000{{{d{h}}{A`{{d{b}}}}}Af}{{{d{h}}}Af}0{{{d{h}}}E`}1{{hE`}h}1{hc{}}3{E`h}{{hhh}Eh}{{{d{C`En}}}{{A`{c}}}{}}`{{{d{b}}}h}`{{{d{h}}{d{h}}}{{A`{Ej}}}}{{{d{Eh}}E`{A`{{d{n}}}}}{{Ad{E`}}}}00{{{d{c}}}e{}{}}00000{{{d{c}}}Bf{}}{{{d{h}}E`{A`{{d{n}}}}ceg}{{Ad{E`}}}{{Fj{E`}{{Fh{E`}}}}}{{Fj{E`}{{Fh{f}}}}}{{Fj{f}{{Fh{E`}}}}}}{{{d{h}}E`{A`{{d{n}}}}}{{Ad{E`}}}}40404{c{{Cl{e}}}{}{}}0000000000000{{{d{c}}}Cn{}}000000{{{d{Ef}}}{{A`{Fl}}}}?{{{d{h}}}Af}``{{{d{Fn}}}{{d{G`}}}}{{{d{Gb}}}{{Ad{Gd}}}}{{{d{Gb}}}{{Ad{Gf}}}}0{{{d{Gb}}}{{Ad{Gh}}}}22112{{{d{Gb}}}{{Ad{Gj}}}}322{{{d{Gb}}{d{b}}}{{Ad{G`}}}}0334","D":"Gd","p":[[1,"str"],[1,"reference"],[5,"NaiveDateTime",315],[5,"Duration",84,316],[6,"ClosedWindow",84,317],[6,"TimeUnit",318],[6,"Tz",319],[6,"Option",320],[8,"DatetimeChunked",321],[8,"PolarsResult",322],[1,"bool"],[10,"PolarsRound",0,323],[8,"StringChunked",324],[5,"NaiveTime",325],[8,"TimeChunked",326],[10,"PolarsTruncate",0,327],[10,"PolarsUpsample",0,328],[5,"DataFrame",329],[5,"String",330],[10,"IntoVec",331],[5,"Private",332],[1,"unit"],[10,"AsString",24],[0,"mut"],[6,"Pattern",24,333],[1,"usize"],[5,"Formatter",334],[8,"Result",334],[10,"Hasher",335],[6,"Result",336],[5,"TypeId",337],[5,"DatetimeInfer",58],[10,"Clone",338],[10,"PolarsNumericType",324],[10,"StrpTimeParser",58],[1,"u8"],[1,"slice"],[17,"Error"],[10,"TryFromWithUnit",58],[1,"i64"],[5,"Bounds",84,339],[6,"Label",84,317],[6,"StartBy",84,317],[5,"Window",84,340],[6,"Ordering",341],[6,"DataType",342],[5,"BoundsIter",84,340],[8,"GroupsSlice",343],[8,"TimeZone",342],[5,"Vec",344],[1,"tuple"],[17,"Output"],[10,"Fn",345],[1,"u32"],[10,"AsSeries",294],[5,"Series",346],[10,"TemporalMethods",294],[8,"Int32Chunked",324],[8,"Int8Chunked",324],[8,"BooleanChunked",324],[8,"Int16Chunked",324]],"r":[[1,317],[2,316],[5,323],[6,327],[7,328],[9,340],[11,347],[12,347],[18,347],[22,24],[30,333],[85,339],[86,340],[87,317],[90,316],[92,317],[100,317],[102,294],[106,340],[181,316],[182,316],[216,317],[217,317]],"b":[[200,"impl-Debug-for-Duration"],[201,"impl-Display-for-Duration"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAEBFwAAAAkADQAFABQAAAAXABkAMgACADYAEQBJAAEATAATAGEACQBsAGEA1QAAANcAAQDbAAoA7QABAPEAAgD1AAAA+AACAPwAAQABAQgACwEAAA0BAAAPARoALgEAAA=="}],\
["polars_utils",{"t":"EECCCCCCCCCCCCCCCQQQQCCCCCCCQCCCQCCCCCCCCCQQCCRKMMRKIIIIMNNNNMNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNHHFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNHHHHFNNNNNNNNNNNNNNHHFNNNNNNNNNNNNNNNNNNNNNNKNNNNNKMFNNNNNNNNNNNNNNNNNHHHHFKNNNNNNNNMNNNNNNNNNHNNNNNNNNNNNNNIFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKFIKRKIFKNNNNHNNNNNNNNNNNNNNNNNNNNNNNNMMNNNONNNNNNNMNNNNMNNNNNNNNNHHHKKKRKRNNNNMMMHHKNNNNMMFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNTRKMMHHFNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNKKKKKMMMMHMMMMHHFNNNNNNNNNNNNNNNNNNNNNNNNJFNNNNNNNNNNNNRKKKKRFNNHHNNNNNNNNNNNNNNNNNNNNNNNNNMNMMMNNMNNNNNNNNKMKKKRKKMMMMMMM","n":["IdxSize","NullableIdxSize","abs_diff","aliases","arena","atomic","binary_search","cache","cell","clmul","contention_pool","cpuid","fixedringbuffer","float","floor_divmod","fmt","foreign_vec","format_list","format_list_container","format_smartstring","format_tuple","functions","hashing","idx_vec","index","io","iter","macros","matches_any_order","mem","min_max","mmap","no_call_const","nulls","ord","partitioned","priority","slice","sort","sync","sys","total_ord","unitvec","unreachable_unchecked_release","unwrap","vec","Abs","AbsDiff","abs_diff","max_abs_diff","HashMap","InitHashMaps","PlHashMap","PlHashSet","PlIndexMap","PlIndexSet","new","new","new","new","new","with_capacity","with_capacity","with_capacity","with_capacity","with_capacity","Arena","Node","add","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","cmp","compare","default","default","deref","deref","deref_mut","deref_mut","drop","drop","duplicate","eq","equivalent","equivalent","equivalent","fmt","fmt","from","from","get","get_many_mut","get_mut","get_node","get_unchecked","hash","init","init","into","into","is_empty","len","new","partial_cmp","pop","replace","replace_with","swap","take","to_owned","to_owned","try_from","try_from","try_into","try_into","try_replace_with","type_id","type_id","version","with_capacity","SyncCounter","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref","deref_mut","deref_mut","drop","from","init","into","manual_drop","new","to_owned","try_from","try_into","type_id","find_first_ge_index","find_first_gt_index","FastCachedFunc","FastFixedCache","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref","deref_mut","deref_mut","drop","drop","eval","from","from","get","get_mut","get_or_insert_with","init","init","insert","into","into","new","new","to_owned","try_from","try_from","try_get_or_insert_with","try_into","try_into","type_id","type_id","SyncUnsafeCell","borrow","borrow_mut","default","deref","deref_mut","drop","from","from","from","get","get_mut","init","into","into_inner","new","raw_get","try_from","try_into","type_id","clmul64","portable_clmul64","portable_prefix_xorsum","prefix_xorsum","LowContentionPool","borrow","borrow_mut","deref","deref_mut","drop","from","get","init","into","new","set","try_from","try_into","type_id","has_fast_bmi2","is_avx512_enabled","FixedRingBuffer","as_slices","borrow","borrow_mut","capacity","deref","deref_mut","drop","drop","fill_repeat","from","init","into","is_empty","is_full","len","new","pop_front","push","remaining_capacity","try_from","try_into","type_id","IsFloat","is_f32","is_f64","is_finite","is_float","is_nan","FloorDivMod","wrapping_floor_div_mod","ForeignVec","borrow","borrow_mut","deref","deref","deref_mut","drop","drop","fmt","from","from","from_foreign","get_vec","init","into","try_from","try_into","type_id","arc_map","flatten","range_portion","try_arc_map","BytesHash","DirtyHash","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","deref","deref_mut","dirty_hash","dirty_hash","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","hash_to_partition","init","into","is_null","new","peel_total_ord","to_owned","to_total_ord","tot_eq","tot_hash","try_from","try_into","type_id","unwrap_inner","IdxVec","UnitVec","as_mut","as_mut_slice","as_ref","as_slice","borrow","borrow_mut","capacity","clone","clone_into","clone_to_uninit","default","deref","deref","deref_mut","drop","drop","eq","equivalent","equivalent","equivalent","extend","fmt","from","from","from","from_fallible_iter","from_iter","init","into","is_empty","iter","iter_mut","len","new","pop","push","push_unchecked","reserve","to_owned","try_from","try_into","type_id","with_capacity","Bounded","ChunkId","IdxSize","Indexable","Item","NullCount","NullableChunkId","NullableIdxSize","ToIdx","borrow","borrow","borrow_mut","borrow_mut","check_bounds","clone","clone","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","deref","deref","deref_mut","deref_mut","drop","drop","eq","equivalent","equivalent","equivalent","extract","fmt","fmt","from","from","from","get","get_unchecked","idx","init","init","inner","inner_mut","into","into","is_empty","is_null","is_null_idx","is_valid_bit_pattern","len","null","null","null_count","store","to_idx","to_opt","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","_limit_path_len_io_err","create_file","open_file","EnumerateIdxTrait","FallibleIterator","FromFallibleIterator","IntoIterCopied","IntoIteratorCopied","OwnedItem","enumerate_idx","enumerate_idx","enumerate_u32","enumerate_u32","from_fallible_iter","get_result","into_iter","prefetch_l2","to_mutable_slice","MinMax","max_ignore_nan","max_propagate_nan","min_ignore_nan","min_propagate_nan","nan_max_lt","nan_min_lt","MemReader","MemSlice","Mmap","advise","advise_range","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_to_uninit","clone_to_uninit","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","fmt","from","from","from","from","from_bytes","from_bytes","from_mmap","from_mmap","from_reader","from_slice","from_slice","from_vec","from_vec","init","init","init","into","into","into","lock","make_mut","map","new","position","prefetch","read","read_slice","remaining_len","remap","seek","slice","to_owned","to_owned","to_vec","total_len","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unlock","HAS_NULLS","Inner","IsNull","is_null","unwrap_inner","compare_fn_nan_max","compare_fn_nan_min","PartitionedHashMap","borrow","borrow_mut","deref","deref_mut","drop","from","init","inner","inner_mut","into","new","raw_entry","raw_entry_and_partition","raw_entry_and_partition_mut","raw_entry_mut","try_from","try_into","type_id","Priority","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","cmp","compare","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","init","into","partial_cmp","to_owned","try_from","try_into","type_id","Extrema","GetSaferUnchecked","Slice2Uninit","SliceAble","SortedSlice","as_uninit","get_unchecked_release","get_unchecked_release_mut","is_sorted_ascending","load_padded_le_u64","max_value","min_value","slice","slice_unchecked","arg_sort_ascending","perfect_sort","SyncPtr","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","deref","deref_mut","deref_unchecked","drop","fmt","from","from","from_const","get","init","into","is_null","new","new_null","to_owned","try_from","try_into","type_id","MEMINFO","MemInfo","borrow","borrow_mut","deref","deref_mut","drop","free","from","init","into","try_from","try_into","type_id","SourceItem","ToTotalOrd","TotalEq","TotalHash","TotalOrd","TotalOrdItem","TotalOrdWrap","borrow","borrow_mut","canonical_f32","canonical_f64","clone","clone_into","clone_to_uninit","clone_to_uninit","cmp","compare","deref","deref_mut","dirty_hash","drop","eq","equivalent","equivalent","equivalent","from","ge","gt","hash","init","into","is_null","le","lt","ne","partial_cmp","peel_total_ord","to_owned","to_total_ord","tot_cmp","tot_eq","tot_ge","tot_gt","tot_hash","tot_hash_slice","tot_le","tot_lt","tot_ne","try_from","try_into","type_id","unwrap_inner","UnwrapUncheckedRelease","unwrap_unchecked_release","CapacityByFactor","ConvertVec","IntoRawParts","ItemIn","PushUnchecked","ResizeFaster","convert","convert_owned","fill_or_alloc","into_raw_parts","push_unchecked","raw_parts","with_capacity_by_factor"],"q":[[0,"polars_utils"],[46,"polars_utils::abs_diff"],[50,"polars_utils::aliases"],[66,"polars_utils::arena"],[130,"polars_utils::atomic"],[151,"polars_utils::binary_search"],[153,"polars_utils::cache"],[190,"polars_utils::cell"],[210,"polars_utils::clmul"],[214,"polars_utils::contention_pool"],[229,"polars_utils::cpuid"],[231,"polars_utils::fixedringbuffer"],[254,"polars_utils::float"],[260,"polars_utils::floor_divmod"],[262,"polars_utils::foreign_vec"],[280,"polars_utils::functions"],[284,"polars_utils::hashing"],[318,"polars_utils::idx_vec"],[363,"polars_utils::index"],[429,"polars_utils::io"],[432,"polars_utils::iter"],[445,"polars_utils::mem"],[447,"polars_utils::min_max"],[454,"polars_utils::mmap"],[532,"polars_utils::nulls"],[537,"polars_utils::ord"],[539,"polars_utils::partitioned"],[558,"polars_utils::priority"],[583,"polars_utils::slice"],[597,"polars_utils::sort"],[599,"polars_utils::sync"],[624,"polars_utils::sys"],[638,"polars_utils::total_ord"],[690,"polars_utils::unwrap"],[692,"polars_utils::vec"],[705,"num_traits"],[706,"core::cmp"],[707,"core::marker"],[708,"core::fmt"],[709,"core::clone"],[710,"core::option"],[711,"core::hash"],[712,"core::default"],[713,"core::ops::function"],[714,"core::result"],[715,"core::any"],[716,"core::borrow"],[717,"alloc::vec"],[718,"alloc::sync"],[719,"core::convert"],[720,"core::ops::range"],[721,"core::iter::traits::collect"],[722,"polars_utils::iter::fallible"],[723,"core::slice::iter"],[724,"polars_error"],[725,"std::path"],[726,"std::io::error"],[727,"std::fs"],[728,"polars_utils::iter::enumerate_idx"],[729,"core::error"],[730,"core::iter::traits::iterator"],[731,"memmap2"],[732,"memmap2::advice"],[733,"polars_utils::mmap::private"],[734,"bytes::bytes"],[735,"std::io"],[736,"hashbrown::map"],[737,"core::mem::maybe_uninit"],[738,"core::slice::index"],[739,"num_traits::cast"],[740,"rayon_core::thread_pool"]],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,2,130,0,0,0,0,0,130,10,11,131,132,130,10,11,131,132,0,0,13,15,13,15,13,13,15,13,15,13,15,15,13,15,15,15,13,15,13,15,13,15,13,13,15,15,15,15,15,13,15,13,13,13,13,13,13,15,15,13,15,13,13,13,13,15,13,13,13,13,13,15,13,15,13,15,13,13,15,13,13,13,0,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,0,0,0,0,38,35,38,35,35,35,35,35,38,35,38,35,38,35,38,38,35,35,35,35,38,35,35,38,35,38,35,35,38,35,35,38,35,38,35,0,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,0,0,0,0,0,44,44,44,44,44,44,44,44,44,44,44,44,44,44,0,0,0,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,0,47,47,47,47,47,0,48,0,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,0,0,0,0,0,0,54,54,54,54,54,54,54,54,55,54,54,54,54,54,54,54,54,54,0,54,54,54,54,54,54,54,54,54,54,54,54,54,0,0,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,0,0,0,0,68,0,0,0,0,66,67,66,67,0,66,67,66,67,66,66,67,67,66,67,66,67,66,67,66,66,66,66,67,66,67,66,66,67,68,68,66,66,67,66,67,66,67,70,67,66,66,70,66,67,71,67,72,66,66,67,66,67,66,67,66,67,0,0,0,0,0,0,82,0,82,77,77,77,77,78,61,82,0,0,0,84,84,84,84,84,84,0,0,0,85,85,85,85,87,88,85,87,88,87,88,87,88,87,88,87,85,85,87,87,88,85,87,88,85,87,88,85,87,88,85,87,88,88,87,88,87,88,88,87,88,87,88,85,87,88,85,87,88,85,85,85,88,88,87,88,88,88,85,88,87,87,88,87,88,85,87,88,85,87,88,85,87,88,85,69,69,0,69,69,0,0,0,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,0,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,0,0,0,0,0,103,105,105,107,0,108,108,109,109,0,0,0,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,0,0,114,114,114,114,114,114,114,114,114,114,114,114,122,0,0,0,0,122,0,117,117,0,0,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,122,117,122,110,118,110,110,119,119,110,110,118,117,117,117,117,0,123,0,0,0,125,0,0,125,125,126,127,128,127,129],"f":"````````````````````````````````````````````````{{{d{}{{b{c}}}}{d{}{{b{c}}}}}c{fhjlnA`}}{{}c{}}``````00000{Abc{}}{Ab{{Ad{ce}}}{}{}}{Ab{{Af{c}}}{}}22``{{{Al{Ah{Aj{c}}}}c}An{}}{{{Al{c}}}{{Al{e}}}{}{}}0{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}0{{{Al{Ah{Aj{c}}}}}B`{}}{{{Al{An}}}An}{{{Al{{Aj{c}}}}}{{Aj{c}}}Bb}{{{Al{c}}{Al{Ahe}}}B`{}{}}0{{{Al{c}}}B`{}}00{{{Al{An}}{Al{An}}}Bd}{{{Al{c}}{Al{e}}}Bd{}{}}{{}An}{{}{{Aj{c}}}{}}{Ab{{Al{c}}}{}}0{Ab{{Al{Ahc}}}{}}0{AbB`}0{{{Al{Ah{Aj{c}}}}An}AnBb}{{{Al{An}}{Al{An}}}Bf}{{{Al{c}}{Al{e}}}Bf{}{}}00{{{Al{An}}{Al{AhBh}}}Bj}{{{Al{{Aj{c}}}}{Al{AhBh}}}Bjl}{cc{}}0{{{Al{{Aj{c}}}}An}{{Al{c}}}{}}{{{Al{Ah{Aj{c}}}}{Bl{An}}}{{Bl{{Al{Ahc}}}}}{}}{{{Al{Ah{Aj{c}}}}An}{{Al{Ahc}}}{}}{{{Al{{Aj{c}}}}{Al{c}}}{{Bn{An}}}{}}3{{{Al{An}}{Al{Ahc}}}B`C`}{{}Ab}0{ce{}{}}0{{{Al{{Aj{c}}}}}Bf{}}{{{Al{{Aj{c}}}}}Ab{}}{{}{{Aj{c}}}{}}{{{Al{An}}{Al{An}}}{{Bn{Bd}}}}{{{Al{Ah{Aj{c}}}}}{{Bn{c}}}{}}{{{Al{Ah{Aj{c}}}}Anc}c{}}{{{Al{Ah{Aj{c}}}}Ane}B`Cb{{Cf{c}{{Cd{c}}}}}}{{{Al{Ah{Aj{c}}}}AnAn}B`{}}{{{Al{Ah{Aj{c}}}}An}cCb}{{{Al{c}}}e{}{}}0{c{{Ch{e}}}{}{}}000{{{Al{Ah{Aj{c}}}}Ane}{{Ch{B``}}}Cb{{Cj{c}{{Cd{{Ch{c`}}}}}}}}{{{Al{c}}}Cl{}}0{{{Al{{Aj{c}}}}}Cn{}}{Ab{{Aj{c}}}{}}`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{{Al{D`}}}D`}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{{Al{c}}}B`{}}{{}D`}{{{Al{D`}}}{{Al{c}}}{}}{Ab{{Al{c}}}{}}{{{Al{AhD`}}}{{Al{Ahc}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{cc{}}{{}Ab}{ce{}{}}{{{Al{AhD`}}}B`}{AbD`}{{{Al{c}}}e{}{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{{{Al{{Db{c}}}}c}AbDd}0``{{{Al{c}}}{{Al{e}}}{}{}}0{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}0{{{Al{{Df{ce}}}}}{{Df{ce}}}BbBb}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{{Al{c}}}B`{}}{{}{{Df{ce}}}{DhDj}{}}{Ab{{Al{c}}}{}}0{Ab{{Al{Ahc}}}{}}0{AbB`}0{{{Al{Ah{Dl{ceg}}}}cBf}e{DhDjBb}j{{Cj{c}{{Cd{e}}}}}}{cc{}}0{{{Al{{Df{eg}}}}{Al{c}}}{{Bn{{Al{g}}}}}{DhDjDn}{{E`{c}}DhDj}{}}{{{Al{Ah{Df{eg}}}}{Al{c}}}{{Bn{{Al{Ahg}}}}}{DhDjDn}{{E`{c}}DhDj}{}}{{{Al{Ah{Df{eg}}}}{Al{c}}i}{{Al{Ahg}}}{}{{E`{c}}DhDj}{}{{Cf{{Al{e}}}{{Cd{g}}}}}}{{}Ab}0{{{Al{Ah{Df{ce}}}}ce}{{Al{Ahe}}}{DhDj}{}}{ce{}{}}0{{gAb}{{Dl{ceg}}}{DhDjBb}j{{Cj{c}{{Cd{e}}}}}}{Ab{{Df{ce}}}{DhDj}{}}{{{Al{c}}}e{}{}}{c{{Ch{e}}}{}{}}0{{{Al{Ah{Df{eg}}}}{Al{c}}k}{{Ch{{Al{Ahg}}i}}}{}{{E`{c}}DhDj}{}{}{{Cf{{Al{e}}}{{Cd{{Ch{gi}}}}}}}}11{{{Al{c}}}Cl{}}0`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{}{{Eb{c}}}Cb}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{cc{}}{c{{Eb{c}}}{}}{Edc{}}{{{Al{{Eb{c}}}}}{}Dn}{{{Al{Ah{Eb{c}}}}}{{Al{Ahc}}}Dn}{{}Ab}{ce{}{}}{{{Eb{c}}}c{}}6{{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{{EfEf}Ef}0{EfEf}0`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{cc{}}{{{Al{{Eh{c}}}}}cCb}>={Ab{{Eh{c}}}Cb}{{{Al{{Eh{c}}}}c}B`Cb}<<;{{}Bf}0`{{{Al{{Ej{c}}}}}{{El{{Al{{Db{c}}}}{Al{{Db{c}}}}}}}{}}:9{{{Al{{Ej{c}}}}}Ab{}}98{{{Al{Ah{Ej{c}}}}}B`{}}8{{{Al{Ah{Ej{c}}}}cAb}Abj}8{{}Ab}{ce{}{}}{{{Al{{Ej{c}}}}}Bf{}}05{Ab{{Ej{c}}}{}}{{{Al{Ah{Ej{c}}}}}{{Bn{c}}}{}}{{{Al{Ah{Ej{c}}}}c}{{Bn{B`}}}{}}8{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}`<<{{{Al{En}}}Bf}=0`{{F`F`}{{El{F`F`}}}}`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{Ab{{Al{c}}}{}}{{{Al{{Fb{ce}}}}}{{Al{{Db{e}}}}}{}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{{{Al{Ah{Fb{ce}}}}}B`{}{}}{{{Al{{Fb{ce}}}}{Al{AhBh}}}Bj{}l}{{{Fd{c}}}{{Fb{ec}}}{}{}}{cc{}}{{Abc}{{Fb{ce}}}{}{}}{{{Al{Ah{Fb{ce}}}}}{{Bn{{Al{Ah{Fd{e}}}}}}}{}{}}{{}Ab}{ce{}{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{{{Ff{c}}e}{{Ff{c}}}Bb{{Cj{c}{{Cd{c}}}}}}{{{Al{{Db{e}}}}{Bn{Ab}}}{{Fd{c}}}Bb{{Fh{{Db{c}}}}}}{{AbAb{Fj{Ab}}}{{Fj{Ab}}}}{{{Ff{c}}g}{{Ch{{Ff{c}}e}}}Bb{}{{Cj{c}{{Cd{{Ch{ce}}}}}}}}``{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{{Al{Fl}}}Fl}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{{Al{c}}}B`{}}0{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{Fn}}}Ef}{{{Al{Fl}}}Ef}{AbB`}{{{Al{Fl}}{Al{Fl}}}Bf}{{{Al{c}}{Al{e}}}Bf{}{}}00{{{Al{Fl}}{Al{AhBh}}}Bj}{cc{}}{{{Al{Fl}}{Al{Ahc}}}B`C`}{{EfAb}Ab}{{}Ab}{ce{}{}}{{{Al{Fl}}}Bf}{{{Bn{{Al{{Db{G`}}}}}}Ef}Fl}2{{{Al{c}}}e{}{}}{{{Al{Fl}}}c{}};7{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{Flc{}}``{{{Al{Ah{Gb{c}}}}}{{Al{Ah{Db{c}}}}}{}}0{{{Al{{Gb{c}}}}}{{Al{{Db{c}}}}}{}}0{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{{Al{{Gb{c}}}}}Ab{}}{{{Al{{Gb{c}}}}}{{Gb{c}}}{}}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{{Al{c}}}B`{}}{{}{{Gb{c}}}{}}{{{Al{{Gb{c}}}}}{{Al{e}}}{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{{{Al{Ah{Gb{c}}}}}B`{}}{{{Al{{Gb{c}}}}{Al{{Gb{c}}}}}BfGd}{{{Al{c}}{Al{e}}}Bf{}{}}00{{{Al{Ah{Gb{c}}}}e}B`{}{{Gh{}{{Gf{c}}}}}}{{{Al{{Gb{c}}}}{Al{AhBh}}}Bjl}{{{Fd{c}}}{{Gb{c}}}{}}{{{Al{{Db{c}}}}}{{Gb{c}}}Bb}{cc{}}{g{{Ch{ic}}}{}{}{{Gj{c}{{Gf{e}}}}}{}}{e{{Gb{c}}}{}{{Gh{}{{Gf{c}}}}}}{{}Ab}{ce{}{}}{{{Al{{Gb{c}}}}}Bf{}}{{{Al{{Gb{c}}}}}{{Gl{c}}}{}}{{{Al{Ah{Gb{c}}}}}{{Gn{c}}}{}}{{{Al{{Gb{c}}}}}Ab{}}{{}{{Gb{c}}}{}}{{{Al{Ah{Gb{c}}}}}{{Bn{c}}}{}}{{{Al{Ah{Gb{c}}}}c}B`{}}0{{{Al{Ah{Gb{c}}}}Ab}B`{}}{{{Al{c}}}e{}{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{Ab{{Gb{c}}}{}}`````````{{{Al{c}}}{{Al{e}}}{}{}}0{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}0{{{Al{{Db{H`}}}}H`}{{Hb{B`}}}}{{{Al{Hd}}}Hd}{{{Al{Hf}}}Hf}{{{Al{c}}{Al{Ahe}}}B`{}{}}0{{{Al{c}}}B`{}}000{Ab{{Al{c}}}{}}0{Ab{{Al{Ahc}}}{}}0{AbB`}0{{{Al{Hd}}{Al{Hd}}}Bf}{{{Al{c}}{Al{e}}}Bf{}{}}00{Hf{{El{H`H`}}}}{{{Al{Hd}}{Al{AhBh}}}Bj}{{{Al{Hf}}{Al{AhBh}}}Bj}{cc{}}{H`Hd}1{{{Al{{Hh{}{{Gf{c}}}}}}Ab}cHj}0{{{Al{Hd}}}H`}{{}Ab}0`{{{Al{AhHf}}}{{Al{AhEf}}}}{ce{}{}}0{{{Al{Hl}}}Bf}{{{Al{Hf}}}Bf}{{{Al{Hd}}}Bf}{{{Al{c}}}Bf{}}{{{Al{Hl}}}Ab}{{}Hd}{{}Hf}{{{Al{Hn}}}Ab}{{H`H`}Hf}{{I`Ef}H`}{{{Al{Hd}}}{{Bn{H`}}}}{{{Al{c}}}e{}{}}0{c{{Ch{e}}}{}{}}000{{{Al{c}}}Cl{}}0{{{Al{Ib}}Id}If}{{{Al{Ib}}}{{Hb{Ih}}}}0``````{Ij{{`{IjH`}}}}0{Ij{{`{IjCn}}}}0{g{{Ch{Ilc}}}In{}{{Gj{c}{{Gf{e}}}}}}{{{Al{AhGj}}}{{Ch{B`c}}}In}{{{Jd{}{{J`{c}}{Jb{e}}}}}e{}{{Jf{}{{Gf{c}}}}}}{G`B`}{{{Al{{Db{c}}}}}{{Al{Ah{Db{c}}}}}j}`{{JhJh}Jh}000{{{Al{Jh}}{Al{Jh}}}Bf}0```{{{Al{Jj}}Jl}{{Ch{B`Id}}}}{{{Al{Jj}}JlAbAb}{{Ch{B`Id}}}}{{{Al{Jj}}}{{Al{{Db{G`}}}}}}{{{Al{c}}}{{Al{e}}}{}{}}00{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}00{{{Al{Jn}}}Jn}{{{Al{K`}}}K`}{{{Al{c}}{Al{Ahe}}}B`{}{}}0{{{Al{c}}}B`{}}0{{}Jn}{Ab{{Al{c}}}{}}80{{{Al{Jn}}}{{Al{c}}}{}}1{Ab{{Al{Ahc}}}{}}00{AbB`}00{{{Al{Jj}}{Al{AhBh}}}{{Ch{B`Kb}}}}{{{Al{Jn}}{Al{AhBh}}}Bj}{{{Al{K`}}{Al{AhBh}}}Bj}{cc{}}00{JnK`}{KdJn}{KdK`}{{{Ff{Jj}}}Jn}{{{Ff{Jj}}}K`}{c{{Kf{K`}}}Kh}{{{Al{{Db{G`}}}}}Jn}{{{Al{{Db{G`}}}}}K`}{{{Fd{G`}}}Jn}{{{Fd{G`}}}K`}{{}Ab}00{ce{}{}}00{{{Al{Jj}}}{{Ch{B`Id}}}}{Jj{{Ch{KjId}}}}{c{{Ch{JjId}}}Kl}>{{{Al{K`}}}Ab}{{{Al{Jn}}}B`}{{{Al{AhK`}}{Al{Ah{Db{G`}}}}}{{Kf{Ab}}}}{{{Al{AhK`}}Ab}Jn}3{{{Al{AhJj}}AbKn}{{Ch{B`Id}}}}{{{Al{AhK`}}L`}{{Kf{Ef}}}}{{{Al{Jn}}{Fj{Ab}}}Jn}{{{Al{c}}}e{}{}}0{Jn{{Fd{G`}}}}8{c{{Ch{e}}}{}{}}00000{{{Al{c}}}Cl{}}00=```{{{Al{{Hj{}{{Lb{c}}}}}}}Bf{}}{{{Hj{}{{Lb{c}}}}}c{}}{{{Al{c}}{Al{c}}}Bd{hEn}}0`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{cc{}}{{}Ab}{{{Al{{Ld{ceg}}}}}{{Al{{Db{{Lf{ceg}}}}}}}{}{}{}}{{{Al{Ah{Ld{ceg}}}}}{{Al{Ah{Fd{{Lf{ceg}}}}}}}{}{}{}}{ce{}{}}{{{Fd{{Lf{ceg}}}}}{{Ld{ceg}}}{}{}{}}{{{Al{{Ld{ceg}}}}Ef}{{Lh{ceg}}}{}{}{}}{{{Al{{Ld{ceg}}}}Ef}{{El{{Lh{ceg}}Ab}}}{}{}{}}{{{Al{Ah{Ld{ceg}}}}Ef}{{El{{Lj{ceg}}Ab}}}{}{}{}}{{{Al{Ah{Ld{ceg}}}}Ef}{{Lj{ceg}}}{}{}{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{{Al{{Ll{ce}}}}}{{Ll{ce}}}BbBb}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{{Al{c}}}B`{}}0{{{Al{{Ll{ce}}}}{Al{{Ll{ce}}}}}Bd{DdDj}{}}{{{Al{c}}{Al{e}}}Bd{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{{{Al{{Ll{ce}}}}{Al{{Ll{ce}}}}}BfDj{}}{{{Al{c}}{Al{e}}}Bf{}{}}00{{{Al{{Ll{ce}}}}{Al{AhBh}}}Bjll}{cc{}}{{}Ab}{ce{}{}}{{{Al{{Ll{ce}}}}{Al{{Ll{ce}}}}}{{Bn{Bd}}}{DdDj}{}}{{{Al{c}}}e{}{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}`````{{{Al{Ln}}}{{Al{{Db{{M`{c}}}}}}}{}}{{{Al{Mb}}e}Al{}{{Md{{Db{c}}}}}}{{{Al{AhMb}}e}{{Al{Ah}}}{}{{Md{{Db{c}}}}}}{{{Al{Mf}}}Bf}{{{Al{{Db{G`}}}}}Ef}{{{Al{Mh}}}{{Bn{{Al{c}}}}}{}}0{{{Al{Mj}}{Fj{Ab}}}Mj}0{{e{Al{Ah{Fd{G`}}}}Ab}{{Al{Ah{Db{g}}}}}{Mlj}{{Gh{}{{Gf{c}}}}}{Mnj}}{{{Al{N`}}{Al{{Db{{El{H`H`}}}}}}{Al{Ah{Fd{H`}}}}}B`}`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{{Al{{Nb{c}}}}}{{Nb{c}}}{}}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{{Al{c}}}B`{}}0{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{{Nb{c}}}}}{{Al{c}}}{}}{AbB`}{{{Al{{Nb{c}}}}{Al{AhBh}}}Bjl}{cc{}}{{}{{Nb{c}}}{}}0{{{Al{{Nb{c}}}}}{}{}}{{}Ab}{ce{}{}}{{{Al{{Nb{c}}}}}Bf{}}44{{{Al{c}}}e{}{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}``{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}?><{{{Al{Nd}}}Ef};87443```````21{NfNf}{NhNh}{{{Al{{Nj{c}}}}}{{Nj{c}}}Bb}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{{Al{c}}}B`{}}0{{{Al{{Nj{c}}}}{Al{{Nj{c}}}}}BdMl}{{{Al{c}}{Al{e}}}Bd{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{{Nj{c}}}}}EfFn}{AbB`}{{{Al{{Nj{c}}}}{Al{{Nj{c}}}}}BfNl}{{{Al{c}}{Al{e}}}Bf{}{}}00{cc{}}{{{Al{{Nj{c}}}}{Al{{Nj{c}}}}}BfMl}0{{{Al{{Nj{c}}}}{Al{Ahe}}}B`NnC`}{{}Ab}{ce{}{}}{{{Al{{Nj{c}}}}}BfHj}447{{{Al{{Nj{c}}}}{Al{{Nj{c}}}}}{{Bn{Bd}}}Ml}2{{{Al{c}}}e{}{}}{{{Al{{Od{}{{O`{c}}{Ob{e}}}}}}}c{}{}}{{{Al{Ml}}{Al{Ml}}}Bd}{{{Al{Nl}}{Al{Nl}}}Bf}{{{Al{Ml}}{Al{Ml}}}Bf}0{{{Al{Nn}}{Al{Ahc}}}B`C`}{{{Al{{Db{Nn}}}}{Al{Ahc}}}B`C`}223{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{{{Nj{c}}}eHj{}}`{Ofc{}}``````{{{Al{{Oj{}{{Oh{c}}}}}}g}{{Fd{e}}}{}{}{{Cj{{Al{c}}}{{Cd{e}}}}}}{{{Oj{}{{Oh{c}}}}g}{{Fd{e}}}{}{}{{Cj{c}{{Cd{e}}}}}}{{{Al{AhOl}}Abc}B`j}{On{{El{AbAb}}}}{{{Al{AhA@`}}c}B`{}}{{{Al{On}}}{{El{AbAb}}}}{{AbNh}A@b}","D":"Nf","p":[[17,"Abs"],[10,"AbsDiff",46],[10,"Num",705],[10,"PartialOrd",706],[10,"Copy",707],[10,"Debug",708],[10,"Send",707],[10,"Sync",707],[1,"usize"],[8,"PlHashMap",50],[8,"PlHashSet",50],[0,"mut"],[5,"Arena",66],[1,"reference"],[5,"Node",66],[1,"unit"],[10,"Clone",709],[6,"Ordering",706],[1,"bool"],[5,"Formatter",708],[8,"Result",708],[1,"array"],[6,"Option",710],[10,"Hasher",711],[10,"Default",712],[17,"Output"],[10,"FnOnce",713],[6,"Result",714],[10,"FnMut",713],[5,"TypeId",715],[1,"u32"],[5,"SyncCounter",130],[1,"slice"],[10,"Ord",706],[5,"FastFixedCache",153],[10,"Hash",711],[10,"Eq",706],[5,"FastCachedFunc",153],[10,"Sized",707],[10,"Borrow",716],[5,"SyncUnsafeCell",190],[1,"never"],[1,"u64"],[5,"LowContentionPool",214],[5,"FixedRingBuffer",231],[1,"tuple"],[10,"IsFloat",254],[10,"FloorDivMod",260],[5,"ForeignVec",262],[5,"Vec",717],[5,"Arc",718],[10,"AsRef",719],[5,"Range",720],[5,"BytesHash",284],[10,"DirtyHash",284],[1,"u8"],[5,"UnitVec",318],[10,"PartialEq",706],[17,"Item"],[10,"IntoIterator",721],[10,"FallibleIterator",432,722],[5,"Iter",723],[5,"IterMut",723],[8,"IdxSize",363],[8,"PolarsResult",724],[5,"NullableIdxSize",363],[5,"ChunkId",363],[10,"Indexable",363],[10,"IsNull",532],[10,"Bounded",363],[10,"NullCount",363],[10,"ToIdx",363],[5,"Path",725],[5,"Error",726],[6,"PolarsError",724],[5,"File",727],[10,"EnumerateIdxTrait",432,728],[10,"FromFallibleIterator",432,722],[10,"Error",729],[17,"OwnedItem"],[17,"IntoIterCopied"],[10,"IntoIteratorCopied",432],[10,"Iterator",730],[10,"MinMax",447],[5,"Mmap",454,731],[6,"Advice",732],[5,"MemSlice",454,733],[5,"MemReader",454],[5,"Error",708],[5,"Bytes",734],[8,"Result",726],[10,"Read",735],[5,"MmapMut",731],[10,"MmapAsRawDesc",731],[5,"RemapOptions",731],[6,"SeekFrom",735],[17,"Inner"],[5,"PartitionedHashMap",539],[5,"HashMap",736],[5,"RawEntryBuilder",736],[5,"RawEntryBuilderMut",736],[5,"Priority",558],[10,"Slice2Uninit",583],[20,"MaybeUninit",737],[10,"GetSaferUnchecked",583],[10,"SliceIndex",738],[10,"SortedSlice",583],[10,"Extrema",583],[10,"SliceAble",583],[10,"TotalOrd",638],[10,"FromPrimitive",739],[5,"ThreadPool",740],[5,"SyncPtr",599],[5,"MemInfo",624],[1,"f32"],[1,"f64"],[5,"TotalOrdWrap",638],[10,"TotalEq",638],[10,"TotalHash",638],[17,"TotalOrdItem"],[17,"SourceItem"],[10,"ToTotalOrd",638],[10,"UnwrapUncheckedRelease",690],[17,"ItemIn"],[10,"ConvertVec",692],[10,"ResizeFaster",692],[10,"IntoRawParts",692],[10,"PushUnchecked",692],[10,"CapacityByFactor",692],[10,"InitHashMaps",50],[8,"PlIndexMap",50],[8,"PlIndexSet",50]],"r":[[0,363],[1,363],[432,728],[433,722],[434,722],[455,733],[456,731]],"b":[[342,"impl-From%3CVec%3CT%3E%3E-for-UnitVec%3CT%3E"],[343,"impl-From%3C%26%5BT%5D%3E-for-UnitVec%3CT%3E"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAE4CSgAAAAgACgBYAGUAAABnAAEAagACAG8AEwCEAAoAkAAAAJMABACbAA8ArQAFALUACQDAAAEAwwACAMgAAADLAAAA0AAMAN4AAQDhAAYA6gAGAPMAAAD1AAMA+wADAAABBgAIAQgAFAEAABYBBgAeARAAMAECADQBCwBBARcAWgECAF4BBgBmASgAkAEAAJIBAACUAQQAmwEYALUBAAC3AQYAwAEGAMwBGwDrAQAA7gECAPUBAgD+AQEAAQICAAUCAAAHAgEACgIJABUCBAAcAgUAIwICACcCBwAwAg8AQQIAAEMCCgBQAgQAVgIAAFkCBwBiAgEAZQIDAGoCAABsAgUAcwIEAHoCAAB8AgMAhAIDAIoCDQCZAgMAngIVALUCBAC7AgMAwAIBAA=="}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
